<launch>

    <arg name="ip_address" default="192.168.1.110" />
    <arg name="send_format" default="288" />
    <arg name="recv_format" default="292" />
    <arg name="denso_robot" default="vs6577"/>
    <arg name="live_robot_name" default="add_post_pro_robot_b120"/>     <!-- Change default for different environments-->
    <arg name="config_name" default="$(find add_post_pro_bringup)/rviz/add_post_pro_default.rviz"/>
    <arg name="load_robot_description" default="true"/>
    <!-- <arg name="robot_description" default="robot_description"/> -->
    <arg name="bcap_slave_control_cycle_msec" default="8" />
    <arg name="use_gui" default="false" />
    <arg name="direct_joint_control" default="false"/>
    <arg name="robot_name" default="add_post_pro_depowdering" />
    <arg name="pipeline" default="ompl" />
    <arg name="debug" default="false" />

    <env name="GAZEBO_MODEL_PATH" value="$(find add_post_pro_simulation)/gazebo_models/"/>

    <param name="robot_description" command="xacro $(find depowdering_aman)/urdf/depowdering_gripper_robot.xacro"/>

    <!-- Load the controllers -->
    <rosparam command="load" file="$(find depowdering_aman)/config/controllers.yaml"/>
    <!-- Connect to live robot -->
    <include ns="/$(arg robot_name)" file="$(find bcap_service)/launch/bcap_service.launch.xml">
        <arg name="ip_address" value="$(arg ip_address)" />
    </include>

    <include ns="/$(arg robot_name)" file="$(find denso_robot_core)/launch/denso_robot_core.launch.xml">
        <arg name="bcap_slave_control_cycle_msec" value="$(arg bcap_slave_control_cycle_msec)" />
    </include>

    <include ns="/$(arg robot_name)" file="$(find denso_robot_control)/launch/denso_robot_control.launch.xml">
        <arg name="send_format" value="$(arg send_format)" />
        <arg name="recv_format" value="$(arg recv_format)" />
    </include>


    <!-- Controller -->
    <include ns="/$(arg robot_name)" file="$(find add_post_pro_robot)/config/vs6577.launch.xml" />
    <node name="denso_robot_control" pkg="denso_robot_control" type="denso_robot_control" output="screen" ns="/$(arg robot_name)"/>

    <!-- <rosparam file="$(find add_post_pro_robot)/config/add_post_pro_robot_b120_control.yaml" command="load" /> -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        ns="/$(arg robot_name)" args="joint_state_controller arm_controller --timeout 60" />
    
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="false"/>
        <param name="publish_frequency" type="double" value="125.0" />
        <rosparam param="source_list" subst_value = "true">[/$(arg robot_name)/joint_states]</rosparam>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher"
        type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/$(arg robot_name)/joint_states" />
    </node>

    <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
    <include file="$(find add_post_pro_gripper_config)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true"/>
        <arg name="fake_execution" value="false"/>
        <arg name="info" value="true"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="pipeline" value="$(arg pipeline)"/>
        <arg name="publish_monitored_planning_scene" value="true" />
    </include>

    <!-- Run Rviz and load the default config to see the state of the move_group node -->
    <include file="$(find add_post_pro_gripper_config)/launch/moveit_rviz.launch">
        <arg name="rviz_config" value="$(find add_post_pro_gripper_config)/launch/moveit.rviz"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- Setup Planning Scene and Spawn Objects -->
    <node name="powder_box_spawn" pkg="depowdering_aman" type="generate_pickup_box.py"                  output="screen"/> 
    <node name="setup_rviz_scene" pkg="depowdering_aman" type="add_object_in_planning_gripper_scene.py" output="screen"/> 
    
</launch>