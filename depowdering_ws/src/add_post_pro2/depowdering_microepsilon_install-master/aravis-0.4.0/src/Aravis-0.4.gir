<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <namespace name="Aravis"
             version="0.4"
             shared-library="libaravis-0.4.so.0"
             c:identifier-prefixes="Arv"
             c:symbol-prefixes="arv">
    <alias name="PixelFormat" c:type="ArvPixelFormat">
      <source-position filename="arvenums.h" line="77"/>
      <type name="guint32" c:type="guint32"/>
    </alias>
    <enumeration name="AcquisitionMode"
                 glib:type-name="ArvAcquisitionMode"
                 glib:get-type="arv_acquisition_mode_get_type"
                 c:type="ArvAcquisitionMode">
      <member name="continuous"
              value="0"
              c:identifier="ARV_ACQUISITION_MODE_CONTINUOUS"
              glib:nick="continuous">
        <doc xml:space="preserve"
             filename="arvenums.h"
             line="65">continuous acquisition</doc>
      </member>
      <member name="single_frame"
              value="1"
              c:identifier="ARV_ACQUISITION_MODE_SINGLE_FRAME"
              glib:nick="single-frame">
        <doc xml:space="preserve"
             filename="arvenums.h"
             line="66">only one frame will be acquired</doc>
      </member>
      <function name="from_string"
                c:identifier="arv_acquisition_mode_from_string">
        <source-position filename="arvenums.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="arv_acquisition_mode_to_string">
        <source-position filename="arvenums.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="Auto"
                 glib:type-name="ArvAuto"
                 glib:get-type="arv_auto_get_type"
                 c:type="ArvAuto">
      <member name="off" value="0" c:identifier="ARV_AUTO_OFF" glib:nick="off">
        <doc xml:space="preserve"
             filename="arvenums.h"
             line="49">manual setting</doc>
      </member>
      <member name="once"
              value="1"
              c:identifier="ARV_AUTO_ONCE"
              glib:nick="once">
        <doc xml:space="preserve"
             filename="arvenums.h"
             line="50">automatic setting done once, then returns to manual</doc>
      </member>
      <member name="continuous"
              value="2"
              c:identifier="ARV_AUTO_CONTINUOUS"
              glib:nick="continuous">
        <doc xml:space="preserve"
             filename="arvenums.h"
             line="51">setting is adjusted continuously</doc>
      </member>
      <function name="from_string" c:identifier="arv_auto_from_string">
        <source-position filename="arvenums.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="arv_auto_to_string">
        <source-position filename="arvenums.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <function-macro name="BUFFER" c:identifier="ARV_BUFFER" introspectable="0">
      <source-position filename="arvbuffer.h" line="85"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUFFER_CLASS"
                    c:identifier="ARV_BUFFER_CLASS"
                    introspectable="0">
      <source-position filename="arvbuffer.h" line="86"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUFFER_GET_CLASS"
                    c:identifier="ARV_BUFFER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvbuffer.h" line="89"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Buffer"
           c:symbol-prefix="buffer"
           c:type="ArvBuffer"
           parent="GObject.Object"
           glib:type-name="ArvBuffer"
           glib:get-type="arv_buffer_get_type"
           glib:type-struct="BufferClass">
      <doc xml:space="preserve"
           filename="arvbuffer.c"
           line="23">#ArvBuffer provides a class for the instantiation of buffers used for the
storage of the separate images of the video stream. The actual data space
may either be allocated by #ArvBuffer during an object instatiation, of
preallocated. #ArvBuffer also allows the transmission of image metadata,
such as offsets and size of the transmitted region of interrest, pixel
format and time stamp.</doc>
      <source-position filename="arvbuffer.h" line="102"/>
      <constructor name="new" c:identifier="arv_buffer_new" version="0.2.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="80">Creates a new buffer for the storage of the video stream images.
The data space can be either preallocated, and the caller is responsible
for it's deallocation, or allocated by this function. If it is the case,
data memory will be freed when the buffer is destroyed.</doc>
        <source-position filename="arvbuffer.h" line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="90">a new #ArvBuffer object</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="82">payload size</doc>
            <type name="gsize" c:type="size_t"/>
          </parameter>
          <parameter name="preallocated"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="83">preallocated memory buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_allocate"
                   c:identifier="arv_buffer_new_allocate"
                   version="0.2.3">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="101">Creates a new buffer for the storage of the video stream images.
The data space is allocated by this function, and will
be freed when the buffer is destroyed.</doc>
        <source-position filename="arvbuffer.h" line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="109">a new #ArvBuffer object</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="103">payload size</doc>
            <type name="gsize" c:type="size_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="arv_buffer_new_full"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="39">Creates a new buffer for the storage of the video stream images.
The data space can be either preallocated, and the caller is responsible
for it's deallocation, or allocated by this function. If it is the case,
data memory will be freed when the buffer is destroyed.

If @user_data_destroy_func is non NULL, it will be called in order to destroy
user_data when the buffer is destroyed.</doc>
        <source-position filename="arvbuffer.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="54">a new #ArvBuffer object</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="41">payload size</doc>
            <type name="gsize" c:type="size_t"/>
          </parameter>
          <parameter name="preallocated"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="42">preallocated memory buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="43">a pointer to user data associated to this buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="user_data_destroy_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="44">an optional user data destroy callback</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_chunk_data"
              c:identifier="arv_buffer_get_chunk_data"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="165">Chunk data accessor.</doc>
        <source-position filename="arvbuffer.h" line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="173">a pointer to the chunk data.</doc>
          <array length="1" zero-terminated="0" c:type="void*">
            <type name="guint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="167">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="chunk_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="168">chunk id</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="169">location to store chunk data size, or %NULL</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data"
              c:identifier="arv_buffer_get_data"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="137">Buffer data accessor.</doc>
        <source-position filename="arvbuffer.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="144">a pointer to the buffer data.</doc>
          <array length="0" zero-terminated="0" c:type="void*">
            <type name="guint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="139">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="140">location to store data size, or %NULL</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frame_id"
              c:identifier="arv_buffer_get_frame_id"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="337">Gets the buffer frame id. For GigEVision devices, valid values are in the
1..65535 range.</doc>
        <source-position filename="arvbuffer.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="344">frame id, 0 on error.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="339">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_height"
              c:identifier="arv_buffer_get_image_height"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="406">Gets the image width. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="arvbuffer.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="412">image height, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="408">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_pixel_format"
              c:identifier="arv_buffer_get_image_pixel_format"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="466">Gets the image pixel format. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="arvbuffer.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="472">image pixel format.</doc>
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="468">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_region"
              c:identifier="arv_buffer_get_image_region"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="357">Gets the image region. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="arvbuffer.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="359">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="x"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="360">image x offset placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="361">image y offset placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="width"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="362">image width placholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="363">image height placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_image_width"
              c:identifier="arv_buffer_get_image_width"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="386">Gets the image width. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="arvbuffer.h" line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="392">image width, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="388">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_x"
              c:identifier="arv_buffer_get_image_x"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="426">Gets the image x offset. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="arvbuffer.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="432">image x offset, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="428">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_y"
              c:identifier="arv_buffer_get_image_y"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="446">Gets the image y offset. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="arvbuffer.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="452">image y offset, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="448">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_payload_type"
              c:identifier="arv_buffer_get_payload_type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="257">Gets the buffer payload type.</doc>
        <source-position filename="arvbuffer.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="263">payload type.</doc>
          <type name="BufferPayloadType" c:type="ArvBufferPayloadType"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="259">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="arv_buffer_get_status"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="238">Gets the buffer acquisition status.</doc>
        <source-position filename="arvbuffer.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="244">buffer acquisition status.</doc>
          <type name="BufferStatus" c:type="ArvBufferStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="240">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp"
              c:identifier="arv_buffer_get_timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="297">Gets the buffer camera timestamp, expressed as nanoseconds. Not all devices
provide reliable timestamp, which means sometimes its better to rely on the
buffer completion host local time (given by @g_get_realtime for example).</doc>
        <source-position filename="arvbuffer.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="305">buffer timestamp, in nanoseconds.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="299">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_data"
              c:identifier="arv_buffer_get_user_data"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="219">Gets a pointer to user data set by arv_buffer_new_full.</doc>
        <source-position filename="arvbuffer.h" line="113"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="arvbuffer.c"
               line="225">user data, or NULL if not set.</doc>
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="221">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_timestamp"
              c:identifier="arv_buffer_set_timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvbuffer.c"
             line="318">Sets the buffer timestamp, which allows to override the timpestamp set by
the camera, which in some case is incorrect.</doc>
        <source-position filename="arvbuffer.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="320">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="timestamp_ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvbuffer.c"
                 line="321">a timestamp, expressed as nanoseconds</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="BufferPrivate" c:type="ArvBufferPrivate*"/>
      </field>
    </class>
    <record name="BufferClass"
            c:type="ArvBufferClass"
            glib:is-gtype-struct-for="Buffer">
      <source-position filename="arvbuffer.h" line="102"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="BufferPayloadType"
                 glib:type-name="ArvBufferPayloadType"
                 glib:get-type="arv_buffer_payload_type_get_type"
                 c:type="ArvBufferPayloadType">
      <member name="unknown"
              value="-1"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="59">unknown payload type</doc>
      </member>
      <member name="image"
              value="1"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_IMAGE"
              glib:nick="image">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="60">image data</doc>
      </member>
      <member name="rawdata"
              value="2"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_RAWDATA"
              glib:nick="rawdata">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="61">raw data</doc>
      </member>
      <member name="file"
              value="3"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_FILE"
              glib:nick="file">
        <doc xml:space="preserve" filename="arvbuffer.h" line="62">file</doc>
      </member>
      <member name="chunk_data"
              value="4"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA"
              glib:nick="chunk-data">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="63">chunk data</doc>
      </member>
      <member name="extended_chunk_data"
              value="5"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_EXTENDED_CHUNK_DATA"
              glib:nick="extended-chunk-data">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="64">extended chunk data</doc>
      </member>
      <member name="jpeg"
              value="6"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_JPEG"
              glib:nick="jpeg">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="65">JPEG data</doc>
      </member>
      <member name="jpeg2000"
              value="7"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_JPEG2000"
              glib:nick="jpeg2000">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="66">JPEG2000 data</doc>
      </member>
      <member name="h264"
              value="8"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_H264"
              glib:nick="h264">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="67">h264 data</doc>
      </member>
      <member name="multizone_image"
              value="9"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_MULTIZONE_IMAGE"
              glib:nick="multizone-image">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="68">multizone image</doc>
      </member>
    </enumeration>
    <record name="BufferPrivate" c:type="ArvBufferPrivate" disguised="1">
      <source-position filename="arvbuffer.h" line="91"/>
    </record>
    <enumeration name="BufferStatus"
                 glib:type-name="ArvBufferStatus"
                 glib:get-type="arv_buffer_status_get_type"
                 c:type="ArvBufferStatus">
      <member name="unknown"
              value="-1"
              c:identifier="ARV_BUFFER_STATUS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="34">unknown status</doc>
      </member>
      <member name="success"
              value="0"
              c:identifier="ARV_BUFFER_STATUS_SUCCESS"
              glib:nick="success">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="35">the buffer contains a valid image</doc>
      </member>
      <member name="cleared"
              value="1"
              c:identifier="ARV_BUFFER_STATUS_CLEARED"
              glib:nick="cleared">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="36">the buffer is cleared</doc>
      </member>
      <member name="timeout"
              value="2"
              c:identifier="ARV_BUFFER_STATUS_TIMEOUT"
              glib:nick="timeout">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="37">timeout was reached before all packets are received</doc>
      </member>
      <member name="missing_packets"
              value="3"
              c:identifier="ARV_BUFFER_STATUS_MISSING_PACKETS"
              glib:nick="missing-packets">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="38">stream has missing packets</doc>
      </member>
      <member name="wrong_packet_id"
              value="4"
              c:identifier="ARV_BUFFER_STATUS_WRONG_PACKET_ID"
              glib:nick="wrong-packet-id">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="39">stream has packet with wrong id</doc>
      </member>
      <member name="size_mismatch"
              value="5"
              c:identifier="ARV_BUFFER_STATUS_SIZE_MISMATCH"
              glib:nick="size-mismatch">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="40">the received image didn't fit in the buffer data space</doc>
      </member>
      <member name="filling"
              value="6"
              c:identifier="ARV_BUFFER_STATUS_FILLING"
              glib:nick="filling">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="41">the image is currently being filled</doc>
      </member>
      <member name="aborted"
              value="7"
              c:identifier="ARV_BUFFER_STATUS_ABORTED"
              glib:nick="aborted">
        <doc xml:space="preserve"
             filename="arvbuffer.h"
             line="42">the filling was aborted before completion</doc>
      </member>
    </enumeration>
    <function-macro name="CAMERA" c:identifier="ARV_CAMERA" introspectable="0">
      <source-position filename="arvcamera.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAMERA_CLASS"
                    c:identifier="ARV_CAMERA_CLASS"
                    introspectable="0">
      <source-position filename="arvcamera.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAMERA_GET_CLASS"
                    c:identifier="ARV_CAMERA_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvcamera.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHUNK_PARSER"
                    c:identifier="ARV_CHUNK_PARSER"
                    introspectable="0">
      <source-position filename="arvchunkparser.h" line="49"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHUNK_PARSER_CLASS"
                    c:identifier="ARV_CHUNK_PARSER_CLASS"
                    introspectable="0">
      <source-position filename="arvchunkparser.h" line="50"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHUNK_PARSER_GET_CLASS"
                    c:identifier="ARV_CHUNK_PARSER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvchunkparser.h" line="53"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Camera"
           c:symbol-prefix="camera"
           c:type="ArvCamera"
           parent="GObject.Object"
           glib:type-name="ArvCamera"
           glib:get-type="arv_camera_get_type"
           glib:type-struct="CameraClass">
      <doc xml:space="preserve"
           filename="arvcamera.c"
           line="23">#ArvCamera is a class for the generic control of cameras. It hides the
complexity of the genicam interface by providing a simple API, with the
drawback of not exposing all the available features. See #ArvDevice and
#ArvGc for a more advanced use of the Aravis library.

&lt;example id="arv-example"&gt;&lt;title&gt;Example use of the ArvCamera API&lt;/title&gt;
&lt;programlisting&gt;
&lt;xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="../../../../tests/arvexample.c"&gt;
  &lt;xi:fallback&gt;FIXME: MISSING XINCLUDE CONTENT&lt;/xi:fallback&gt;
&lt;/xi:include&gt;
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
      <source-position filename="arvcamera.h" line="49"/>
      <constructor name="new" c:identifier="arv_camera_new" version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1644">Creates a new #ArvCamera. If @name is null, it will instantiate the
first available camera.</doc>
        <source-position filename="arvcamera.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1651">a new #ArvCamera.</doc>
          <type name="Camera" c:type="ArvCamera*"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1646">name of the camera.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="abort_acquisition"
              c:identifier="arv_camera_abort_acquisition"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="562">Aborts video stream acquisition.</doc>
        <source-position filename="arvcamera.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="564">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_chunk_parser"
              c:identifier="arv_camera_create_chunk_parser"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1625">Creates a new #ArvChunkParser object, used for the extraction of chunk data from #ArvBuffer.</doc>
        <source-position filename="arvcamera.h" line="146"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1631">a new #ArvChunkParser.</doc>
          <type name="ChunkParser" c:type="ArvChunkParser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1627">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_stream"
              c:identifier="arv_camera_create_stream"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="106">Creates a new #ArvStream for video stream handling. See
#ArvStreamCallback for details regarding the callback function.</doc>
        <source-position filename="arvcamera.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="115">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="108">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="109">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="110">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_acquisition_mode"
              c:identifier="arv_camera_get_acquisition_mode"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="602">acquisition mode.</doc>
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="600">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_available_pixel_formats"
              c:identifier="arv_camera_get_available_pixel_formats"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="427">Retrieves the list of all available pixel formats.</doc>
        <source-position filename="arvcamera.h" line="78"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="434">a newly allocated array of #ArvPixelFormat</doc>
          <array length="0" zero-terminated="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="429">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_pixel_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="430">number of different pixel formats</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available_pixel_formats_as_display_names"
              c:identifier="arv_camera_get_available_pixel_formats_as_display_names"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="467">Retrieves the list of all available pixel formats as display names.
In general, these human-readable strings cannot be used as settings.</doc>
        <source-position filename="arvcamera.h" line="80"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="475">a newly allocated array of string constants.</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="469">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_pixel_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="470">number of different pixel formats</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available_pixel_formats_as_strings"
              c:identifier="arv_camera_get_available_pixel_formats_as_strings"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="447">Retrieves the list of all available pixel formats as strings.</doc>
        <source-position filename="arvcamera.h" line="79"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="454">a newly allocated array of strings.</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="449">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_pixel_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="450">number of different pixel formats</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_binning"
              c:identifier="arv_camera_get_binning"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="335">Retrieves binning in both directions.</doc>
        <source-position filename="arvcamera.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="337">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="dx"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="338">horizontal binning placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="dy"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="339">vertical binning placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_chunk_mode"
              c:identifier="arv_camera_get_chunk_mode"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1513">Check wether chunk data mode is active. Please see arv_camera_set_chunk_mode().</doc>
        <source-position filename="arvcamera.h" line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1519">%TRUE if chunk data mode is active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1515">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_chunk_state"
              c:identifier="arv_camera_get_chunk_state"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1554">Gets state of chunk data. Chunk data are be embedded in #ArvBuffer only
if chunk mode is active. Please see arv_camera_set_chunk_mode().</doc>
        <source-position filename="arvcamera.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1562">%TRUE if @chunk is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1556">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1557">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device"
              c:identifier="arv_camera_get_device"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1197">Retrieves the #ArvDevice object for more complete access to camera features.</doc>
        <source-position filename="arvcamera.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1203">underlying device object.</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1199">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_id"
              c:identifier="arv_camera_get_device_id"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="168">the camera device ID.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="166">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exposure_time"
              c:identifier="arv_camera_get_exposure_time"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="965">current exposure time, in µs.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="963">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exposure_time_auto"
              c:identifier="arv_camera_get_exposure_time_auto"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1049">auto exposure mode selection</doc>
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1047">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exposure_time_bounds"
              c:identifier="arv_camera_get_exposure_time_bounds"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="986">Retrieves exposure time bounds, in µs.</doc>
        <source-position filename="arvcamera.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="988">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="989">minimum exposure time</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="990">maximum exposure time</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frame_rate"
              c:identifier="arv_camera_get_frame_rate"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="716">actual frame rate, in Hz.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="714">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_frame_rate_bounds"
              c:identifier="arv_camera_get_frame_rate_bounds">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="758">Retrieves allowed range for framerate.

Since 0.2.2</doc>
        <source-position filename="arvcamera.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="760">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="761">minimal possible framerate</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="762">maximum possible framerate</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gain"
              c:identifier="arv_camera_get_gain"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1092">the current gain setting.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1090">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gain_auto"
              c:identifier="arv_camera_get_gain_auto"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1162">auto gain mode selection</doc>
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1160">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gain_bounds"
              c:identifier="arv_camera_get_gain_bounds"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1108">Retrieves gain bounds.</doc>
        <source-position filename="arvcamera.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1110">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1111">minimum gain</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1112">maximum gain</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_height_bounds"
              c:identifier="arv_camera_get_height_bounds"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="286">Retrieves the valid range for image height.</doc>
        <source-position filename="arvcamera.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="288">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="289">minimum height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="290">maximum height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_model_name"
              c:identifier="arv_camera_get_model_name"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="151">the camera model name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="149">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_payload"
              c:identifier="arv_camera_get_payload"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1177">Retrieves the size needed for the storage of an image. This value is used
for the creation of the stream buffers.</doc>
        <source-position filename="arvcamera.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1184">frame storage size, in bytes.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1179">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixel_format"
              c:identifier="arv_camera_get_pixel_format"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="397">pixel format.</doc>
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="395">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixel_format_as_string"
              c:identifier="arv_camera_get_pixel_format_as_string"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="410">Retuns: pixel format as string, NULL on error.</doc>
        <source-position filename="arvcamera.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="412">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_region"
              c:identifier="arv_camera_get_region"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="232">Retrieves the current region of interest.</doc>
        <source-position filename="arvcamera.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="234">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="235">x offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="236">y_offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="237">region width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="238">region height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sensor_size"
              c:identifier="arv_camera_get_sensor_size"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="185">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="186">camera sensor width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="187">camera sensor height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_trigger_source"
              c:identifier="arv_camera_get_trigger_source"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="884">Gets the trigger source. This function doesn't check if the camera is configured
to actually use this source as a trigger.</doc>
        <source-position filename="arvcamera.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="891">a string containing the trigger source name, NULL on error.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="886">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_name"
              c:identifier="arv_camera_get_vendor_name"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="134">the camera vendor name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="132">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width_bounds"
              c:identifier="arv_camera_get_width_bounds"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="260">Retrieves the valid range for image width.</doc>
        <source-position filename="arvcamera.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="262">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="263">minimum width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="264">maximum width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="gv_get_current_stream_channel"
              c:identifier="arv_camera_gv_get_current_stream_channel"
              version="0.4.0">
        <source-position filename="arvcamera.h" line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1381">The current stream channel id.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1379">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_get_n_stream_channels"
              c:identifier="arv_camera_gv_get_n_stream_channels"
              version="0.4.0">
        <source-position filename="arvcamera.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1343">the number of supported stream channels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1341">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_get_packet_delay"
              c:identifier="arv_camera_gv_get_packet_delay"
              version="0.4.0">
        <source-position filename="arvcamera.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1429">The inter packet delay, in nanoseconds.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1427">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_get_packet_size"
              c:identifier="arv_camera_gv_get_packet_size"
              version="0.4.0">
        <source-position filename="arvcamera.h" line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1480">The stream packet size, in bytes.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1478">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_select_stream_channel"
              c:identifier="arv_camera_gv_select_stream_channel"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1356">Select the current stream channel.</doc>
        <source-position filename="arvcamera.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1358">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="channel_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1359">id of the channel to select</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="gv_set_packet_delay"
              c:identifier="arv_camera_gv_set_packet_delay"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1394">Configure the inter packet delay to insert between each packet for the current stream
channel. This can be used as a crude flow-control mechanism if the application or the network
infrastructure cannot keep up with the packets coming from the device.</doc>
        <source-position filename="arvcamera.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1396">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="delay_ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1397">inter packet delay, in nanoseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="gv_set_packet_size"
              c:identifier="arv_camera_gv_set_packet_size"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1451">Specifies the stream packet size, in bytes, to send on the selected channel for a GVSP transmitter
or specifies the maximum packet size supported by a GVSP receiver.

This does not include data leader and data trailer and the last data packet which might be of
smaller size (since packet size is not necessarily a multiple of block size for stream channel).</doc>
        <source-position filename="arvcamera.h" line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1453">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1454">packet size, in bytes</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_exposure_auto_available"
              c:identifier="arv_camera_is_exposure_auto_available"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1272">%TRUE if Exposure Auto feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1270">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_exposure_time_available"
              c:identifier="arv_camera_is_exposure_time_available"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1252">%TRUE if Exposure Time feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1250">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_frame_rate_available"
              c:identifier="arv_camera_is_frame_rate_available"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1220">%TRUE if FrameRate feature is available</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1218">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_gain_auto_available"
              c:identifier="arv_camera_is_gain_auto_available"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1309">%TRUE if Gain feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1307">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_gain_available"
              c:identifier="arv_camera_is_gain_available"
              version="0.2.0">
        <source-position filename="arvcamera.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1289">%TRUE if Gain feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1287">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_gv_device"
              c:identifier="arv_camera_is_gv_device"
              version="0.4.0">
        <source-position filename="arvcamera.h" line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvcamera.c"
               line="1326">%TRUE if @camera is a GigEVision device.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1324">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_acquisition_mode"
              c:identifier="arv_camera_set_acquisition_mode">
        <source-position filename="arvcamera.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_binning"
              c:identifier="arv_camera_set_binning"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="312">Defines binning in both directions. Not all cameras support this
feature.</doc>
        <source-position filename="arvcamera.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="314">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="315">horizontal binning</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="316">vertical binning</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chunk_mode"
              c:identifier="arv_camera_set_chunk_mode"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1493">Controls wether chunk data mode is active. When active, chunk data
are appended to image data in #ArvBuffer. A #ArvChunkParser must be used in
order to extract chunk data.</doc>
        <source-position filename="arvcamera.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1495">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="is_active" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1496">wether to enable chunk data mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chunk_state"
              c:identifier="arv_camera_set_chunk_state"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1532">Sets state of a chunk data. Chunk data are be embedded in #ArvBuffer only
if chunk mode is active. Please see arv_camera_set_chunk_mode().</doc>
        <source-position filename="arvcamera.h" line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1534">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1535">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="is_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1536">wether to enable this chunk</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chunks"
              c:identifier="arv_camera_set_chunks"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1577">Convenience function for enabling a set of chunk data. Chunk mode is activated, or deactivated
if @chunk_list is %NULL or empty. All chunk data not listed are disabled.</doc>
        <source-position filename="arvcamera.h" line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1579">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="chunk_list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1580">chunk data names, as a comma or space separated list</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposure_time"
              c:identifier="arv_camera_set_exposure_time"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="922">Sets exposure time. User should take care to set a value compatible with
the desired frame rate.</doc>
        <source-position filename="arvcamera.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="924">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="exposure_time_us" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="925">exposure time, in µs</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposure_time_auto"
              c:identifier="arv_camera_set_exposure_time_auto"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1027">Configures automatic exposure feature.</doc>
        <source-position filename="arvcamera.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1029">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="auto_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1030">auto exposure mode selection</doc>
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_frame_rate"
              c:identifier="arv_camera_set_frame_rate"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="619">Configures a fixed frame rate mode. Once acquisition start is triggered, the
video stream will be acquired with the given frame rate.</doc>
        <source-position filename="arvcamera.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="621">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="frame_rate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="622">frame rate, in Hz</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gain"
              c:identifier="arv_camera_set_gain"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1064">Sets the gain of the ADC converter.</doc>
        <source-position filename="arvcamera.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1066">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="gain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1067">gain value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gain_auto"
              c:identifier="arv_camera_set_gain_auto"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="1140">Configures automatic gain feature.</doc>
        <source-position filename="arvcamera.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1142">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="auto_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="1143">auto gain mode selection</doc>
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_format"
              c:identifier="arv_camera_set_pixel_format"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="357">Defines pixel format.</doc>
        <source-position filename="arvcamera.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="359">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="360">pixel format</doc>
            <type name="PixelFormat" c:type="ArvPixelFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_format_from_string"
              c:identifier="arv_camera_set_pixel_format_from_string"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="375">Defines pixel format described by a string.</doc>
        <source-position filename="arvcamera.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="377">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="378">pixel format</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_region"
              c:identifier="arv_camera_set_region"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="203">Defines the region of interest which will be transmitted in the video
stream.</doc>
        <source-position filename="arvcamera.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="205">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="206">x offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="207">y_offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="208">region width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="209">region height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trigger"
              c:identifier="arv_camera_set_trigger"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="824">Configures the camera in trigger mode. Typical values for source are "Line1"
or "Line2". See the camera documentation for the allowed values.
Activation is set to rising edge. It can be changed by accessing the
underlying device object.

Source can also be "Software". In this case, an acquisition is triggered
by a call to arv_camera_software_trigger().</doc>
        <source-position filename="arvcamera.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="826">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="827">trigger source as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trigger_source"
              c:identifier="arv_camera_set_trigger_source"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="864">Sets the trigger source. This function doesn't check if the camera is configured
to actually use this source as a trigger.</doc>
        <source-position filename="arvcamera.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="866">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="867">source name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="software_trigger"
              c:identifier="arv_camera_software_trigger"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="904">Sends a software trigger command to @camera. The camera must be previously
configured to use a software trigger, using @arv_camera_set_trigger().</doc>
        <source-position filename="arvcamera.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="906">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="start_acquisition"
              c:identifier="arv_camera_start_acquisition"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="528">Starts video stream acquisition.</doc>
        <source-position filename="arvcamera.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="530">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stop_acquisition"
              c:identifier="arv_camera_stop_acquisition"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvcamera.c"
             line="545">Stops video stream acquisition.</doc>
        <source-position filename="arvcamera.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvcamera.c"
                 line="547">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="device"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Device"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CameraPrivate" c:type="ArvCameraPrivate*"/>
      </field>
    </class>
    <record name="CameraClass"
            c:type="ArvCameraClass"
            glib:is-gtype-struct-for="Camera">
      <source-position filename="arvcamera.h" line="49"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="CameraPrivate" c:type="ArvCameraPrivate" disguised="1">
      <source-position filename="arvcamera.h" line="38"/>
    </record>
    <class name="ChunkParser"
           c:symbol-prefix="chunk_parser"
           c:type="ArvChunkParser"
           parent="GObject.Object"
           glib:type-name="ArvChunkParser"
           glib:get-type="arv_chunk_parser_get_type"
           glib:type-struct="ChunkParserClass">
      <doc xml:space="preserve"
           filename="arvchunkparser.c"
           line="23">#ArvChunkParser provides a class for the instantiation of chunk parsers used
for the extraction of chunk data stored in the stream payload.

Chunks are tagged blocks of data stored in a #ArvBuffer containing
a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload. The tags allow a chunk
parser to dissect the data payload into its elements and to identify the content.

Chunk data are enabled using either arv_camera_set_chunks() or
arv_camera_set_chunk_mode(). Both functions are simple convenience wrappers
that handle the setting of ChunkModeActive, ChunkSelector and ChunkEnable
GENICAM features.

&lt;example id="arv-chunk-parser-test"&gt;&lt;title&gt;Example use of the ArvChunkParser API&lt;/title&gt;
&lt;programlisting&gt;
&lt;xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="../../../../tests/arvchunkparsertest.c"&gt;
  &lt;xi:fallback&gt;FIXME: MISSING XINCLUDE CONTENT&lt;/xi:fallback&gt;
&lt;/xi:include&gt;
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
      <source-position filename="arvchunkparser.h" line="66"/>
      <constructor name="new"
                   c:identifier="arv_chunk_parser_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="arvchunkparser.c"
             line="166">Creates a new chunk_parser.</doc>
        <source-position filename="arvchunkparser.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvchunkparser.c"
               line="173">a new #ArvChunkParser object</doc>
          <type name="ChunkParser" c:type="ArvChunkParser*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="168">XML genicam data</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="169">genicam data size, -1 if NULL terminated</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_float_value"
              c:identifier="arv_chunk_parser_get_float_value">
        <doc xml:space="preserve"
             filename="arvchunkparser.c"
             line="135">Gets the value of chunk data as a float.</doc>
        <source-position filename="arvchunkparser.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvchunkparser.c"
               line="143">the chunk data float value.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="137">a #ArvChunkParser</doc>
            <type name="ChunkParser" c:type="ArvChunkParser*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="138">a #ArvBuffer with a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="139">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_value"
              c:identifier="arv_chunk_parser_get_integer_value">
        <doc xml:space="preserve"
             filename="arvchunkparser.c"
             line="104">Gets the value of chunk data as an integer.</doc>
        <source-position filename="arvchunkparser.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvchunkparser.c"
               line="112">the chunk data integer value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="106">a #ArvChunkParser</doc>
            <type name="ChunkParser" c:type="ArvChunkParser*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="107">a #ArvBuffer with a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="108">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string_value"
              c:identifier="arv_chunk_parser_get_string_value">
        <doc xml:space="preserve"
             filename="arvchunkparser.c"
             line="73">Gets the value of chunk data as a string.</doc>
        <source-position filename="arvchunkparser.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvchunkparser.c"
               line="81">the chunk data string value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="75">a #ArvChunkParser</doc>
            <type name="ChunkParser" c:type="ArvChunkParser*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="76">a #ArvBuffer with a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvchunkparser.c"
                 line="77">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="genicam"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gc"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ChunkParserPrivate" c:type="ArvChunkParserPrivate*"/>
      </field>
    </class>
    <record name="ChunkParserClass"
            c:type="ArvChunkParserClass"
            glib:is-gtype-struct-for="ChunkParser">
      <source-position filename="arvchunkparser.h" line="66"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ChunkParserPrivate"
            c:type="ArvChunkParserPrivate"
            disguised="1">
      <source-position filename="arvchunkparser.h" line="55"/>
    </record>
    <enumeration name="ChunkParserStatus"
                 glib:type-name="ArvChunkParserStatus"
                 glib:get-type="arv_chunk_parser_status_get_type"
                 c:type="ArvChunkParserStatus">
      <member name="unknown"
              value="-1"
              c:identifier="ARV_CHUNK_PARSER_STATUS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="arvchunkparser.h"
             line="33">unknown status</doc>
      </member>
      <member name="success"
              value="0"
              c:identifier="ARV_CHUNK_PARSER_STATUS_SUCCESS"
              glib:nick="success">
        <doc xml:space="preserve"
             filename="arvchunkparser.h"
             line="34">no error has occured</doc>
      </member>
      <member name="buffer_not_found"
              value="1"
              c:identifier="ARV_CHUNK_PARSER_STATUS_BUFFER_NOT_FOUND"
              glib:nick="buffer-not-found">
        <doc xml:space="preserve"
             filename="arvchunkparser.h"
             line="35">buffer not found</doc>
      </member>
      <member name="chunk_not_found"
              value="2"
              c:identifier="ARV_CHUNK_PARSER_STATUS_CHUNK_NOT_FOUND"
              glib:nick="chunk-not-found">
        <doc xml:space="preserve"
             filename="arvchunkparser.h"
             line="36">chunk not found</doc>
      </member>
      <member name="invalid_feature_name"
              value="3"
              c:identifier="ARV_CHUNK_PARSER_STATUS_INVALID_FEATURE_NAME"
              glib:nick="invalid-feature-name">
      </member>
    </enumeration>
    <function-macro name="DEVICE" c:identifier="ARV_DEVICE" introspectable="0">
      <source-position filename="arvdevice.h" line="48"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEVICE_CLASS"
                    c:identifier="ARV_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="arvdevice.h" line="49"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEVICE_GET_CLASS"
                    c:identifier="ARV_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdevice.h" line="52"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DEVICE_NAME_ILLEGAL_CHARACTERS"
              value="&#9;&#10;&#13;"
              c:type="ARV_DEVICE_NAME_ILLEGAL_CHARACTERS">
      <source-position filename="arvinterface.h" line="31"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_NAME_REPLACEMENT_CHARACTER"
              value="92"
              c:type="ARV_DEVICE_NAME_REPLACEMENT_CHARACTER">
      <source-position filename="arvinterface.h" line="32"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="DOM_CHARACTER_DATA"
                    c:identifier="ARV_DOM_CHARACTER_DATA"
                    introspectable="0">
      <source-position filename="arvdomcharacterdata.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_CHARACTER_DATA_CLASS"
                    c:identifier="ARV_DOM_CHARACTER_DATA_CLASS"
                    introspectable="0">
      <source-position filename="arvdomcharacterdata.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_CHARACTER_DATA_GET_CLASS"
                    c:identifier="ARV_DOM_CHARACTER_DATA_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomcharacterdata.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_DOCUMENT"
                    c:identifier="ARV_DOM_DOCUMENT"
                    introspectable="0">
      <source-position filename="arvdomdocument.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_DOCUMENT_CLASS"
                    c:identifier="ARV_DOM_DOCUMENT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomdocument.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_DOCUMENT_FRAGMENT"
                    c:identifier="ARV_DOM_DOCUMENT_FRAGMENT"
                    introspectable="0">
      <source-position filename="arvdomdocumentfragment.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_DOCUMENT_FRAGMENT_CLASS"
                    c:identifier="ARV_DOM_DOCUMENT_FRAGMENT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomdocumentfragment.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_DOCUMENT_FRAGMENT_GET_CLASS"
                    c:identifier="ARV_DOM_DOCUMENT_FRAGMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomdocumentfragment.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_DOCUMENT_GET_CLASS"
                    c:identifier="ARV_DOM_DOCUMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomdocument.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_ELEMENT"
                    c:identifier="ARV_DOM_ELEMENT"
                    introspectable="0">
      <source-position filename="arvdomelement.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_ELEMENT_CLASS"
                    c:identifier="ARV_DOM_ELEMENT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomelement.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_ELEMENT_GET_CLASS"
                    c:identifier="ARV_DOM_ELEMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomelement.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NAMED_NODE_MAP"
                    c:identifier="ARV_DOM_NAMED_NODE_MAP"
                    introspectable="0">
      <source-position filename="arvdomnamednodemap.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NAMED_NODE_MAP_CLASS"
                    c:identifier="ARV_DOM_NAMED_NODE_MAP_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnamednodemap.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NAMED_NODE_MAP_GET_CLASS"
                    c:identifier="ARV_DOM_NAMED_NODE_MAP_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnamednodemap.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NODE"
                    c:identifier="ARV_DOM_NODE"
                    introspectable="0">
      <source-position filename="arvdomnode.h" line="48"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NODE_CLASS"
                    c:identifier="ARV_DOM_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnode.h" line="49"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NODE_GET_CLASS"
                    c:identifier="ARV_DOM_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnode.h" line="52"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NODE_LIST"
                    c:identifier="ARV_DOM_NODE_LIST"
                    introspectable="0">
      <source-position filename="arvdomnodelist.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NODE_LIST_CLASS"
                    c:identifier="ARV_DOM_NODE_LIST_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnodelist.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_NODE_LIST_GET_CLASS"
                    c:identifier="ARV_DOM_NODE_LIST_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnodelist.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_TEXT"
                    c:identifier="ARV_DOM_TEXT"
                    introspectable="0">
      <source-position filename="arvdomtext.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_TEXT_CLASS"
                    c:identifier="ARV_DOM_TEXT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomtext.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOM_TEXT_GET_CLASS"
                    c:identifier="ARV_DOM_TEXT_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvdomtext.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="DebugCategory" c:type="ArvDebugCategory">
      <source-position filename="arvdebug.h" line="41"/>
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="level" writable="1">
        <type name="DebugLevel" c:type="ArvDebugLevel"/>
      </field>
    </record>
    <enumeration name="DebugLevel"
                 glib:type-name="ArvDebugLevel"
                 glib:get-type="arv_debug_level_get_type"
                 c:type="ArvDebugLevel">
      <member name="none"
              value="0"
              c:identifier="ARV_DEBUG_LEVEL_NONE"
              glib:nick="none">
      </member>
      <member name="warning"
              value="1"
              c:identifier="ARV_DEBUG_LEVEL_WARNING"
              glib:nick="warning">
      </member>
      <member name="debug"
              value="2"
              c:identifier="ARV_DEBUG_LEVEL_DEBUG"
              glib:nick="debug">
      </member>
      <member name="log"
              value="3"
              c:identifier="ARV_DEBUG_LEVEL_LOG"
              glib:nick="log">
      </member>
      <member name="count"
              value="4"
              c:identifier="ARV_DEBUG_LEVEL_COUNT"
              glib:nick="count">
      </member>
    </enumeration>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="ArvDevice"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDevice"
           glib:get-type="arv_device_get_type"
           glib:type-struct="DeviceClass">
      <doc xml:space="preserve"
           filename="arvdevice.c"
           line="23">#ArvDevice is an abstract base class for the control of cameras. It provides
an easy access to the camera settings, and to its genicam interface for  more
advanced uses.</doc>
      <source-position filename="arvdevice.h" line="78"/>
      <virtual-method name="control_lost">
        <source-position filename="arvdevice.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_stream"
                      invoker="create_stream"
                      version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="63">Creates a new #ArvStream for video stream handling. See
@ArvStreamCallback for details regarding the callback function.</doc>
        <source-position filename="arvdevice.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="72">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="65">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="66">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="67">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_genicam" invoker="get_genicam" version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="184">Retrieves the genicam interface of the given device.</doc>
        <source-position filename="arvdevice.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="190">the genicam interface.</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="186">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_genicam_xml"
                      invoker="get_genicam_xml"
                      version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="211">Gets the Genicam XML data stored in the device memory.</doc>
        <source-position filename="arvdevice.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="218">a pointer to the Genicam XML data, owned by the device.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="213">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="214">placeholder for the returned data size (bytes) // BUG: (skip) seems ignored</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_memory"
                      invoker="read_memory"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="85">Reads @size bytes from the device memory.</doc>
        <source-position filename="arvdevice.h" line="71"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="95">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="87">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="88">memory address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="89">number of bytes to read</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="90">a buffer for the storage of the read data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_register"
                      invoker="read_register"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="137">Reads the value of a device register.</doc>
        <source-position filename="arvdevice.h" line="73"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="146">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="139">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="140">register address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="141">a placeholder for the read value</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_memory"
                      invoker="write_memory"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="111">Writes @size bytes to the device memory.</doc>
        <source-position filename="arvdevice.h" line="72"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="121">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="113">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="114">memory address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="115">size of the returned buffer</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="full"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="116">the buffer read from memory</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_register"
                      invoker="write_register"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="161">Writes @value to a device register.</doc>
        <source-position filename="arvdevice.h" line="74"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="170">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="163">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="164">the register address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="165">value to write</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_chunk_parser"
              c:identifier="arv_device_create_chunk_parser"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="232">Create a #ArvChunkParser object, to be used for chunk data extraction from #ArvBuffer.</doc>
        <source-position filename="arvdevice.h" line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="238">a new #ArvChunkParser object, NULL on error.</doc>
          <type name="ChunkParser" c:type="ArvChunkParser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="234">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_stream"
              c:identifier="arv_device_create_stream"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="63">Creates a new #ArvStream for video stream handling. See
@ArvStreamCallback for details regarding the callback function.</doc>
        <source-position filename="arvdevice.h" line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="72">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="65">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="66">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="67">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="execute_command"
              c:identifier="arv_device_execute_command"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="290">Execute a genicam command. If an error occur, this function change the device status.</doc>
        <source-position filename="arvdevice.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="292">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="293">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available_enumeration_feature_values"
              c:identifier="arv_device_get_available_enumeration_feature_values">
        <source-position filename="arvdevice.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available_enumeration_feature_values_as_strings"
              c:identifier="arv_device_get_available_enumeration_feature_values_as_strings"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="590">Get all the available values of @feature, as strings.</doc>
        <source-position filename="arvdevice.h" line="114"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="598">a newly created array of const strings, which must freed after use using g_free.</doc>
          <array length="1" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="592">an #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="593">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="594">placeholder for the number of returned values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_feature"
              c:identifier="arv_device_get_feature"
              version="0.2.0">
        <source-position filename="arvdevice.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="261">the genicam node corresponding to the feature name, NULL if not found.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="258">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="259">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_feature_bounds"
              c:identifier="arv_device_get_float_feature_bounds">
        <source-position filename="arvdevice.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_feature_value"
              c:identifier="arv_device_get_float_feature_value">
        <source-position filename="arvdevice.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_genicam"
              c:identifier="arv_device_get_genicam"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="184">Retrieves the genicam interface of the given device.</doc>
        <source-position filename="arvdevice.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="190">the genicam interface.</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="186">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_genicam_xml"
              c:identifier="arv_device_get_genicam_xml"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="211">Gets the Genicam XML data stored in the device memory.</doc>
        <source-position filename="arvdevice.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="218">a pointer to the Genicam XML data, owned by the device.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="213">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="214">placeholder for the returned data size (bytes) // BUG: (skip) seems ignored</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_feature_bounds"
              c:identifier="arv_device_get_integer_feature_bounds">
        <source-position filename="arvdevice.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_feature_value"
              c:identifier="arv_device_get_integer_feature_value">
        <source-position filename="arvdevice.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_status" c:identifier="arv_device_get_status">
        <source-position filename="arvdevice.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="DeviceStatus" c:type="ArvDeviceStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string_feature_value"
              c:identifier="arv_device_get_string_feature_value">
        <source-position filename="arvdevice.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_memory"
              c:identifier="arv_device_read_memory"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="85">Reads @size bytes from the device memory.</doc>
        <source-position filename="arvdevice.h" line="84"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="95">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="87">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="88">memory address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="89">number of bytes to read</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="90">a buffer for the storage of the read data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_register"
              c:identifier="arv_device_read_register"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="137">Reads the value of a device register.</doc>
        <source-position filename="arvdevice.h" line="86"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="146">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="139">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="140">register address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="141">a placeholder for the read value</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_float_feature_value"
              c:identifier="arv_device_set_float_feature_value">
        <source-position filename="arvdevice.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_integer_feature_value"
              c:identifier="arv_device_set_integer_feature_value">
        <source-position filename="arvdevice.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string_feature_value"
              c:identifier="arv_device_set_string_feature_value">
        <source-position filename="arvdevice.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_memory"
              c:identifier="arv_device_write_memory"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="111">Writes @size bytes to the device memory.</doc>
        <source-position filename="arvdevice.h" line="85"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="121">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="113">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="114">memory address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="115">size of the returned buffer</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="full"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="116">the buffer read from memory</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_register"
              c:identifier="arv_device_write_register"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="161">Writes @value to a device register.</doc>
        <source-position filename="arvdevice.h" line="87"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="arvdevice.c"
               line="170">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="163">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="164">the register address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="165">value to write</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DevicePrivate" c:type="ArvDevicePrivate*"/>
      </field>
      <glib:signal name="control-lost" when="last" version="0.2.0">
        <doc xml:space="preserve"
             filename="arvdevice.c"
             line="689">Signal that the control of the device is lost.

This signal may be emited from a thread different than the main one,
so please take care to shared data access from the callback.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="DeviceClass"
            c:type="ArvDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="arvdevice.h" line="78"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="create_stream">
        <callback name="create_stream">
          <source-position filename="arvdevice.h" line="66"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="72">a new #ArvStream.</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="65">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       scope="call"
                       closure="2">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="66">a frame processing callback</doc>
              <type name="StreamCallback" c:type="ArvStreamCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="2">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="67">user data for @callback</doc>
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_genicam_xml">
        <callback name="get_genicam_xml">
          <source-position filename="arvdevice.h" line="68"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="218">a pointer to the Genicam XML data, owned by the device.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="213">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="size"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="214">placeholder for the returned data size (bytes) // BUG: (skip) seems ignored</doc>
              <type name="gsize" c:type="size_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_genicam">
        <callback name="get_genicam">
          <source-position filename="arvdevice.h" line="69"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="190">the genicam interface.</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="186">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_memory">
        <callback name="read_memory" throws="1">
          <source-position filename="arvdevice.h" line="71"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="95">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="87">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="88">memory address</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="89">number of bytes to read</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="90">a buffer for the storage of the read data</doc>
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_memory">
        <callback name="write_memory" throws="1">
          <source-position filename="arvdevice.h" line="72"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="121">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="113">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="114">memory address</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="115">size of the returned buffer</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="full"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="116">the buffer read from memory</doc>
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_register">
        <callback name="read_register" throws="1">
          <source-position filename="arvdevice.h" line="73"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="146">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="139">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="140">register address</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="value"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="141">a placeholder for the read value</doc>
              <type name="guint32" c:type="guint32*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_register">
        <callback name="write_register" throws="1">
          <source-position filename="arvdevice.h" line="74"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="arvdevice.c"
                 line="170">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="163">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="164">the register address</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdevice.c"
                   line="165">value to write</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="control_lost">
        <callback name="control_lost">
          <source-position filename="arvdevice.h" line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DevicePrivate" c:type="ArvDevicePrivate" disguised="1">
      <source-position filename="arvdevice.h" line="54"/>
    </record>
    <enumeration name="DeviceStatus"
                 glib:type-name="ArvDeviceStatus"
                 glib:get-type="arv_device_status_get_type"
                 c:type="ArvDeviceStatus">
      <member name="unknown"
              value="-1"
              c:identifier="ARV_DEVICE_STATUS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="arvdevice.h"
             line="34">unknown status</doc>
      </member>
      <member name="success"
              value="0"
              c:identifier="ARV_DEVICE_STATUS_SUCCESS"
              glib:nick="success">
        <doc xml:space="preserve"
             filename="arvdevice.h"
             line="35">no error has occured</doc>
      </member>
      <member name="timeout"
              value="1"
              c:identifier="ARV_DEVICE_STATUS_TIMEOUT"
              glib:nick="timeout">
        <doc xml:space="preserve"
             filename="arvdevice.h"
             line="36">action failed on a timeout</doc>
      </member>
      <member name="write_error"
              value="2"
              c:identifier="ARV_DEVICE_STATUS_WRITE_ERROR"
              glib:nick="write-error">
        <doc xml:space="preserve"
             filename="arvdevice.h"
             line="37">write on a read only node</doc>
      </member>
    </enumeration>
    <class name="DomCharacterData"
           c:symbol-prefix="dom_character_data"
           c:type="ArvDomCharacterData"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomCharacterData"
           glib:get-type="arv_dom_character_data_get_type"
           glib:type-struct="DomCharacterDataClass">
      <source-position filename="arvdomcharacterdata.h" line="49"/>
      <method name="get_data" c:identifier="arv_dom_character_data_get_data">
        <source-position filename="arvdomcharacterdata.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomCharacterData" c:type="ArvDomCharacterData*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_data" c:identifier="arv_dom_character_data_set_data">
        <source-position filename="arvdomcharacterdata.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomCharacterData" c:type="ArvDomCharacterData*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
      <field name="data">
        <type name="utf8" c:type="char*"/>
      </field>
    </class>
    <record name="DomCharacterDataClass"
            c:type="ArvDomCharacterDataClass"
            glib:is-gtype-struct-for="DomCharacterData">
      <source-position filename="arvdomcharacterdata.h" line="49"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
    </record>
    <class name="DomDocument"
           c:symbol-prefix="dom_document"
           c:type="ArvDomDocument"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomDocument"
           glib:get-type="arv_dom_document_get_type"
           glib:type-struct="DomDocumentClass">
      <source-position filename="arvdomdocument.h" line="54"/>
      <constructor name="new_from_memory"
                   c:identifier="arv_dom_document_new_from_memory"
                   throws="1">
        <source-position filename="arvdomparser.h" line="35"/>
        <return-value transfer-ownership="full">
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_path"
                   c:identifier="arv_dom_document_new_from_path"
                   throws="1">
        <source-position filename="arvdomparser.h" line="36"/>
        <return-value transfer-ownership="full">
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_url"
                   c:identifier="arv_dom_document_new_from_url"
                   throws="1">
        <source-position filename="arvdomparser.h" line="37"/>
        <return-value transfer-ownership="full">
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="create_element" invoker="create_element">
        <doc xml:space="preserve"
             filename="arvdomdocument.c"
             line="70">Create a new element.</doc>
        <source-position filename="arvdomdocument.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdomdocument.c"
               line="77">a new orphan #ArvDomElement, NULL on error.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="72">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="tag_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="73">node name of the element to create</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_text_node" invoker="create_text_node">
        <doc xml:space="preserve"
             filename="arvdomdocument.c"
             line="100">Create a new text element.</doc>
        <source-position filename="arvdomdocument.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdomdocument.c"
               line="107">a new orphan #ArvDomText, NULL on error.</doc>
          <type name="DomText" c:type="ArvDomText*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="102">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="103">initial content</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_document_element"
                      invoker="get_document_element">
        <source-position filename="arvdomdocument.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomdocument.c"
               line="59">the top element of @self.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="57">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="append_from_memory"
              c:identifier="arv_dom_document_append_from_memory"
              throws="1">
        <doc xml:space="preserve"
             filename="arvdomparser.c"
             line="252">Append a chunk of xml tree to an existing document. The resulting nodes will be appended to
@node, or to @document if @node == NULL.

Size set to a negative value indicated an unknow xml data size.</doc>
        <source-position filename="arvdomparser.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomparser.c"
                 line="254">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomparser.c"
                 line="255">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvdomparser.c"
                 line="256">a memory buffer holding xml data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomparser.c"
                 line="257">size of the xml data, in bytes</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_element"
              c:identifier="arv_dom_document_create_element">
        <doc xml:space="preserve"
             filename="arvdomdocument.c"
             line="70">Create a new element.</doc>
        <source-position filename="arvdomdocument.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdomdocument.c"
               line="77">a new orphan #ArvDomElement, NULL on error.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="72">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="tag_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="73">node name of the element to create</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_text_node"
              c:identifier="arv_dom_document_create_text_node">
        <doc xml:space="preserve"
             filename="arvdomdocument.c"
             line="100">Create a new text element.</doc>
        <source-position filename="arvdomdocument.h" line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdomdocument.c"
               line="107">a new orphan #ArvDomText, NULL on error.</doc>
          <type name="DomText" c:type="ArvDomText*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="102">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="103">initial content</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_document_element"
              c:identifier="arv_dom_document_get_document_element">
        <source-position filename="arvdomdocument.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomdocument.c"
               line="59">the top element of @self.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="57">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_href_data"
              c:identifier="arv_dom_document_get_href_data">
        <doc xml:space="preserve"
             filename="arvdomdocument.c"
             line="151">Load the content referenced by @href.</doc>
        <source-position filename="arvdomdocument.h" line="66"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arvdomdocument.c"
               line="159">a newly allocated data buffer.</doc>
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="153">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="href" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="154">document reference</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="155">data size placeholder</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="arv_dom_document_get_url">
        <source-position filename="arvdomdocument.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save_to_memory"
              c:identifier="arv_dom_document_save_to_memory"
              throws="1">
        <source-position filename="arvdomparser.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="documennt" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void**"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_path"
              c:identifier="arv_dom_document_save_to_path"
              throws="1">
        <source-position filename="arvdomparser.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="documennt" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_stream"
              c:identifier="arv_dom_document_save_to_stream"
              throws="1">
        <source-position filename="arvdomparser.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="stream" transfer-ownership="none">
            <type name="Gio.OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_url"
              c:identifier="arv_dom_document_save_to_url"
              throws="1">
        <source-position filename="arvdomparser.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="documennt" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_path" c:identifier="arv_dom_document_set_path">
        <source-position filename="arvdomdocument.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="arv_dom_document_set_url">
        <source-position filename="arvdomdocument.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
      <field name="url">
        <type name="utf8" c:type="char*"/>
      </field>
    </class>
    <record name="DomDocumentClass"
            c:type="ArvDomDocumentClass"
            glib:is-gtype-struct-for="DomDocument">
      <source-position filename="arvdomdocument.h" line="54"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
      <field name="get_document_element">
        <callback name="get_document_element">
          <source-position filename="arvdomdocument.h" line="51"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="59">the top element of @self.</doc>
            <type name="DomElement" c:type="ArvDomElement*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomdocument.c"
                   line="57">a #ArvDomDocument</doc>
              <type name="DomDocument" c:type="ArvDomDocument*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_element">
        <callback name="create_element">
          <source-position filename="arvdomdocument.h" line="52"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="77">a new orphan #ArvDomElement, NULL on error.</doc>
            <type name="DomElement" c:type="ArvDomElement*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomdocument.c"
                   line="72">a #ArvDomDocument</doc>
              <type name="DomDocument" c:type="ArvDomDocument*"/>
            </parameter>
            <parameter name="tag_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomdocument.c"
                   line="73">node name of the element to create</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_text_node">
        <callback name="create_text_node">
          <source-position filename="arvdomdocument.h" line="53"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdomdocument.c"
                 line="107">a new orphan #ArvDomText, NULL on error.</doc>
            <type name="DomText" c:type="ArvDomText*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomdocument.c"
                   line="102">a #ArvDomDocument</doc>
              <type name="DomDocument" c:type="ArvDomDocument*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomdocument.c"
                   line="103">initial content</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="DomDocumentCreateFunction"
              c:type="ArvDomDocumentCreateFunction"
              introspectable="0">
      <source-position filename="arvdomimplementation.h" line="32"/>
      <return-value>
        <type name="DomDocument" c:type="ArvDomDocument*"/>
      </return-value>
    </callback>
    <class name="DomDocumentFragment"
           c:symbol-prefix="dom_document_fragment"
           c:type="ArvDomDocumentFragment"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomDocumentFragment"
           glib:get-type="arv_dom_document_fragment_get_type"
           glib:type-struct="DomDocumentFragmentClass">
      <source-position filename="arvdomdocumentfragment.h" line="47"/>
      <constructor name="new" c:identifier="arv_dom_document_fragment_new">
        <source-position filename="arvdomdocumentfragment.h" line="51"/>
        <return-value transfer-ownership="full">
          <type name="DomDocumentFragment" c:type="ArvDomDocumentFragment*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
    </class>
    <record name="DomDocumentFragmentClass"
            c:type="ArvDomDocumentFragmentClass"
            glib:is-gtype-struct-for="DomDocumentFragment">
      <source-position filename="arvdomdocumentfragment.h" line="47"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
    </record>
    <class name="DomElement"
           c:symbol-prefix="dom_element"
           c:type="ArvDomElement"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomElement"
           glib:get-type="arv_dom_element_get_type"
           glib:type-struct="DomElementClass">
      <source-position filename="arvdomelement.h" line="50"/>
      <virtual-method name="get_attribute" invoker="get_attribute">
        <source-position filename="arvdomelement.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_serialized_attributes">
        <source-position filename="arvdomelement.h" line="49"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attribute" invoker="set_attribute">
        <source-position filename="arvdomelement.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="attribute_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_attribute"
              c:identifier="arv_dom_element_get_attribute">
        <source-position filename="arvdomelement.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tag_name" c:identifier="arv_dom_element_get_tag_name">
        <source-position filename="arvdomelement.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_attribute"
              c:identifier="arv_dom_element_set_attribute">
        <source-position filename="arvdomelement.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="attribute_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
    </class>
    <record name="DomElementClass"
            c:type="ArvDomElementClass"
            glib:is-gtype-struct-for="DomElement">
      <source-position filename="arvdomelement.h" line="50"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
      <field name="get_attribute">
        <callback name="get_attribute">
          <source-position filename="arvdomelement.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomElement" c:type="ArvDomElement*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attribute">
        <callback name="set_attribute">
          <source-position filename="arvdomelement.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomElement" c:type="ArvDomElement*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="attribute_value" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_serialized_attributes">
        <callback name="get_serialized_attributes">
          <source-position filename="arvdomelement.h" line="49"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomElement" c:type="ArvDomElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DomNamedNodeMap"
           c:symbol-prefix="dom_named_node_map"
           c:type="ArvDomNamedNodeMap"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDomNamedNodeMap"
           glib:get-type="arv_dom_named_node_map_get_type"
           glib:type-struct="DomNamedNodeMapClass">
      <source-position filename="arvdomnamednodemap.h" line="52"/>
      <virtual-method name="get" introspectable="0">
        <source-position filename="arvdomnamednodemap.h" line="47"/>
        <return-value>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_item" invoker="get_item">
        <source-position filename="arvdomnamednodemap.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnamednodemap.c"
               line="83">the @ArvDomNode corresponding to @index.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="80">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="81">an index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_length" invoker="get_length">
        <source-position filename="arvdomnamednodemap.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove" introspectable="0">
        <source-position filename="arvdomnamednodemap.h" line="49"/>
        <return-value>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set" introspectable="0">
        <source-position filename="arvdomnamednodemap.h" line="48"/>
        <return-value>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_item" c:identifier="arv_dom_named_node_map_get_item">
        <source-position filename="arvdomnamednodemap.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnamednodemap.c"
               line="83">the @ArvDomNode corresponding to @index.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="80">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="81">an index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="arv_dom_named_node_map_get_length">
        <source-position filename="arvdomnamednodemap.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_named_item"
              c:identifier="arv_dom_named_node_map_get_named_item">
        <source-position filename="arvdomnamednodemap.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnamednodemap.c"
               line="35">a #ArvDomElement.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="32">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="33">name of the element to look for.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_named_item"
              c:identifier="arv_dom_named_node_map_remove_named_item">
        <source-position filename="arvdomnamednodemap.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnamednodemap.c"
               line="67">the removed node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="64">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="65">name of the node to remove</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_named_item"
              c:identifier="arv_dom_named_node_map_set_named_item">
        <source-position filename="arvdomnamednodemap.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnamednodemap.c"
               line="51">same as @node on success.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="48">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="49">a node to insert</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DomNamedNodeMapClass"
            c:type="ArvDomNamedNodeMapClass"
            glib:is-gtype-struct-for="DomNamedNodeMap">
      <source-position filename="arvdomnamednodemap.h" line="52"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get" introspectable="0">
        <callback name="get" introspectable="0">
          <source-position filename="arvdomnamednodemap.h" line="47"/>
          <return-value>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set" introspectable="0">
        <callback name="set" introspectable="0">
          <source-position filename="arvdomnamednodemap.h" line="48"/>
          <return-value>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove" introspectable="0">
        <callback name="remove" introspectable="0">
          <source-position filename="arvdomnamednodemap.h" line="49"/>
          <return-value>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_item">
        <callback name="get_item">
          <source-position filename="arvdomnamednodemap.h" line="50"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnamednodemap.c"
                 line="83">the @ArvDomNode corresponding to @index.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomnamednodemap.c"
                   line="80">a #ArvDomNamedNodeMap</doc>
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomnamednodemap.c"
                   line="81">an index</doc>
              <type name="guint" c:type="unsigned int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_length">
        <callback name="get_length">
          <source-position filename="arvdomnamednodemap.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="guint" c:type="unsigned int"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DomNode"
           c:symbol-prefix="dom_node"
           c:type="ArvDomNode"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDomNode"
           glib:get-type="arv_dom_node_get_type"
           glib:type-struct="DomNodeClass">
      <source-position filename="arvdomnode.h" line="88"/>
      <virtual-method name="can_append_child">
        <source-position filename="arvdomnode.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="changed" invoker="changed">
        <source-position filename="arvdomnode.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_changed">
        <source-position filename="arvdomnode.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_node_name" invoker="get_node_name">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="159">Gets the node name.</doc>
        <source-position filename="arvdomnode.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="165">the node name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="161">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_node_type" invoker="get_node_type">
        <source-position filename="arvdomnode.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="DomNodeType" c:type="ArvDomNodeType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_node_value" invoker="get_node_value">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="181">Gets the node value.</doc>
        <source-position filename="arvdomnode.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="187">the node value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="183">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="post_new_child">
        <source-position filename="arvdomnode.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pre_remove_child">
        <source-position filename="arvdomnode.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_node_value" invoker="set_node_value">
        <source-position filename="arvdomnode.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_to_stream"
                      invoker="write_to_stream"
                      throws="1">
        <source-position filename="arvdomnode.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="stream" transfer-ownership="none">
            <type name="Gio.OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="append_child" c:identifier="arv_dom_node_append_child">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="570">Adds the node @new_child to the end of the list of children of this node.
If the @new_child is already in the tree, it is first removed.</doc>
        <source-position filename="arvdomnode.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="578">the added node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="572">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="573">node to append</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="changed" c:identifier="arv_dom_node_changed">
        <source-position filename="arvdomnode.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_nodes"
              c:identifier="arv_dom_node_get_child_nodes">
        <source-position filename="arvdomnode.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="248">a #ArvDomNodeList, NULL on error.</doc>
          <type name="DomNodeList" c:type="ArvDomNodeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="246">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_first_child"
              c:identifier="arv_dom_node_get_first_child">
        <source-position filename="arvdomnode.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="272">@self first child.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="270">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_last_child" c:identifier="arv_dom_node_get_last_child">
        <source-position filename="arvdomnode.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="287">@self last child.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="285">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_next_sibling"
              c:identifier="arv_dom_node_get_next_sibling">
        <source-position filename="arvdomnode.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="317">@self next sibling.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="315">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_name" c:identifier="arv_dom_node_get_node_name">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="159">Gets the node name.</doc>
        <source-position filename="arvdomnode.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="165">the node name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="161">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_type" c:identifier="arv_dom_node_get_node_type">
        <source-position filename="arvdomnode.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="DomNodeType" c:type="ArvDomNodeType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_value" c:identifier="arv_dom_node_get_node_value">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="181">Gets the node value.</doc>
        <source-position filename="arvdomnode.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="187">the node value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="183">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_owner_document"
              c:identifier="arv_dom_node_get_owner_document">
        <source-position filename="arvdomnode.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="339">@self owner document.</doc>
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="337">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_node"
              c:identifier="arv_dom_node_get_parent_node">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="227">Get the parent node of @self.</doc>
        <source-position filename="arvdomnode.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="233">@self parent.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="229">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_previous_sibling"
              c:identifier="arv_dom_node_get_previous_sibling">
        <source-position filename="arvdomnode.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="302">@self previous sibling.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="300">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_child_nodes"
              c:identifier="arv_dom_node_has_child_nodes">
        <source-position filename="arvdomnode.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_before" c:identifier="arv_dom_node_insert_before">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="357">Inserts the node @new_child before the existing child node @ref_child. If
@ref_child is null, insert @new_child at the end of the list of children.
If the @new_child is already in the tree, it is first removed.</doc>
        <source-position filename="arvdomnode.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="367">the inserted node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="359">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="360">node to insert</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
          <parameter name="ref_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="361">reference node, i.e., the node before which the new node must be inserted.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_child" c:identifier="arv_dom_node_remove_child">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="516">Removes the child node indicated by @old_child from the list of children, and returns it.</doc>
        <source-position filename="arvdomnode.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="523">the removed node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="518">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="old_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="519">node to remove.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_child" c:identifier="arv_dom_node_replace_child">
        <doc xml:space="preserve"
             filename="arvdomnode.c"
             line="438">Replaces the child node @old_child with @new_child in the list of children,
and returns the @old_child node.
If the @new_child is already in the tree, it is first removed.</doc>
        <source-position filename="arvdomnode.h" line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvdomnode.c"
               line="448">the replaced node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="440">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="441">a replacement node</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
          <parameter name="old_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="442">node to replace</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_node_value" c:identifier="arv_dom_node_set_node_value">
        <source-position filename="arvdomnode.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_to_stream"
              c:identifier="arv_dom_node_write_to_stream"
              throws="1">
        <source-position filename="arvdomnode.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="stream" transfer-ownership="none">
            <type name="Gio.OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="next_sibling">
        <type name="DomNode" c:type="ArvDomNode*"/>
      </field>
      <field name="previous_sibling">
        <type name="DomNode" c:type="ArvDomNode*"/>
      </field>
      <field name="parent_node">
        <type name="DomNode" c:type="ArvDomNode*"/>
      </field>
      <field name="first_child">
        <type name="DomNode" c:type="ArvDomNode*"/>
      </field>
      <field name="last_child">
        <type name="DomNode" c:type="ArvDomNode*"/>
      </field>
    </class>
    <record name="DomNodeClass"
            c:type="ArvDomNodeClass"
            glib:is-gtype-struct-for="DomNode">
      <source-position filename="arvdomnode.h" line="88"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_node_name">
        <callback name="get_node_name">
          <source-position filename="arvdomnode.h" line="71"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="165">the node name.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomnode.c"
                   line="161">a #ArvDomNode</doc>
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_node_value">
        <callback name="get_node_value">
          <source-position filename="arvdomnode.h" line="72"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnode.c"
                 line="187">the node value.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomnode.c"
                   line="183">a #ArvDomNode</doc>
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_node_value">
        <callback name="set_node_value">
          <source-position filename="arvdomnode.h" line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_node_type">
        <callback name="get_node_type">
          <source-position filename="arvdomnode.h" line="74"/>
          <return-value transfer-ownership="none">
            <type name="DomNodeType" c:type="ArvDomNodeType"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_append_child">
        <callback name="can_append_child">
          <source-position filename="arvdomnode.h" line="78"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="new_child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="post_new_child">
        <callback name="post_new_child">
          <source-position filename="arvdomnode.h" line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pre_remove_child">
        <callback name="pre_remove_child">
          <source-position filename="arvdomnode.h" line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="arvdomnode.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_changed">
        <callback name="child_changed">
          <source-position filename="arvdomnode.h" line="85"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_to_stream">
        <callback name="write_to_stream" throws="1">
          <source-position filename="arvdomnode.h" line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="stream" transfer-ownership="none">
              <type name="Gio.OutputStream" c:type="GOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DomNodeList"
           c:symbol-prefix="dom_node_list"
           c:type="ArvDomNodeList"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDomNodeList"
           glib:get-type="arv_dom_node_list_get_type"
           glib:type-struct="DomNodeListClass">
      <source-position filename="arvdomnodelist.h" line="49"/>
      <virtual-method name="get_item" invoker="get_item">
        <doc xml:space="preserve"
             filename="arvdomnodelist.c"
             line="29">Get one of the item of @list.</doc>
        <source-position filename="arvdomnodelist.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnodelist.c"
               line="36">item corresponding to index, NULL on error.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnodelist.c"
                 line="31">a #ArvDomNodeList</doc>
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnodelist.c"
                 line="32">item index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_length" invoker="get_length">
        <source-position filename="arvdomnodelist.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_item" c:identifier="arv_dom_node_list_get_item">
        <doc xml:space="preserve"
             filename="arvdomnodelist.c"
             line="29">Get one of the item of @list.</doc>
        <source-position filename="arvdomnodelist.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomnodelist.c"
               line="36">item corresponding to index, NULL on error.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnodelist.c"
                 line="31">a #ArvDomNodeList</doc>
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnodelist.c"
                 line="32">item index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length" c:identifier="arv_dom_node_list_get_length">
        <source-position filename="arvdomnodelist.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DomNodeListClass"
            c:type="ArvDomNodeListClass"
            glib:is-gtype-struct-for="DomNodeList">
      <source-position filename="arvdomnodelist.h" line="49"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_item">
        <callback name="get_item">
          <source-position filename="arvdomnodelist.h" line="47"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvdomnodelist.c"
                 line="36">item corresponding to index, NULL on error.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomnodelist.c"
                   line="31">a #ArvDomNodeList</doc>
              <type name="DomNodeList" c:type="ArvDomNodeList*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvdomnodelist.c"
                   line="32">item index</doc>
              <type name="guint" c:type="unsigned int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_length">
        <callback name="get_length">
          <source-position filename="arvdomnodelist.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="guint" c:type="unsigned int"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <type name="DomNodeList" c:type="ArvDomNodeList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="DomNodeType"
                 glib:type-name="ArvDomNodeType"
                 glib:get-type="arv_dom_node_type_get_type"
                 c:type="ArvDomNodeType">
      <member name="element_node"
              value="1"
              c:identifier="ARV_DOM_NODE_TYPE_ELEMENT_NODE"
              glib:nick="element-node">
      </member>
      <member name="attribute_node"
              value="2"
              c:identifier="ARV_DOM_NODE_TYPE_ATTRIBUTE_NODE"
              glib:nick="attribute-node">
      </member>
      <member name="text_node"
              value="3"
              c:identifier="ARV_DOM_NODE_TYPE_TEXT_NODE"
              glib:nick="text-node">
      </member>
      <member name="cdata_section_node"
              value="4"
              c:identifier="ARV_DOM_NODE_TYPE_CDATA_SECTION_NODE"
              glib:nick="cdata-section-node">
      </member>
      <member name="entity_reference_node"
              value="5"
              c:identifier="ARV_DOM_NODE_TYPE_ENTITY_REFERENCE_NODE"
              glib:nick="entity-reference-node">
      </member>
      <member name="entity_node"
              value="6"
              c:identifier="ARV_DOM_NODE_TYPE_ENTITY_NODE"
              glib:nick="entity-node">
      </member>
      <member name="processing_instruction_node"
              value="7"
              c:identifier="ARV_DOM_NODE_TYPE_PROCESSING_INSTRUCTION_NODE"
              glib:nick="processing-instruction-node">
      </member>
      <member name="comment_node"
              value="8"
              c:identifier="ARV_DOM_NODE_TYPE_COMMENT_NODE"
              glib:nick="comment-node">
      </member>
      <member name="document_node"
              value="9"
              c:identifier="ARV_DOM_NODE_TYPE_DOCUMENT_NODE"
              glib:nick="document-node">
      </member>
      <member name="document_type_node"
              value="10"
              c:identifier="ARV_DOM_NODE_TYPE_DOCUMENT_TYPE_NODE"
              glib:nick="document-type-node">
      </member>
      <member name="document_fragment_node"
              value="11"
              c:identifier="ARV_DOM_NODE_TYPE_DOCUMENT_FRAGMENT_NODE"
              glib:nick="document-fragment-node">
      </member>
      <member name="notation_node"
              value="12"
              c:identifier="ARV_DOM_NODE_TYPE_NOTATION_NODE"
              glib:nick="notation-node">
      </member>
    </enumeration>
    <class name="DomText"
           c:symbol-prefix="dom_text"
           c:type="ArvDomText"
           parent="DomCharacterData"
           glib:type-name="ArvDomText"
           glib:get-type="arv_dom_text_get_type"
           glib:type-struct="DomTextClass">
      <source-position filename="arvdomtext.h" line="46"/>
      <constructor name="new" c:identifier="arv_dom_text_new">
        <source-position filename="arvdomtext.h" line="50"/>
        <return-value transfer-ownership="full">
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="character_data">
        <type name="DomCharacterData" c:type="ArvDomCharacterData"/>
      </field>
    </class>
    <record name="DomTextClass"
            c:type="ArvDomTextClass"
            glib:is-gtype-struct-for="DomText">
      <source-position filename="arvdomtext.h" line="46"/>
      <field name="parent_class">
        <type name="DomCharacterDataClass" c:type="ArvDomCharacterDataClass"/>
      </field>
    </record>
    <function-macro name="EVALUATOR"
                    c:identifier="ARV_EVALUATOR"
                    introspectable="0">
      <source-position filename="arvevaluator.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="EVALUATOR_CLASS"
                    c:identifier="ARV_EVALUATOR_CLASS"
                    introspectable="0">
      <source-position filename="arvevaluator.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="EVALUATOR_GET_CLASS"
                    c:identifier="ARV_EVALUATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvevaluator.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Evaluator"
           c:symbol-prefix="evaluator"
           c:type="ArvEvaluator"
           parent="GObject.Object"
           glib:type-name="ArvEvaluator"
           glib:get-type="arv_evaluator_get_type"
           glib:type-struct="EvaluatorClass">
      <source-position filename="arvevaluator.h" line="48"/>
      <constructor name="new" c:identifier="arv_evaluator_new">
        <doc xml:space="preserve"
             filename="arvevaluator.c"
             line="1086">Creates a new #ArvEvaluator object. The syntax is described in the genicam standard specification.</doc>
        <source-position filename="arvevaluator.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvevaluator.c"
               line="1092">a new #ArvEvaluator object.</doc>
          <type name="Evaluator" c:type="ArvEvaluator*"/>
        </return-value>
        <parameters>
          <parameter name="expression"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvevaluator.c"
                 line="1088">an evaluator expression</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="evaluate_as_double"
              c:identifier="arv_evaluator_evaluate_as_double"
              throws="1">
        <source-position filename="arvevaluator.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="evaluate_as_int64"
              c:identifier="arv_evaluator_evaluate_as_int64"
              throws="1">
        <source-position filename="arvevaluator.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expression"
              c:identifier="arv_evaluator_get_expression">
        <source-position filename="arvevaluator.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_double_variable"
              c:identifier="arv_evaluator_set_double_variable">
        <source-position filename="arvevaluator.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="v_double" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expression"
              c:identifier="arv_evaluator_set_expression">
        <source-position filename="arvevaluator.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="expression" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int64_variable"
              c:identifier="arv_evaluator_set_int64_variable">
        <source-position filename="arvevaluator.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="v_int64" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="EvaluatorPrivate" c:type="ArvEvaluatorPrivate*"/>
      </field>
    </class>
    <record name="EvaluatorClass"
            c:type="ArvEvaluatorClass"
            glib:is-gtype-struct-for="Evaluator">
      <source-position filename="arvevaluator.h" line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="EvaluatorPrivate" c:type="ArvEvaluatorPrivate" disguised="1">
      <source-position filename="arvevaluator.h" line="37"/>
    </record>
    <function-macro name="FAKE_CAMERA"
                    c:identifier="ARV_FAKE_CAMERA"
                    introspectable="0">
      <source-position filename="arvfakecamera.h" line="86"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="FAKE_CAMERA_ACQUISITION_FRAME_RATE_DEFAULT"
              value="25.000000"
              c:type="ARV_FAKE_CAMERA_ACQUISITION_FRAME_RATE_DEFAULT">
      <source-position filename="arvfakecamera.h" line="77"/>
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="FAKE_CAMERA_BINNING_HORIZONTAL_DEFAULT"
              value="1"
              c:type="ARV_FAKE_CAMERA_BINNING_HORIZONTAL_DEFAULT">
      <source-position filename="arvfakecamera.h" line="56"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_BINNING_VERTICAL_DEFAULT"
              value="1"
              c:type="ARV_FAKE_CAMERA_BINNING_VERTICAL_DEFAULT">
      <source-position filename="arvfakecamera.h" line="57"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="FAKE_CAMERA_CLASS"
                    c:identifier="ARV_FAKE_CAMERA_CLASS"
                    introspectable="0">
      <source-position filename="arvfakecamera.h" line="87"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="FAKE_CAMERA_EXPOSURE_TIME_US_DEFAULT"
              value="10000.000000"
              c:type="ARV_FAKE_CAMERA_EXPOSURE_TIME_US_DEFAULT">
      <source-position filename="arvfakecamera.h" line="78"/>
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <function-macro name="FAKE_CAMERA_GET_CLASS"
                    c:identifier="ARV_FAKE_CAMERA_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvfakecamera.h" line="90"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="FAKE_CAMERA_HEIGHT_DEFAULT"
              value="512"
              c:type="ARV_FAKE_CAMERA_HEIGHT_DEFAULT">
      <source-position filename="arvfakecamera.h" line="55"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_MEMORY_SIZE"
              value="65536"
              c:type="ARV_FAKE_CAMERA_MEMORY_SIZE">
      <source-position filename="arvfakecamera.h" line="35"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION"
              value="292"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION">
      <source-position filename="arvfakecamera.h" line="74"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_FRAME_PERIOD_US"
              value="312"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION_FRAME_PERIOD_US">
      <source-position filename="arvfakecamera.h" line="65"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_MODE"
              value="300"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION_MODE">
      <source-position filename="arvfakecamera.h" line="63"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_START_OFFSET"
              value="32"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION_START_OFFSET">
      <source-position filename="arvfakecamera.h" line="68"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_BINNING_HORIZONTAL"
              value="264"
              c:type="ARV_FAKE_CAMERA_REGISTER_BINNING_HORIZONTAL">
      <source-position filename="arvfakecamera.h" line="47"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_BINNING_VERTICAL"
              value="268"
              c:type="ARV_FAKE_CAMERA_REGISTER_BINNING_VERTICAL">
      <source-position filename="arvfakecamera.h" line="48"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_EXPOSURE_TIME_US"
              value="288"
              c:type="ARV_FAKE_CAMERA_REGISTER_EXPOSURE_TIME_US">
      <source-position filename="arvfakecamera.h" line="75"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_FRAME_START_OFFSET"
              value="0"
              c:type="ARV_FAKE_CAMERA_REGISTER_FRAME_START_OFFSET">
      <source-position filename="arvfakecamera.h" line="67"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_GAIN_MODE"
              value="276"
              c:type="ARV_FAKE_CAMERA_REGISTER_GAIN_MODE">
      <source-position filename="arvfakecamera.h" line="83"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_GAIN_RAW"
              value="272"
              c:type="ARV_FAKE_CAMERA_REGISTER_GAIN_RAW">
      <source-position filename="arvfakecamera.h" line="82"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_HEIGHT"
              value="260"
              c:type="ARV_FAKE_CAMERA_REGISTER_HEIGHT">
      <source-position filename="arvfakecamera.h" line="44"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_PIXEL_FORMAT"
              value="296"
              c:type="ARV_FAKE_CAMERA_REGISTER_PIXEL_FORMAT">
      <source-position filename="arvfakecamera.h" line="49"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_SENSOR_HEIGHT"
              value="280"
              c:type="ARV_FAKE_CAMERA_REGISTER_SENSOR_HEIGHT">
      <source-position filename="arvfakecamera.h" line="42"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_SENSOR_WIDTH"
              value="284"
              c:type="ARV_FAKE_CAMERA_REGISTER_SENSOR_WIDTH">
      <source-position filename="arvfakecamera.h" line="41"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TEST"
              value="496"
              c:type="ARV_FAKE_CAMERA_REGISTER_TEST">
      <source-position filename="arvfakecamera.h" line="50"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_ACTIVATION"
              value="776"
              c:type="ARV_FAKE_CAMERA_REGISTER_TRIGGER_ACTIVATION">
      <source-position filename="arvfakecamera.h" line="72"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_MODE"
              value="768"
              c:type="ARV_FAKE_CAMERA_REGISTER_TRIGGER_MODE">
      <source-position filename="arvfakecamera.h" line="70"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_SOURCE"
              value="772"
              c:type="ARV_FAKE_CAMERA_REGISTER_TRIGGER_SOURCE">
      <source-position filename="arvfakecamera.h" line="71"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_WIDTH"
              value="256"
              c:type="ARV_FAKE_CAMERA_REGISTER_WIDTH">
      <source-position filename="arvfakecamera.h" line="43"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_X_OFFSET"
              value="304"
              c:type="ARV_FAKE_CAMERA_REGISTER_X_OFFSET">
      <source-position filename="arvfakecamera.h" line="45"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_Y_OFFSET"
              value="308"
              c:type="ARV_FAKE_CAMERA_REGISTER_Y_OFFSET">
      <source-position filename="arvfakecamera.h" line="46"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_SENSOR_HEIGHT"
              value="2048"
              c:type="ARV_FAKE_CAMERA_SENSOR_HEIGHT">
      <source-position filename="arvfakecamera.h" line="53"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_SENSOR_WIDTH"
              value="2048"
              c:type="ARV_FAKE_CAMERA_SENSOR_WIDTH">
      <source-position filename="arvfakecamera.h" line="52"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_TEST_REGISTER_DEFAULT"
              value="305419896"
              c:type="ARV_FAKE_CAMERA_TEST_REGISTER_DEFAULT">
      <source-position filename="arvfakecamera.h" line="59"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_WIDTH_DEFAULT"
              value="512"
              c:type="ARV_FAKE_CAMERA_WIDTH_DEFAULT">
      <source-position filename="arvfakecamera.h" line="54"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="FAKE_DEVICE"
                    c:identifier="ARV_FAKE_DEVICE"
                    introspectable="0">
      <source-position filename="arvfakedevice.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FAKE_DEVICE_CLASS"
                    c:identifier="ARV_FAKE_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="arvfakedevice.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FAKE_DEVICE_GET_CLASS"
                    c:identifier="ARV_FAKE_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvfakedevice.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FAKE_INTERFACE"
                    c:identifier="ARV_FAKE_INTERFACE"
                    introspectable="0">
      <source-position filename="arvfakeinterface.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FAKE_INTERFACE_CLASS"
                    c:identifier="ARV_FAKE_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="arvfakeinterface.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="FAKE_INTERFACE_DISCOVERY_TIMEOUT_MS"
              value="1000"
              c:type="ARV_FAKE_INTERFACE_DISCOVERY_TIMEOUT_MS">
      <source-position filename="arvfakeinterface.h" line="31"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="FAKE_INTERFACE_GET_CLASS"
                    c:identifier="ARV_FAKE_INTERFACE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvfakeinterface.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="FAKE_INTERFACE_SOCKET_BUFFER_SIZE"
              value="1024"
              c:type="ARV_FAKE_INTERFACE_SOCKET_BUFFER_SIZE">
      <source-position filename="arvfakeinterface.h" line="32"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="FAKE_STREAM"
                    c:identifier="ARV_FAKE_STREAM"
                    introspectable="0">
      <source-position filename="arvfakestream.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FAKE_STREAM_CLASS"
                    c:identifier="ARV_FAKE_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arvfakestream.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FAKE_STREAM_GET_CLASS"
                    c:identifier="ARV_FAKE_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvfakestream.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="FakeCamera"
           c:symbol-prefix="fake_camera"
           c:type="ArvFakeCamera"
           parent="GObject.Object"
           glib:type-name="ArvFakeCamera"
           glib:get-type="arv_fake_camera_get_type"
           glib:type-struct="FakeCameraClass">
      <doc xml:space="preserve"
           filename="arvfakecamera.c"
           line="23">#ArvFakeCamera is a class that simulate a real camera, which provides
methods for the implementation of #ArvFakeDevice and #ArvFakeStream.

arv-fake-gv-camera is a GV camera simulator based on this class.</doc>
      <source-position filename="arvfakecamera.h" line="103"/>
      <constructor name="new" c:identifier="arv_fake_camera_new">
        <source-position filename="arvfakecamera.h" line="107"/>
        <return-value transfer-ownership="full">
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
        <parameters>
          <parameter name="serial_number" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="fill_buffer" c:identifier="arv_fake_camera_fill_buffer">
        <source-position filename="arvfakecamera.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_acquisition_status"
              c:identifier="arv_fake_camera_get_acquisition_status">
        <source-position filename="arvfakecamera.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_control_channel_privilege"
              c:identifier="arv_fake_camera_get_control_channel_privilege">
        <source-position filename="arvfakecamera.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_heartbeat_timeout"
              c:identifier="arv_fake_camera_get_heartbeat_timeout">
        <source-position filename="arvfakecamera.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_payload" c:identifier="arv_fake_camera_get_payload">
        <source-position filename="arvfakecamera.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="size_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stream_address"
              c:identifier="arv_fake_camera_get_stream_address">
        <source-position filename="arvfakecamera.h" line="120"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvfakecamera.c"
               line="337">the data stream #GSocketAddress for this camera</doc>
          <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvfakecamera.c"
                 line="335">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_memory" c:identifier="arv_fake_camera_read_memory">
        <source-position filename="arvfakecamera.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_register"
              c:identifier="arv_fake_camera_read_register">
        <source-position filename="arvfakecamera.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_control_channel_privilege"
              c:identifier="arv_fake_camera_set_control_channel_privilege">
        <source-position filename="arvfakecamera.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="privilege" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fill_pattern"
              c:identifier="arv_fake_camera_set_fill_pattern">
        <doc xml:space="preserve"
             filename="arvfakecamera.c"
             line="222">Sets the fill pattern callback for custom test images.</doc>
        <source-position filename="arvfakecamera.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvfakecamera.c"
                 line="224">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="fill_pattern_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="arvfakecamera.c"
                 line="225">callback for image filling</doc>
            <type name="FakeCameraFillPattern"
                  c:type="ArvFakeCameraFillPattern"/>
          </parameter>
          <parameter name="fill_pattern_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvfakecamera.c"
                 line="226">image filling user data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_inet_address"
              c:identifier="arv_fake_camera_set_inet_address">
        <source-position filename="arvfakecamera.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trigger_frequency"
              c:identifier="arv_fake_camera_set_trigger_frequency">
        <source-position filename="arvfakecamera.h" line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="frequency" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_for_next_frame"
              c:identifier="arv_fake_camera_wait_for_next_frame">
        <source-position filename="arvfakecamera.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="write_memory" c:identifier="arv_fake_camera_write_memory">
        <source-position filename="arvfakecamera.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_register"
              c:identifier="arv_fake_camera_write_register">
        <source-position filename="arvfakecamera.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FakeCameraPrivate" c:type="ArvFakeCameraPrivate*"/>
      </field>
    </class>
    <record name="FakeCameraClass"
            c:type="ArvFakeCameraClass"
            glib:is-gtype-struct-for="FakeCamera">
      <source-position filename="arvfakecamera.h" line="103"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="FakeCameraFillPattern" c:type="ArvFakeCameraFillPattern">
      <source-position filename="arvfakecamera.h" line="31"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
        <parameter name="fill_pattern_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="exposure_time_us" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="gain" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="pixel_format" transfer-ownership="none">
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </parameter>
      </parameters>
    </callback>
    <record name="FakeCameraPrivate"
            c:type="ArvFakeCameraPrivate"
            disguised="1">
      <source-position filename="arvfakecamera.h" line="93"/>
    </record>
    <class name="FakeDevice"
           c:symbol-prefix="fake_device"
           c:type="ArvFakeDevice"
           parent="Device"
           glib:type-name="ArvFakeDevice"
           glib:get-type="arv_fake_device_get_type"
           glib:type-struct="FakeDeviceClass">
      <source-position filename="arvfakedevice.h" line="49"/>
      <constructor name="new" c:identifier="arv_fake_device_new">
        <source-position filename="arvfakedevice.h" line="53"/>
        <return-value transfer-ownership="full">
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="serial_number" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_fake_camera"
              c:identifier="arv_fake_device_get_fake_camera">
        <source-position filename="arvfakedevice.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvfakedevice.c"
               line="104">the #ArvFakeCamera used by this device instance.</doc>
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvfakedevice.c"
                 line="102">a fake device</doc>
            <type name="FakeDevice" c:type="ArvFakeDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="device">
        <type name="Device" c:type="ArvDevice"/>
      </field>
      <field name="priv">
        <type name="FakeDevicePrivate" c:type="ArvFakeDevicePrivate*"/>
      </field>
    </class>
    <record name="FakeDeviceClass"
            c:type="ArvFakeDeviceClass"
            glib:is-gtype-struct-for="FakeDevice">
      <source-position filename="arvfakedevice.h" line="49"/>
      <field name="parent_class">
        <type name="DeviceClass" c:type="ArvDeviceClass"/>
      </field>
    </record>
    <record name="FakeDevicePrivate"
            c:type="ArvFakeDevicePrivate"
            disguised="1">
      <source-position filename="arvfakedevice.h" line="39"/>
    </record>
    <class name="FakeInterface"
           c:symbol-prefix="fake_interface"
           c:type="ArvFakeInterface"
           parent="Interface"
           glib:type-name="ArvFakeInterface"
           glib:get-type="arv_fake_interface_get_type"
           glib:type-struct="FakeInterfaceClass">
      <source-position filename="arvfakeinterface.h" line="52"/>
      <function name="destroy_instance"
                c:identifier="arv_fake_interface_destroy_instance">
        <source-position filename="arvfakeinterface.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="get_instance"
                c:identifier="arv_fake_interface_get_instance">
        <doc xml:space="preserve"
             filename="arvfakeinterface.c"
             line="73">Gets the unique instance of the fake interface.</doc>
        <source-position filename="arvfakeinterface.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvfakeinterface.c"
               line="78">a #ArvInterface singleton.</doc>
          <type name="Interface" c:type="ArvInterface*"/>
        </return-value>
      </function>
      <field name="interface">
        <type name="Interface" c:type="ArvInterface"/>
      </field>
      <field name="priv">
        <type name="FakeInterfacePrivate" c:type="ArvFakeInterfacePrivate*"/>
      </field>
    </class>
    <record name="FakeInterfaceClass"
            c:type="ArvFakeInterfaceClass"
            glib:is-gtype-struct-for="FakeInterface">
      <source-position filename="arvfakeinterface.h" line="52"/>
      <field name="parent_class">
        <type name="InterfaceClass" c:type="ArvInterfaceClass"/>
      </field>
    </record>
    <record name="FakeInterfacePrivate"
            c:type="ArvFakeInterfacePrivate"
            disguised="1">
      <source-position filename="arvfakeinterface.h" line="41"/>
    </record>
    <class name="FakeStream"
           c:symbol-prefix="fake_stream"
           c:type="ArvFakeStream"
           parent="Stream"
           glib:type-name="ArvFakeStream"
           glib:get-type="arv_fake_stream_get_type"
           glib:type-struct="FakeStreamClass">
      <source-position filename="arvfakestream.h" line="50"/>
      <constructor name="new"
                   c:identifier="arv_fake_stream_new"
                   introspectable="0">
        <source-position filename="arvfakestream.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvfakestream.c"
               line="106">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvfakestream.c"
                 line="102">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="arvfakestream.c"
                 line="103">image processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvfakestream.c"
                 line="104">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="stream">
        <type name="Stream" c:type="ArvStream"/>
      </field>
      <field name="priv">
        <type name="FakeStreamPrivate" c:type="ArvFakeStreamPrivate*"/>
      </field>
    </class>
    <record name="FakeStreamClass"
            c:type="ArvFakeStreamClass"
            glib:is-gtype-struct-for="FakeStream">
      <source-position filename="arvfakestream.h" line="50"/>
      <field name="parent_class">
        <type name="StreamClass" c:type="ArvStreamClass"/>
      </field>
    </record>
    <record name="FakeStreamPrivate"
            c:type="ArvFakeStreamPrivate"
            disguised="1">
      <source-position filename="arvfakestream.h" line="39"/>
    </record>
    <callback name="FrameCallback" c:type="ArvFrameCallback">
      <source-position filename="arvbuffer.h" line="30"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
      </parameters>
    </callback>
    <function-macro name="GC" c:identifier="ARV_GC" introspectable="0">
      <source-position filename="arvgc.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_BOOLEAN"
                    c:identifier="ARV_GC_BOOLEAN"
                    introspectable="0">
      <source-position filename="arvgcboolean.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_BOOLEAN_CLASS"
                    c:identifier="ARV_GC_BOOLEAN_CLASS"
                    introspectable="0">
      <source-position filename="arvgcboolean.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_BOOLEAN_GET_CLASS"
                    c:identifier="ARV_GC_BOOLEAN_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcboolean.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_CATEGORY"
                    c:identifier="ARV_GC_CATEGORY"
                    introspectable="0">
      <source-position filename="arvgccategory.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_CATEGORY_CLASS"
                    c:identifier="ARV_GC_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="arvgccategory.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_CATEGORY_GET_CLASS"
                    c:identifier="ARV_GC_CATEGORY_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgccategory.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_CLASS"
                    c:identifier="ARV_GC_CLASS"
                    introspectable="0">
      <source-position filename="arvgc.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_COMMAND"
                    c:identifier="ARV_GC_COMMAND"
                    introspectable="0">
      <source-position filename="arvgccommand.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_COMMAND_CLASS"
                    c:identifier="ARV_GC_COMMAND_CLASS"
                    introspectable="0">
      <source-position filename="arvgccommand.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_COMMAND_GET_CLASS"
                    c:identifier="ARV_GC_COMMAND_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgccommand.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_CONVERTER"
                    c:identifier="ARV_GC_CONVERTER"
                    introspectable="0">
      <source-position filename="arvgcconverter.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_CONVERTER_CLASS"
                    c:identifier="ARV_GC_CONVERTER_CLASS"
                    introspectable="0">
      <source-position filename="arvgcconverter.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_CONVERTER_GET_CLASS"
                    c:identifier="ARV_GC_CONVERTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcconverter.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_ENUMERATION"
                    c:identifier="ARV_GC_ENUMERATION"
                    introspectable="0">
      <source-position filename="arvgcenumeration.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_ENUMERATION_CLASS"
                    c:identifier="ARV_GC_ENUMERATION_CLASS"
                    introspectable="0">
      <source-position filename="arvgcenumeration.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_ENUMERATION_GET_CLASS"
                    c:identifier="ARV_GC_ENUMERATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcenumeration.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_ENUM_ENTRY"
                    c:identifier="ARV_GC_ENUM_ENTRY"
                    introspectable="0">
      <source-position filename="arvgcenumentry.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_ENUM_ENTRY_CLASS"
                    c:identifier="ARV_GC_ENUM_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="arvgcenumentry.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_ENUM_ENTRY_GET_CLASS"
                    c:identifier="ARV_GC_ENUM_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcenumentry.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FEATURE_NODE"
                    c:identifier="ARV_GC_FEATURE_NODE"
                    introspectable="0">
      <source-position filename="arvgcfeaturenode.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FEATURE_NODE_CLASS"
                    c:identifier="ARV_GC_FEATURE_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcfeaturenode.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FEATURE_NODE_GET_CLASS"
                    c:identifier="ARV_GC_FEATURE_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcfeaturenode.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FLOAT"
                    c:identifier="ARV_GC_FLOAT"
                    introspectable="0">
      <source-position filename="arvgcfloat.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FLOAT_GET_INTERFACE"
                    c:identifier="ARV_GC_FLOAT_GET_INTERFACE"
                    introspectable="0">
      <source-position filename="arvgcfloat.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FLOAT_NODE"
                    c:identifier="ARV_GC_FLOAT_NODE"
                    introspectable="0">
      <source-position filename="arvgcfloatnode.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FLOAT_NODE_CLASS"
                    c:identifier="ARV_GC_FLOAT_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcfloatnode.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_FLOAT_NODE_GET_CLASS"
                    c:identifier="ARV_GC_FLOAT_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcfloatnode.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_GET_CLASS"
                    c:identifier="ARV_GC_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgc.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_GROUP_NODE"
                    c:identifier="ARV_GC_GROUP_NODE"
                    introspectable="0">
      <source-position filename="arvgcgroupnode.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_GROUP_NODE_CLASS"
                    c:identifier="ARV_GC_GROUP_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcgroupnode.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_GROUP_NODE_GET_CLASS"
                    c:identifier="ARV_GC_GROUP_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcgroupnode.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INDEX_NODE"
                    c:identifier="ARV_GC_INDEX_NODE"
                    introspectable="0">
      <source-position filename="arvgcindexnode.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INDEX_NODE_CLASS"
                    c:identifier="ARV_GC_INDEX_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcindexnode.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INDEX_NODE_GET_CLASS"
                    c:identifier="ARV_GC_INDEX_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcindexnode.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INTEGER"
                    c:identifier="ARV_GC_INTEGER"
                    introspectable="0">
      <source-position filename="arvgcinteger.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INTEGER_GET_INTERFACE"
                    c:identifier="ARV_GC_INTEGER_GET_INTERFACE"
                    introspectable="0">
      <source-position filename="arvgcinteger.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INTEGER_NODE"
                    c:identifier="ARV_GC_INTEGER_NODE"
                    introspectable="0">
      <source-position filename="arvgcintegernode.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INTEGER_NODE_CLASS"
                    c:identifier="ARV_GC_INTEGER_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcintegernode.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INTEGER_NODE_GET_CLASS"
                    c:identifier="ARV_GC_INTEGER_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcintegernode.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INVALIDATOR_NODE"
                    c:identifier="ARV_GC_INVALIDATOR_NODE"
                    introspectable="0">
      <source-position filename="arvgcinvalidatornode.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INVALIDATOR_NODE_CLASS"
                    c:identifier="ARV_GC_INVALIDATOR_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcinvalidatornode.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_INVALIDATOR_NODE_GET_CLASS"
                    c:identifier="ARV_GC_INVALIDATOR_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcinvalidatornode.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_NODE"
                    c:identifier="ARV_GC_NODE"
                    introspectable="0">
      <source-position filename="arvgcnode.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_NODE_CLASS"
                    c:identifier="ARV_GC_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcnode.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_NODE_GET_CLASS"
                    c:identifier="ARV_GC_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcnode.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_PORT"
                    c:identifier="ARV_GC_PORT"
                    introspectable="0">
      <source-position filename="arvgcport.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_PORT_CLASS"
                    c:identifier="ARV_GC_PORT_CLASS"
                    introspectable="0">
      <source-position filename="arvgcport.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_PORT_GET_CLASS"
                    c:identifier="ARV_GC_PORT_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcport.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_PROPERTY_NODE"
                    c:identifier="ARV_GC_PROPERTY_NODE"
                    introspectable="0">
      <source-position filename="arvgcpropertynode.h" line="80"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_PROPERTY_NODE_CLASS"
                    c:identifier="ARV_GC_PROPERTY_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcpropertynode.h" line="81"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_PROPERTY_NODE_GET_CLASS"
                    c:identifier="ARV_GC_PROPERTY_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcpropertynode.h" line="84"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER"
                    c:identifier="ARV_GC_REGISTER"
                    introspectable="0">
      <source-position filename="arvgcregister.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER_DESCRIPTION_NODE"
                    c:identifier="ARV_GC_REGISTER_DESCRIPTION_NODE"
                    introspectable="0">
      <source-position filename="arvgcregisterdescriptionnode.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER_DESCRIPTION_NODE_CLASS"
                    c:identifier="ARV_GC_REGISTER_DESCRIPTION_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcregisterdescriptionnode.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER_DESCRIPTION_NODE_GET_CLASS"
                    c:identifier="ARV_GC_REGISTER_DESCRIPTION_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcregisterdescriptionnode.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER_GET_CLASS"
                    c:identifier="ARV_GC_REGISTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcregisternode.h" line="68"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER_GET_INTERFACE"
                    c:identifier="ARV_GC_REGISTER_GET_INTERFACE"
                    introspectable="0">
      <source-position filename="arvgcregister.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER_NODE"
                    c:identifier="ARV_GC_REGISTER_NODE"
                    introspectable="0">
      <source-position filename="arvgcregisternode.h" line="64"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_REGISTER_NODE_CLASS"
                    c:identifier="ARV_GC_REGISTER_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcregisternode.h" line="65"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_STRING"
                    c:identifier="ARV_GC_STRING"
                    introspectable="0">
      <source-position filename="arvgcstring.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_STRING_GET_INTERFACE"
                    c:identifier="ARV_GC_STRING_GET_INTERFACE"
                    introspectable="0">
      <source-position filename="arvgcstring.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_STRUCT_ENTRY_NODE"
                    c:identifier="ARV_GC_STRUCT_ENTRY_NODE"
                    introspectable="0">
      <source-position filename="arvgcstructentrynode.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_STRUCT_ENTRY_NODE_CLASS"
                    c:identifier="ARV_GC_STRUCT_ENTRY_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcstructentrynode.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_STRUCT_ENTRY_NODE_GET_CLASS"
                    c:identifier="ARV_GC_STRUCT_ENTRY_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcstructentrynode.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_SWISS_KNIFE"
                    c:identifier="ARV_GC_SWISS_KNIFE"
                    introspectable="0">
      <source-position filename="arvgcswissknife.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_SWISS_KNIFE_CLASS"
                    c:identifier="ARV_GC_SWISS_KNIFE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcswissknife.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_SWISS_KNIFE_GET_CLASS"
                    c:identifier="ARV_GC_SWISS_KNIFE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcswissknife.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_VARIABLE_NODE"
                    c:identifier="ARV_GC_VARIABLE_NODE"
                    introspectable="0">
      <source-position filename="arvgcvariablenode.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_VARIABLE_NODE_CLASS"
                    c:identifier="ARV_GC_VARIABLE_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcvariablenode.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GC_VARIABLE_NODE_GET_CLASS"
                    c:identifier="ARV_GC_VARIABLE_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgcvariablenode.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GV_DEVICE"
                    c:identifier="ARV_GV_DEVICE"
                    introspectable="0">
      <source-position filename="arvgvdevice.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GV_DEVICE_BUFFER_SIZE"
              value="1024"
              c:type="ARV_GV_DEVICE_BUFFER_SIZE">
      <source-position filename="arvgvdevice.h" line="47"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="GV_DEVICE_CLASS"
                    c:identifier="ARV_GV_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="arvgvdevice.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GV_DEVICE_GET_CLASS"
                    c:identifier="ARV_GV_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgvdevice.h" line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GV_DEVICE_GVCP_N_RETRIES_DEFAULT"
              value="5"
              c:type="ARV_GV_DEVICE_GVCP_N_RETRIES_DEFAULT">
      <source-position filename="arvgvdevice.h" line="32"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_GVCP_TIMEOUT_MS_DEFAULT"
              value="500"
              c:type="ARV_GV_DEVICE_GVCP_TIMEOUT_MS_DEFAULT">
      <source-position filename="arvgvdevice.h" line="33"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_GVSP_PACKET_SIZE_DEFAULT"
              value="1500"
              c:type="ARV_GV_DEVICE_GVSP_PACKET_SIZE_DEFAULT">
      <source-position filename="arvgvdevice.h" line="38"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_HEARTBEAT_PERIOD_US"
              value="1000000"
              c:type="ARV_GV_DEVICE_HEARTBEAT_PERIOD_US">
      <source-position filename="arvgvdevice.h" line="34"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_HEARTBEAT_RETRY_DELAY_US"
              value="10000"
              c:type="ARV_GV_DEVICE_HEARTBEAT_RETRY_DELAY_US">
      <source-position filename="arvgvdevice.h" line="35"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_HEARTBEAT_RETRY_TIMEOUT_S"
              value="5.000000"
              c:type="ARV_GV_DEVICE_HEARTBEAT_RETRY_TIMEOUT_S">
      <source-position filename="arvgvdevice.h" line="36"/>
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <function-macro name="GV_INTERFACE"
                    c:identifier="ARV_GV_INTERFACE"
                    introspectable="0">
      <source-position filename="arvgvinterface.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GV_INTERFACE_CLASS"
                    c:identifier="ARV_GV_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="arvgvinterface.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GV_INTERFACE_DISCOVERY_TIMEOUT_MS"
              value="1000"
              c:type="ARV_GV_INTERFACE_DISCOVERY_TIMEOUT_MS">
      <source-position filename="arvgvinterface.h" line="32"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="GV_INTERFACE_GET_CLASS"
                    c:identifier="ARV_GV_INTERFACE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgvinterface.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GV_INTERFACE_SOCKET_BUFFER_SIZE"
              value="1024"
              c:type="ARV_GV_INTERFACE_SOCKET_BUFFER_SIZE">
      <source-position filename="arvgvinterface.h" line="33"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="GV_STREAM"
                    c:identifier="ARV_GV_STREAM"
                    introspectable="0">
      <source-position filename="arvgvstream.h" line="55"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GV_STREAM_CLASS"
                    c:identifier="ARV_GV_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arvgvstream.h" line="56"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GV_STREAM_GET_CLASS"
                    c:identifier="ARV_GV_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvgvstream.h" line="59"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Gc"
           c:symbol-prefix="gc"
           c:type="ArvGc"
           parent="DomDocument"
           glib:type-name="ArvGc"
           glib:get-type="arv_gc_get_type"
           glib:type-struct="GcClass">
      <doc xml:space="preserve"
           filename="arvgc.c"
           line="23">#ArvGc implements the root document for the storage of the Genicam feature
nodes. It builds the node tree by parsing an xml file in the Genicam
standard format. See http://www.genicam.org.</doc>
      <source-position filename="arvgc.h" line="49"/>
      <constructor name="new" c:identifier="arv_gc_new">
        <source-position filename="arvgc.h" line="53"/>
        <return-value transfer-ownership="full">
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </parameter>
          <parameter name="xml"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="size_t"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_buffer" c:identifier="arv_gc_get_buffer">
        <doc xml:space="preserve"
             filename="arvgc.c"
             line="311">Retrieves the binded buffer.</doc>
        <source-position filename="arvgc.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgc.c"
               line="317">a #ArvBuffer.</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgc.c"
                 line="313">a #ArvGc object</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device" c:identifier="arv_gc_get_device">
        <doc xml:space="preserve"
             filename="arvgc.c"
             line="237">Retrieves the device handled by this genicam interface. The device is used for register access.</doc>
        <source-position filename="arvgc.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgc.c"
               line="243">a #ArvDevice.</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgc.c"
                 line="239">a #ArvGc object</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node" c:identifier="arv_gc_get_node">
        <doc xml:space="preserve"
             filename="arvgc.c"
             line="218">Retrieves a genicam node by name.</doc>
        <source-position filename="arvgc.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgc.c"
               line="225">a #ArvGcNode, null if not found.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgc.c"
                 line="220">a #ArvGc object</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgc.c"
                 line="221">node name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_feature_node"
              c:identifier="arv_gc_register_feature_node">
        <source-position filename="arvgc.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer" c:identifier="arv_gc_set_buffer">
        <source-position filename="arvgc.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_node_data"
              c:identifier="arv_gc_set_default_node_data">
        <source-position filename="arvgc.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="node_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="node_data" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="DomDocument" c:type="ArvDomDocument"/>
      </field>
      <field name="priv">
        <type name="GcPrivate" c:type="ArvGcPrivate*"/>
      </field>
    </class>
    <enumeration name="GcAccessMode"
                 glib:type-name="ArvGcAccessMode"
                 glib:get-type="arv_gc_access_mode_get_type"
                 c:type="ArvGcAccessMode">
      <member name="ro"
              value="0"
              c:identifier="ARV_GC_ACCESS_MODE_RO"
              glib:nick="ro">
      </member>
      <member name="wo"
              value="1"
              c:identifier="ARV_GC_ACCESS_MODE_WO"
              glib:nick="wo">
      </member>
      <member name="rw"
              value="2"
              c:identifier="ARV_GC_ACCESS_MODE_RW"
              glib:nick="rw">
      </member>
    </enumeration>
    <class name="GcBoolean"
           c:symbol-prefix="gc_boolean"
           c:type="ArvGcBoolean"
           parent="GcFeatureNode"
           glib:type-name="ArvGcBoolean"
           glib:get-type="arv_gc_boolean_get_type"
           glib:type-struct="GcBooleanClass">
      <source-position filename="arvgcboolean.h" line="51"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_boolean_new">
        <source-position filename="arvgcboolean.h" line="54"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_value"
              c:identifier="arv_gc_boolean_get_value"
              throws="1">
        <source-position filename="arvgcboolean.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_boolean" transfer-ownership="none">
            <type name="GcBoolean" c:type="ArvGcBoolean*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_boolean_set_value"
              throws="1">
        <source-position filename="arvgcboolean.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_boolean" transfer-ownership="none">
            <type name="GcBoolean" c:type="ArvGcBoolean*"/>
          </instance-parameter>
          <parameter name="v_boolean" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="on_value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="off_value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
    </class>
    <record name="GcBooleanClass"
            c:type="ArvGcBooleanClass"
            glib:is-gtype-struct-for="GcBoolean">
      <source-position filename="arvgcboolean.h" line="51"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <enumeration name="GcCachable"
                 glib:type-name="ArvGcCachable"
                 glib:get-type="arv_gc_cachable_get_type"
                 c:type="ArvGcCachable">
      <member name="no_cache"
              value="0"
              c:identifier="ARV_GC_CACHABLE_NO_CACHE"
              glib:nick="no-cache">
      </member>
      <member name="write_trhough"
              value="1"
              c:identifier="ARV_GC_CACHABLE_WRITE_TRHOUGH"
              glib:nick="write-trhough">
      </member>
      <member name="write_around"
              value="2"
              c:identifier="ARV_GC_CACHABLE_WRITE_AROUND"
              glib:nick="write-around">
      </member>
    </enumeration>
    <class name="GcCategory"
           c:symbol-prefix="gc_category"
           c:type="ArvGcCategory"
           parent="GcFeatureNode"
           glib:type-name="ArvGcCategory"
           glib:get-type="arv_gc_category_get_type"
           glib:type-struct="GcCategoryClass">
      <source-position filename="arvgccategory.h" line="48"/>
      <constructor name="new" c:identifier="arv_gc_category_new">
        <source-position filename="arvgccategory.h" line="51"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_features" c:identifier="arv_gc_category_get_features">
        <doc xml:space="preserve"
             filename="arvgccategory.c"
             line="63">Get a list of strings with the name of the features listed in the given category node.</doc>
        <source-position filename="arvgccategory.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgccategory.c"
               line="69">a list of strings.</doc>
          <type name="GLib.SList" c:type="const GSList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgccategory.c"
                 line="65">a #ArvGcCategory</doc>
            <type name="GcCategory" c:type="ArvGcCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="features">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
    </class>
    <record name="GcCategoryClass"
            c:type="ArvGcCategoryClass"
            glib:is-gtype-struct-for="GcCategory">
      <source-position filename="arvgccategory.h" line="48"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <record name="GcClass" c:type="ArvGcClass" glib:is-gtype-struct-for="Gc">
      <source-position filename="arvgc.h" line="49"/>
      <field name="parent_class">
        <type name="DomDocumentClass" c:type="ArvDomDocumentClass"/>
      </field>
    </record>
    <class name="GcCommand"
           c:symbol-prefix="gc_command"
           c:type="ArvGcCommand"
           parent="GcFeatureNode"
           glib:type-name="ArvGcCommand"
           glib:get-type="arv_gc_command_get_type"
           glib:type-struct="GcCommandClass">
      <source-position filename="arvgccommand.h" line="50"/>
      <constructor name="new" c:identifier="arv_gc_command_new">
        <source-position filename="arvgccommand.h" line="53"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="execute" c:identifier="arv_gc_command_execute" throws="1">
        <source-position filename="arvgccommand.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_command" transfer-ownership="none">
            <type name="GcCommand" c:type="ArvGcCommand*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="command_value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
    </class>
    <record name="GcCommandClass"
            c:type="ArvGcCommandClass"
            glib:is-gtype-struct-for="GcCommand">
      <source-position filename="arvgccommand.h" line="50"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcConverter"
           c:symbol-prefix="gc_converter"
           c:type="ArvGcConverter"
           parent="GcFeatureNode"
           glib:type-name="ArvGcConverter"
           glib:get-type="arv_gc_converter_get_type"
           glib:type-struct="GcConverterClass">
      <source-position filename="arvgcconverter.h" line="57"/>
      <implements name="GcFloat"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_converter_new">
        <source-position filename="arvgcconverter.h" line="60"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_integer"
                   c:identifier="arv_gc_converter_new_integer">
        <source-position filename="arvgcconverter.h" line="61"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="value_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="variables">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="formula_to_node">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="formula_from_node">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="formula_to">
        <type name="Evaluator" c:type="ArvEvaluator*"/>
      </field>
      <field name="formula_from">
        <type name="Evaluator" c:type="ArvEvaluator*"/>
      </field>
    </class>
    <record name="GcConverterClass"
            c:type="ArvGcConverterClass"
            glib:is-gtype-struct-for="GcConverter">
      <source-position filename="arvgcconverter.h" line="57"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcEnumEntry"
           c:symbol-prefix="gc_enum_entry"
           c:type="ArvGcEnumEntry"
           parent="GcFeatureNode"
           glib:type-name="ArvGcEnumEntry"
           glib:get-type="arv_gc_enum_entry_get_type"
           glib:type-struct="GcEnumEntryClass">
      <source-position filename="arvgcenumentry.h" line="49"/>
      <constructor name="new" c:identifier="arv_gc_enum_entry_new">
        <source-position filename="arvgcenumentry.h" line="52"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_value"
              c:identifier="arv_gc_enum_entry_get_value"
              throws="1">
        <source-position filename="arvgcenumentry.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="GcEnumEntry" c:type="ArvGcEnumEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
    </class>
    <record name="GcEnumEntryClass"
            c:type="ArvGcEnumEntryClass"
            glib:is-gtype-struct-for="GcEnumEntry">
      <source-position filename="arvgcenumentry.h" line="49"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcEnumeration"
           c:symbol-prefix="gc_enumeration"
           c:type="ArvGcEnumeration"
           parent="GcFeatureNode"
           glib:type-name="ArvGcEnumeration"
           glib:get-type="arv_gc_enumeration_get_type"
           glib:type-struct="GcEnumerationClass">
      <source-position filename="arvgcenumeration.h" line="50"/>
      <implements name="GcInteger"/>
      <implements name="GcString"/>
      <constructor name="new" c:identifier="arv_gc_enumeration_new">
        <source-position filename="arvgcenumeration.h" line="53"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_available_int_values"
              c:identifier="arv_gc_enumeration_get_available_int_values"
              throws="1">
        <source-position filename="arvgcenumeration.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64*"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="n_values" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available_string_values"
              c:identifier="arv_gc_enumeration_get_available_string_values"
              throws="1">
        <doc xml:space="preserve"
             filename="arvgcenumeration.c"
             line="295">Create an array of all available values of @enumeration, as strings.</doc>
        <source-position filename="arvgcenumeration.h" line="62"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="arvgcenumeration.c"
               line="303">an newly created array of const strings, which must freed after use using g_free.</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcenumeration.c"
                 line="297">an #ArvGcEnumeration</doc>
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvgcenumeration.c"
                 line="298">placeholder for the number of values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_entries" c:identifier="arv_gc_enumeration_get_entries">
        <source-position filename="arvgcenumeration.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgcenumeration.c"
               line="392">the list of enumeration entry nodes.</doc>
          <type name="GLib.SList" c:type="const GSList*">
            <type name="GcFeatureNode"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcenumeration.c"
                 line="390">a #ArvGcEnumeration</doc>
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_int_value"
              c:identifier="arv_gc_enumeration_get_int_value"
              throws="1">
        <source-position filename="arvgcenumeration.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string_value"
              c:identifier="arv_gc_enumeration_get_string_value"
              throws="1">
        <source-position filename="arvgcenumeration.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_int_value"
              c:identifier="arv_gc_enumeration_set_int_value"
              throws="1">
        <source-position filename="arvgcenumeration.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string_value"
              c:identifier="arv_gc_enumeration_set_string_value"
              throws="1">
        <source-position filename="arvgcenumeration.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="entries">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
    </class>
    <record name="GcEnumerationClass"
            c:type="ArvGcEnumerationClass"
            glib:is-gtype-struct-for="GcEnumeration">
      <source-position filename="arvgcenumeration.h" line="50"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcFeatureNode"
           c:symbol-prefix="gc_feature_node"
           c:type="ArvGcFeatureNode"
           parent="GcNode"
           glib:type-name="ArvGcFeatureNode"
           glib:get-type="arv_gc_feature_node_get_type"
           glib:type-struct="GcFeatureNodeClass">
      <doc xml:space="preserve"
           filename="arvgcfeaturenode.c"
           line="23">#ArvGcFeatureNode provides a base class for the implementation of the different
types of Genicam feature node (Group, Integer, Float, Enumeration...).</doc>
      <source-position filename="arvgcfeaturenode.h" line="54"/>
      <constructor name="new" c:identifier="arv_gc_feature_node_new">
        <source-position filename="arvgcfeaturenode.h" line="58"/>
        <return-value transfer-ownership="full">
          <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
        </return-value>
      </constructor>
      <virtual-method name="get_value_as_string"
                      invoker="get_value_as_string"
                      throws="1">
        <doc xml:space="preserve"
             filename="arvgcfeaturenode.c"
             line="364">Retrieve the node value a string.

&lt;warning&gt;&lt;para&gt;Please note the string content is still owned by the @node object, which means the returned pointer may not be still valid after a new call to this function.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="arvgcfeaturenode.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgcfeaturenode.c"
               line="373">a string representation of the node value, %NULL if not applicable.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcfeaturenode.c"
                 line="366">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value_type" invoker="get_value_type">
        <source-position filename="arvgcfeaturenode.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value_from_string"
                      invoker="set_value_from_string"
                      throws="1">
        <doc xml:space="preserve"
             filename="arvgcfeaturenode.c"
             line="341">Set the node value using a string representation of the value. May not be applicable to every node type, but safe.</doc>
        <source-position filename="arvgcfeaturenode.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcfeaturenode.c"
                 line="343">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcfeaturenode.c"
                 line="344">new node value, as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_description"
              c:identifier="arv_gc_feature_node_get_description"
              throws="1">
        <source-position filename="arvgcfeaturenode.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="arv_gc_feature_node_get_display_name"
              throws="1">
        <source-position filename="arvgcfeaturenode.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modification_count"
              c:identifier="arv_gc_feature_node_get_modification_count">
        <source-position filename="arvgcfeaturenode.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="arv_gc_feature_node_get_name">
        <source-position filename="arvgcfeaturenode.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tooltip"
              c:identifier="arv_gc_feature_node_get_tooltip"
              throws="1">
        <source-position filename="arvgcfeaturenode.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_as_string"
              c:identifier="arv_gc_feature_node_get_value_as_string"
              throws="1">
        <doc xml:space="preserve"
             filename="arvgcfeaturenode.c"
             line="364">Retrieve the node value a string.

&lt;warning&gt;&lt;para&gt;Please note the string content is still owned by the @node object, which means the returned pointer may not be still valid after a new call to this function.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="arvgcfeaturenode.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgcfeaturenode.c"
               line="373">a string representation of the node value, %NULL if not applicable.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcfeaturenode.c"
                 line="366">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="arv_gc_feature_node_get_value_type">
        <source-position filename="arvgcfeaturenode.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="inc_modification_count"
              c:identifier="arv_gc_feature_node_inc_modification_count">
        <source-position filename="arvgcfeaturenode.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_available"
              c:identifier="arv_gc_feature_node_is_available"
              throws="1">
        <source-position filename="arvgcfeaturenode.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_implemented"
              c:identifier="arv_gc_feature_node_is_implemented"
              throws="1">
        <source-position filename="arvgcfeaturenode.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_locked"
              c:identifier="arv_gc_feature_node_is_locked"
              throws="1">
        <source-position filename="arvgcfeaturenode.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value_from_string"
              c:identifier="arv_gc_feature_node_set_value_from_string"
              throws="1">
        <doc xml:space="preserve"
             filename="arvgcfeaturenode.c"
             line="341">Set the node value using a string representation of the value. May not be applicable to every node type, but safe.</doc>
        <source-position filename="arvgcfeaturenode.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcfeaturenode.c"
                 line="343">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcfeaturenode.c"
                 line="344">new node value, as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="priv">
        <type name="GcFeatureNodePrivate" c:type="ArvGcFeatureNodePrivate*"/>
      </field>
    </class>
    <record name="GcFeatureNodeClass"
            c:type="ArvGcFeatureNodeClass"
            glib:is-gtype-struct-for="GcFeatureNode">
      <source-position filename="arvgcfeaturenode.h" line="54"/>
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
      <field name="get_value_type">
        <callback name="get_value_type">
          <source-position filename="arvgcfeaturenode.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="gc_feature_node" transfer-ownership="none">
              <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value_from_string">
        <callback name="set_value_from_string" throws="1">
          <source-position filename="arvgcfeaturenode.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_feature_node" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvgcfeaturenode.c"
                   line="343">a #ArvGcFeatureNode</doc>
              <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
            </parameter>
            <parameter name="string" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvgcfeaturenode.c"
                   line="344">new node value, as string</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value_as_string">
        <callback name="get_value_as_string" throws="1">
          <source-position filename="arvgcfeaturenode.h" line="53"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcfeaturenode.c"
                 line="373">a string representation of the node value, %NULL if not applicable.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_feature_node" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvgcfeaturenode.c"
                   line="366">a #ArvGcFeatureNode</doc>
              <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="GcFeatureNodePrivate"
            c:type="ArvGcFeatureNodePrivate"
            disguised="1">
      <source-position filename="arvgcfeaturenode.h" line="38"/>
    </record>
    <interface name="GcFloat"
               c:symbol-prefix="gc_float"
               c:type="ArvGcFloat"
               glib:type-name="ArvGcFloat"
               glib:get-type="arv_gc_float_get_type"
               glib:type-struct="GcFloatInterface">
      <source-position filename="arvgcfloat.h" line="48"/>
      <virtual-method name="get_inc" invoker="get_inc" throws="1">
        <source-position filename="arvgcfloat.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_max" invoker="get_max" throws="1">
        <source-position filename="arvgcfloat.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_min" invoker="get_min" throws="1">
        <source-position filename="arvgcfloat.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_unit" invoker="get_unit" throws="1">
        <source-position filename="arvgcfloat.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value" throws="1">
        <source-position filename="arvgcfloat.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_max" invoker="impose_max" throws="1">
        <source-position filename="arvgcfloat.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_min" invoker="impose_min" throws="1">
        <source-position filename="arvgcfloat.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value" throws="1">
        <source-position filename="arvgcfloat.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_inc" c:identifier="arv_gc_float_get_inc" throws="1">
        <source-position filename="arvgcfloat.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max" c:identifier="arv_gc_float_get_max" throws="1">
        <source-position filename="arvgcfloat.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min" c:identifier="arv_gc_float_get_min" throws="1">
        <source-position filename="arvgcfloat.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_unit" c:identifier="arv_gc_float_get_unit" throws="1">
        <source-position filename="arvgcfloat.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="arv_gc_float_get_value"
              throws="1">
        <source-position filename="arvgcfloat.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="impose_max"
              c:identifier="arv_gc_float_impose_max"
              throws="1">
        <source-position filename="arvgcfloat.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="impose_min"
              c:identifier="arv_gc_float_impose_min"
              throws="1">
        <source-position filename="arvgcfloat.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_float_set_value"
              throws="1">
        <source-position filename="arvgcfloat.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcFloatInterface"
            c:type="ArvGcFloatInterface"
            glib:is-gtype-struct-for="GcFloat">
      <source-position filename="arvgcfloat.h" line="48"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value" throws="1">
          <source-position filename="arvgcfloat.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value" throws="1">
          <source-position filename="arvgcfloat.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_min">
        <callback name="get_min" throws="1">
          <source-position filename="arvgcfloat.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max">
        <callback name="get_max" throws="1">
          <source-position filename="arvgcfloat.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_inc">
        <callback name="get_inc" throws="1">
          <source-position filename="arvgcfloat.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_unit">
        <callback name="get_unit" throws="1">
          <source-position filename="arvgcfloat.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_min">
        <callback name="impose_min" throws="1">
          <source-position filename="arvgcfloat.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="minimum" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_max">
        <callback name="impose_max" throws="1">
          <source-position filename="arvgcfloat.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="maximum" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcFloatNode"
           c:symbol-prefix="gc_float_node"
           c:type="ArvGcFloatNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcFloatNode"
           glib:get-type="arv_gc_float_node_get_type"
           glib:type-struct="GcFloatNodeClass">
      <source-position filename="arvgcfloatnode.h" line="53"/>
      <implements name="GcFloat"/>
      <constructor name="new" c:identifier="arv_gc_float_node_new">
        <source-position filename="arvgcfloatnode.h" line="56"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="minimum">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="maximum">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="increment">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="unit">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
    </class>
    <record name="GcFloatNodeClass"
            c:type="ArvGcFloatNodeClass"
            glib:is-gtype-struct-for="GcFloatNode">
      <source-position filename="arvgcfloatnode.h" line="53"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcGroupNode"
           c:symbol-prefix="gc_group_node"
           c:type="ArvGcGroupNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcGroupNode"
           glib:get-type="arv_gc_group_node_get_type"
           glib:type-struct="GcGroupNodeClass">
      <source-position filename="arvgcgroupnode.h" line="48"/>
      <constructor name="new" c:identifier="arv_gc_group_node_new">
        <source-position filename="arvgcgroupnode.h" line="51"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="base">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="comment">
        <type name="utf8" c:type="char*"/>
      </field>
    </class>
    <record name="GcGroupNodeClass"
            c:type="ArvGcGroupNodeClass"
            glib:is-gtype-struct-for="GcGroupNode">
      <source-position filename="arvgcgroupnode.h" line="48"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcIndexNode"
           c:symbol-prefix="gc_index_node"
           c:type="ArvGcIndexNode"
           parent="GcPropertyNode"
           glib:type-name="ArvGcIndexNode"
           glib:get-type="arv_gc_index_node_get_type"
           glib:type-struct="GcIndexNodeClass">
      <source-position filename="arvgcindexnode.h" line="49"/>
      <constructor name="new" c:identifier="arv_gc_index_node_new">
        <source-position filename="arvgcindexnode.h" line="52"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_index"
              c:identifier="arv_gc_index_node_get_index"
              throws="1">
        <source-position filename="arvgcindexnode.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="index_node" transfer-ownership="none">
            <type name="GcIndexNode" c:type="ArvGcIndexNode*"/>
          </instance-parameter>
          <parameter name="default_offset" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode"/>
      </field>
      <field name="offset">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="is_p_offset">
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </class>
    <record name="GcIndexNodeClass"
            c:type="ArvGcIndexNodeClass"
            glib:is-gtype-struct-for="GcIndexNode">
      <source-position filename="arvgcindexnode.h" line="49"/>
      <field name="parent_class">
        <type name="GcPropertyNodeClass" c:type="ArvGcPropertyNodeClass"/>
      </field>
    </record>
    <interface name="GcInteger"
               c:symbol-prefix="gc_integer"
               c:type="ArvGcInteger"
               glib:type-name="ArvGcInteger"
               glib:get-type="arv_gc_integer_get_type"
               glib:type-struct="GcIntegerInterface">
      <source-position filename="arvgcinteger.h" line="48"/>
      <virtual-method name="get_inc" invoker="get_inc" throws="1">
        <source-position filename="arvgcinteger.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_max" invoker="get_max" throws="1">
        <source-position filename="arvgcinteger.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_min" invoker="get_min" throws="1">
        <source-position filename="arvgcinteger.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_unit" invoker="get_unit" throws="1">
        <source-position filename="arvgcinteger.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value" throws="1">
        <source-position filename="arvgcinteger.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_max" invoker="impose_max" throws="1">
        <source-position filename="arvgcinteger.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_min" invoker="impose_min" throws="1">
        <source-position filename="arvgcinteger.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value" throws="1">
        <source-position filename="arvgcinteger.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_inc" c:identifier="arv_gc_integer_get_inc" throws="1">
        <source-position filename="arvgcinteger.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max" c:identifier="arv_gc_integer_get_max" throws="1">
        <source-position filename="arvgcinteger.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min" c:identifier="arv_gc_integer_get_min" throws="1">
        <source-position filename="arvgcinteger.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_unit"
              c:identifier="arv_gc_integer_get_unit"
              throws="1">
        <source-position filename="arvgcinteger.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="arv_gc_integer_get_value"
              throws="1">
        <source-position filename="arvgcinteger.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="impose_max"
              c:identifier="arv_gc_integer_impose_max"
              throws="1">
        <source-position filename="arvgcinteger.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="impose_min"
              c:identifier="arv_gc_integer_impose_min"
              throws="1">
        <source-position filename="arvgcinteger.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_integer_set_value"
              throws="1">
        <source-position filename="arvgcinteger.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcIntegerInterface"
            c:type="ArvGcIntegerInterface"
            glib:is-gtype-struct-for="GcInteger">
      <source-position filename="arvgcinteger.h" line="48"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value" throws="1">
          <source-position filename="arvgcinteger.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value" throws="1">
          <source-position filename="arvgcinteger.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_min">
        <callback name="get_min" throws="1">
          <source-position filename="arvgcinteger.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max">
        <callback name="get_max" throws="1">
          <source-position filename="arvgcinteger.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_inc">
        <callback name="get_inc" throws="1">
          <source-position filename="arvgcinteger.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_unit">
        <callback name="get_unit" throws="1">
          <source-position filename="arvgcinteger.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_min">
        <callback name="impose_min" throws="1">
          <source-position filename="arvgcinteger.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="minimum" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_max">
        <callback name="impose_max" throws="1">
          <source-position filename="arvgcinteger.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="maximum" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcIntegerNode"
           c:symbol-prefix="gc_integer_node"
           c:type="ArvGcIntegerNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcIntegerNode"
           glib:get-type="arv_gc_integer_node_get_type"
           glib:type-struct="GcIntegerNodeClass">
      <source-position filename="arvgcintegernode.h" line="53"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_integer_node_new">
        <source-position filename="arvgcintegernode.h" line="56"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="value">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="minimum">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="maximum">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="increment">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="unit">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
    </class>
    <record name="GcIntegerNodeClass"
            c:type="ArvGcIntegerNodeClass"
            glib:is-gtype-struct-for="GcIntegerNode">
      <source-position filename="arvgcintegernode.h" line="53"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcInvalidatorNode"
           c:symbol-prefix="gc_invalidator_node"
           c:type="ArvGcInvalidatorNode"
           parent="GcPropertyNode"
           glib:type-name="ArvGcInvalidatorNode"
           glib:get-type="arv_gc_invalidator_node_get_type"
           glib:type-struct="GcInvalidatorNodeClass">
      <source-position filename="arvgcinvalidatornode.h" line="48"/>
      <constructor name="new" c:identifier="arv_gc_invalidator_node_new">
        <source-position filename="arvgcinvalidatornode.h" line="51"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_modification_count"
              c:identifier="arv_gc_invalidator_node_get_modification_count">
        <source-position filename="arvgcinvalidatornode.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="invalidator_node"
                              transfer-ownership="none">
            <type name="GcInvalidatorNode" c:type="ArvGcInvalidatorNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_modification_count"
              c:identifier="arv_gc_invalidator_node_set_modification_count">
        <source-position filename="arvgcinvalidatornode.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="invalidator_node"
                              transfer-ownership="none">
            <type name="GcInvalidatorNode" c:type="ArvGcInvalidatorNode*"/>
          </instance-parameter>
          <parameter name="modification_count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode"/>
      </field>
      <field name="modification_count">
        <type name="gint" c:type="gint"/>
      </field>
    </class>
    <record name="GcInvalidatorNodeClass"
            c:type="ArvGcInvalidatorNodeClass"
            glib:is-gtype-struct-for="GcInvalidatorNode">
      <source-position filename="arvgcinvalidatornode.h" line="48"/>
      <field name="parent_class">
        <type name="GcPropertyNodeClass" c:type="ArvGcPropertyNodeClass"/>
      </field>
    </record>
    <enumeration name="GcNameSpace"
                 glib:type-name="ArvGcNameSpace"
                 glib:get-type="arv_gc_name_space_get_type"
                 c:type="ArvGcNameSpace">
      <member name="standard"
              value="0"
              c:identifier="ARV_GC_NAME_SPACE_STANDARD"
              glib:nick="standard">
      </member>
      <member name="custom"
              value="1"
              c:identifier="ARV_GC_NAME_SPACE_CUSTOM"
              glib:nick="custom">
      </member>
    </enumeration>
    <class name="GcNode"
           c:symbol-prefix="gc_node"
           c:type="ArvGcNode"
           parent="DomElement"
           abstract="1"
           glib:type-name="ArvGcNode"
           glib:get-type="arv_gc_node_get_type"
           glib:type-struct="GcNodeClass">
      <doc xml:space="preserve"
           filename="arvgcnode.c"
           line="23">#ArvGcNode provides a base class for the implementation of the different
types of Genicam nodes.</doc>
      <source-position filename="arvgcnode.h" line="47"/>
      <method name="get_genicam" c:identifier="arv_gc_node_get_genicam">
        <doc xml:space="preserve"
             filename="arvgcnode.c"
             line="45">Retrieves the parent genicam document of @gc_node.</doc>
        <source-position filename="arvgcnode.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgcnode.c"
               line="51">the parent #ArvGc</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcnode.c"
                 line="47">a #ArvGcNode</doc>
            <type name="GcNode" c:type="ArvGcNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="DomElement" c:type="ArvDomElement"/>
      </field>
    </class>
    <record name="GcNodeClass"
            c:type="ArvGcNodeClass"
            glib:is-gtype-struct-for="GcNode">
      <source-position filename="arvgcnode.h" line="47"/>
      <field name="parent_class">
        <type name="DomElementClass" c:type="ArvDomElementClass"/>
      </field>
    </record>
    <record name="GcNodePrivate" c:type="ArvGcNodePrivate" disguised="1">
      <source-position filename="arvgcnode.h" line="38"/>
    </record>
    <class name="GcPort"
           c:symbol-prefix="gc_port"
           c:type="ArvGcPort"
           parent="GcFeatureNode"
           glib:type-name="ArvGcPort"
           glib:get-type="arv_gc_port_get_type"
           glib:type-struct="GcPortClass">
      <source-position filename="arvgcport.h" line="49"/>
      <constructor name="new" c:identifier="arv_gc_port_new">
        <source-position filename="arvgcport.h" line="52"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="read" c:identifier="arv_gc_port_read" throws="1">
        <source-position filename="arvgcport.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="port" transfer-ownership="none">
            <type name="GcPort" c:type="ArvGcPort*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="arv_gc_port_write" throws="1">
        <source-position filename="arvgcport.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="port" transfer-ownership="none">
            <type name="GcPort" c:type="ArvGcPort*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="priv">
        <type name="GcPortPrivate" c:type="ArvGcPortPrivate*"/>
      </field>
    </class>
    <record name="GcPortClass"
            c:type="ArvGcPortClass"
            glib:is-gtype-struct-for="GcPort">
      <source-position filename="arvgcport.h" line="49"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <record name="GcPortPrivate" c:type="ArvGcPortPrivate" disguised="1">
      <source-position filename="arvgcport.h" line="38"/>
    </record>
    <record name="GcPrivate" c:type="ArvGcPrivate" disguised="1">
      <source-position filename="arvgc.h" line="38"/>
    </record>
    <class name="GcPropertyNode"
           c:symbol-prefix="gc_property_node"
           c:type="ArvGcPropertyNode"
           parent="GcNode"
           glib:type-name="ArvGcPropertyNode"
           glib:get-type="arv_gc_property_node_get_type"
           glib:type-struct="GcPropertyNodeClass">
      <doc xml:space="preserve"
           filename="arvgcpropertynode.c"
           line="23">#ArvGcPropertyNode provides a base class for the implementation of the different
types of Genicam property nodes (Value, pValue, Endianess...).</doc>
      <source-position filename="arvgcpropertynode.h" line="100"/>
      <constructor name="new_access_mode"
                   c:identifier="arv_gc_property_node_new_access_mode">
        <source-position filename="arvgcpropertynode.h" line="132"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_address"
                   c:identifier="arv_gc_property_node_new_address">
        <source-position filename="arvgcpropertynode.h" line="107"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_bit" c:identifier="arv_gc_property_node_new_bit">
        <source-position filename="arvgcpropertynode.h" line="139"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_cachable"
                   c:identifier="arv_gc_property_node_new_cachable">
        <source-position filename="arvgcpropertynode.h" line="133"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_chunk_id"
                   c:identifier="arv_gc_property_node_new_chunk_id">
        <source-position filename="arvgcpropertynode.h" line="142"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_command_value"
                   c:identifier="arv_gc_property_node_new_command_value">
        <source-position filename="arvgcpropertynode.h" line="140"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_constant"
                   c:identifier="arv_gc_property_node_new_constant">
        <source-position filename="arvgcpropertynode.h" line="131"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_description"
                   c:identifier="arv_gc_property_node_new_description">
        <source-position filename="arvgcpropertynode.h" line="109"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_display_name"
                   c:identifier="arv_gc_property_node_new_display_name">
        <source-position filename="arvgcpropertynode.h" line="111"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_endianess"
                   c:identifier="arv_gc_property_node_new_endianess">
        <source-position filename="arvgcpropertynode.h" line="135"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_expression"
                   c:identifier="arv_gc_property_node_new_expression">
        <source-position filename="arvgcpropertynode.h" line="130"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_formula"
                   c:identifier="arv_gc_property_node_new_formula">
        <source-position filename="arvgcpropertynode.h" line="127"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_formula_from"
                   c:identifier="arv_gc_property_node_new_formula_from">
        <source-position filename="arvgcpropertynode.h" line="129"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_formula_to"
                   c:identifier="arv_gc_property_node_new_formula_to">
        <source-position filename="arvgcpropertynode.h" line="128"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_increment"
                   c:identifier="arv_gc_property_node_new_increment">
        <source-position filename="arvgcpropertynode.h" line="116"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_length"
                   c:identifier="arv_gc_property_node_new_length">
        <source-position filename="arvgcpropertynode.h" line="124"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_lsb" c:identifier="arv_gc_property_node_new_lsb">
        <source-position filename="arvgcpropertynode.h" line="137"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_maximum"
                   c:identifier="arv_gc_property_node_new_maximum">
        <source-position filename="arvgcpropertynode.h" line="114"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_minimum"
                   c:identifier="arv_gc_property_node_new_minimum">
        <source-position filename="arvgcpropertynode.h" line="112"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_msb" c:identifier="arv_gc_property_node_new_msb">
        <source-position filename="arvgcpropertynode.h" line="138"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_off_value"
                   c:identifier="arv_gc_property_node_new_off_value">
        <source-position filename="arvgcpropertynode.h" line="120"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_on_value"
                   c:identifier="arv_gc_property_node_new_on_value">
        <source-position filename="arvgcpropertynode.h" line="119"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_address"
                   c:identifier="arv_gc_property_node_new_p_address">
        <source-position filename="arvgcpropertynode.h" line="108"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_command_value"
                   c:identifier="arv_gc_property_node_new_p_command_value">
        <source-position filename="arvgcpropertynode.h" line="141"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_feature"
                   c:identifier="arv_gc_property_node_new_p_feature">
        <source-position filename="arvgcpropertynode.h" line="104"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_increment"
                   c:identifier="arv_gc_property_node_new_p_increment">
        <source-position filename="arvgcpropertynode.h" line="117"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_is_available"
                   c:identifier="arv_gc_property_node_new_p_is_available">
        <source-position filename="arvgcpropertynode.h" line="122"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_is_implemented"
                   c:identifier="arv_gc_property_node_new_p_is_implemented">
        <source-position filename="arvgcpropertynode.h" line="121"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_is_locked"
                   c:identifier="arv_gc_property_node_new_p_is_locked">
        <source-position filename="arvgcpropertynode.h" line="123"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_length"
                   c:identifier="arv_gc_property_node_new_p_length">
        <source-position filename="arvgcpropertynode.h" line="125"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_maximum"
                   c:identifier="arv_gc_property_node_new_p_maximum">
        <source-position filename="arvgcpropertynode.h" line="115"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_minimum"
                   c:identifier="arv_gc_property_node_new_p_minimum">
        <source-position filename="arvgcpropertynode.h" line="113"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_port"
                   c:identifier="arv_gc_property_node_new_p_port">
        <source-position filename="arvgcpropertynode.h" line="126"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_value"
                   c:identifier="arv_gc_property_node_new_p_value">
        <source-position filename="arvgcpropertynode.h" line="106"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_polling_time"
                   c:identifier="arv_gc_property_node_new_polling_time">
        <source-position filename="arvgcpropertynode.h" line="134"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_sign"
                   c:identifier="arv_gc_property_node_new_sign">
        <source-position filename="arvgcpropertynode.h" line="136"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_tooltip"
                   c:identifier="arv_gc_property_node_new_tooltip">
        <source-position filename="arvgcpropertynode.h" line="110"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_unit"
                   c:identifier="arv_gc_property_node_new_unit">
        <source-position filename="arvgcpropertynode.h" line="118"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_value"
                   c:identifier="arv_gc_property_node_new_value">
        <source-position filename="arvgcpropertynode.h" line="105"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_double"
              c:identifier="arv_gc_property_node_get_double"
              throws="1">
        <source-position filename="arvgcpropertynode.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_int64"
              c:identifier="arv_gc_property_node_get_int64"
              throws="1">
        <source-position filename="arvgcpropertynode.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_linked_node"
              c:identifier="arv_gc_property_node_get_linked_node">
        <source-position filename="arvgcpropertynode.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgcpropertynode.c"
               line="431">the #ArvGcNode which @node points to.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgcpropertynode.c"
                 line="429">a #ArvGcPropertyNode</doc>
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_type"
              c:identifier="arv_gc_property_node_get_node_type">
        <source-position filename="arvgcpropertynode.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="GcPropertyNodeType" c:type="ArvGcPropertyNodeType"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="arv_gc_property_node_get_string"
              throws="1">
        <source-position filename="arvgcpropertynode.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_double"
              c:identifier="arv_gc_property_node_set_double"
              throws="1">
        <source-position filename="arvgcpropertynode.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="v_double" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int64"
              c:identifier="arv_gc_property_node_set_int64"
              throws="1">
        <source-position filename="arvgcpropertynode.h" line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="v_int64" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string"
              c:identifier="arv_gc_property_node_set_string"
              throws="1">
        <source-position filename="arvgcpropertynode.h" line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="type">
        <type name="GcPropertyNodeType" c:type="ArvGcPropertyNodeType"/>
      </field>
      <field name="value_data_up_to_date">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="value_data">
        <type name="utf8" c:type="char*"/>
      </field>
    </class>
    <record name="GcPropertyNodeClass"
            c:type="ArvGcPropertyNodeClass"
            glib:is-gtype-struct-for="GcPropertyNode">
      <source-position filename="arvgcpropertynode.h" line="100"/>
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <record name="GcPropertyNodePrivate"
            c:type="ArvGcPropertyNodePrivate"
            disguised="1">
      <source-position filename="arvgcpropertynode.h" line="86"/>
    </record>
    <enumeration name="GcPropertyNodeType"
                 glib:type-name="ArvGcPropertyNodeType"
                 glib:get-type="arv_gc_property_node_type_get_type"
                 c:type="ArvGcPropertyNodeType">
      <member name="unknown"
              value="0"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_UNKNOWN"
              glib:nick="unknown">
      </member>
      <member name="value"
              value="1"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_VALUE"
              glib:nick="value">
      </member>
      <member name="address"
              value="2"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ADDRESS"
              glib:nick="address">
      </member>
      <member name="description"
              value="3"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_DESCRIPTION"
              glib:nick="description">
      </member>
      <member name="tooltip"
              value="4"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_TOOLTIP"
              glib:nick="tooltip">
      </member>
      <member name="display_name"
              value="5"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_DISPLAY_NAME"
              glib:nick="display-name">
      </member>
      <member name="minimum"
              value="6"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_MINIMUM"
              glib:nick="minimum">
      </member>
      <member name="maximum"
              value="7"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_MAXIMUM"
              glib:nick="maximum">
      </member>
      <member name="increment"
              value="8"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_INCREMENT"
              glib:nick="increment">
      </member>
      <member name="unit"
              value="9"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_UNIT"
              glib:nick="unit">
      </member>
      <member name="on_value"
              value="10"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ON_VALUE"
              glib:nick="on-value">
      </member>
      <member name="off_value"
              value="11"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_OFF_VALUE"
              glib:nick="off-value">
      </member>
      <member name="length"
              value="12"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_LENGTH"
              glib:nick="length">
      </member>
      <member name="formula"
              value="13"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_FORMULA"
              glib:nick="formula">
      </member>
      <member name="formula_to"
              value="14"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_FORMULA_TO"
              glib:nick="formula-to">
      </member>
      <member name="formula_from"
              value="15"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_FORMULA_FROM"
              glib:nick="formula-from">
      </member>
      <member name="expression"
              value="16"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_EXPRESSION"
              glib:nick="expression">
      </member>
      <member name="constant"
              value="17"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_CONSTANT"
              glib:nick="constant">
      </member>
      <member name="access_mode"
              value="18"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ACCESS_MODE"
              glib:nick="access-mode">
      </member>
      <member name="cachable"
              value="19"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_CACHABLE"
              glib:nick="cachable">
      </member>
      <member name="polling_time"
              value="20"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_POLLING_TIME"
              glib:nick="polling-time">
      </member>
      <member name="endianess"
              value="21"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ENDIANESS"
              glib:nick="endianess">
      </member>
      <member name="sign"
              value="22"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_SIGN"
              glib:nick="sign">
      </member>
      <member name="lsb"
              value="23"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_LSB"
              glib:nick="lsb">
      </member>
      <member name="msb"
              value="24"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_MSB"
              glib:nick="msb">
      </member>
      <member name="bit"
              value="25"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_BIT"
              glib:nick="bit">
      </member>
      <member name="command_value"
              value="26"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_COMMAND_VALUE"
              glib:nick="command-value">
      </member>
      <member name="chunk_id"
              value="27"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_CHUNK_ID"
              glib:nick="chunk-id">
      </member>
      <member name="p_unknonw"
              value="1000"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_UNKNONW"
              glib:nick="p-unknonw">
      </member>
      <member name="p_feature"
              value="1001"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_FEATURE"
              glib:nick="p-feature">
      </member>
      <member name="p_value"
              value="1002"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_VALUE"
              glib:nick="p-value">
      </member>
      <member name="p_address"
              value="1003"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_ADDRESS"
              glib:nick="p-address">
      </member>
      <member name="p_is_implemented"
              value="1004"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_IS_IMPLEMENTED"
              glib:nick="p-is-implemented">
      </member>
      <member name="p_is_locked"
              value="1005"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_IS_LOCKED"
              glib:nick="p-is-locked">
      </member>
      <member name="p_is_available"
              value="1006"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_IS_AVAILABLE"
              glib:nick="p-is-available">
      </member>
      <member name="p_minimum"
              value="1007"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_MINIMUM"
              glib:nick="p-minimum">
      </member>
      <member name="p_maximum"
              value="1008"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_MAXIMUM"
              glib:nick="p-maximum">
      </member>
      <member name="p_increment"
              value="1009"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_INCREMENT"
              glib:nick="p-increment">
      </member>
      <member name="p_index"
              value="1010"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_INDEX"
              glib:nick="p-index">
      </member>
      <member name="p_length"
              value="1011"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_LENGTH"
              glib:nick="p-length">
      </member>
      <member name="p_port"
              value="1012"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_PORT"
              glib:nick="p-port">
      </member>
      <member name="p_variable"
              value="1013"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_VARIABLE"
              glib:nick="p-variable">
      </member>
      <member name="p_invalidator"
              value="1014"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_INVALIDATOR"
              glib:nick="p-invalidator">
      </member>
      <member name="p_command_value"
              value="1015"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_COMMAND_VALUE"
              glib:nick="p-command-value">
      </member>
    </enumeration>
    <interface name="GcRegister"
               c:symbol-prefix="gc_register"
               c:type="ArvGcRegister"
               glib:type-name="ArvGcRegister"
               glib:get-type="arv_gc_register_get_type"
               glib:type-struct="GcRegisterInterface">
      <source-position filename="arvgcregister.h" line="44"/>
      <virtual-method name="get" invoker="get" throws="1">
        <source-position filename="arvgcregister.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_address" invoker="get_address" throws="1">
        <source-position filename="arvgcregister.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_length" invoker="get_length" throws="1">
        <source-position filename="arvgcregister.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set" invoker="set" throws="1">
        <source-position filename="arvgcregister.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get" c:identifier="arv_gc_register_get" throws="1">
        <source-position filename="arvgcregister.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_address"
              c:identifier="arv_gc_register_get_address"
              throws="1">
        <source-position filename="arvgcregister.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="arv_gc_register_get_length"
              throws="1">
        <source-position filename="arvgcregister.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="arv_gc_register_set" throws="1">
        <source-position filename="arvgcregister.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <class name="GcRegisterDescriptionNode"
           c:symbol-prefix="gc_register_description_node"
           c:type="ArvGcRegisterDescriptionNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcRegisterDescriptionNode"
           glib:get-type="arv_gc_register_description_node_get_type"
           glib:type-struct="GcRegisterDescriptionNodeClass">
      <source-position filename="arvgcregisterdescriptionnode.h" line="51"/>
      <constructor name="new"
                   c:identifier="arv_gc_register_description_node_new">
        <source-position filename="arvgcregisterdescriptionnode.h" line="54"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="check_schema_version"
              c:identifier="arv_gc_register_description_node_check_schema_version">
        <source-position filename="arvgcregisterdescriptionnode.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
          <parameter name="required_major" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="required_minor" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="required_subminor" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="model_name">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="major_version">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="minor_version">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="subminor_version">
        <type name="guint" c:type="guint"/>
      </field>
    </class>
    <record name="GcRegisterDescriptionNodeClass"
            c:type="ArvGcRegisterDescriptionNodeClass"
            glib:is-gtype-struct-for="GcRegisterDescriptionNode">
      <source-position filename="arvgcregisterdescriptionnode.h" line="51"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <record name="GcRegisterInterface"
            c:type="ArvGcRegisterInterface"
            glib:is-gtype-struct-for="GcRegister">
      <source-position filename="arvgcregister.h" line="44"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get">
        <callback name="get" throws="1">
          <source-position filename="arvgcregister.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="void*"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="guint64" c:type="guint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set">
        <callback name="set" throws="1">
          <source-position filename="arvgcregister.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="void*"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="guint64" c:type="guint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_address">
        <callback name="get_address" throws="1">
          <source-position filename="arvgcregister.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_length">
        <callback name="get_length" throws="1">
          <source-position filename="arvgcregister.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcRegisterNode"
           c:symbol-prefix="gc_register_node"
           c:type="ArvGcRegisterNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcRegisterNode"
           glib:get-type="arv_gc_register_node_get_type"
           glib:type-struct="GcRegisterNodeClass">
      <source-position filename="arvgcregisternode.h" line="102"/>
      <implements name="GcFloat"/>
      <implements name="GcInteger"/>
      <implements name="GcRegister"/>
      <implements name="GcString"/>
      <constructor name="new" c:identifier="arv_gc_register_node_new">
        <source-position filename="arvgcregisternode.h" line="105"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_float"
                   c:identifier="arv_gc_register_node_new_float">
        <source-position filename="arvgcregisternode.h" line="108"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_integer"
                   c:identifier="arv_gc_register_node_new_integer">
        <source-position filename="arvgcregisternode.h" line="106"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_masked_integer"
                   c:identifier="arv_gc_register_node_new_masked_integer">
        <source-position filename="arvgcregisternode.h" line="107"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_string"
                   c:identifier="arv_gc_register_node_new_string">
        <source-position filename="arvgcregisternode.h" line="109"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_struct_register"
                   c:identifier="arv_gc_register_node_new_struct_register">
        <source-position filename="arvgcregisternode.h" line="110"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_masked_integer_value"
              c:identifier="arv_gc_register_node_get_masked_integer_value"
              throws="1">
        <source-position filename="arvgcregisternode.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register_node"
                              transfer-ownership="none">
            <type name="GcRegisterNode" c:type="ArvGcRegisterNode*"/>
          </instance-parameter>
          <parameter name="lsb" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="msb" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_masked_integer_value"
              c:identifier="arv_gc_register_node_set_masked_integer_value"
              throws="1">
        <source-position filename="arvgcregisternode.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register_node"
                              transfer-ownership="none">
            <type name="GcRegisterNode" c:type="ArvGcRegisterNode*"/>
          </instance-parameter>
          <parameter name="lsb" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="msb" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="type">
        <type name="GcRegisterNodeType" c:type="ArvGcRegisterNodeType"/>
      </field>
      <field name="value_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="addresses">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="swiss_knives">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="index">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="length">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="port">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="access_mode">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="cachable">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="polling_time">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="endianess">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="sign">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="lsb">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="msb">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="invalidators">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="cache">
        <type name="gpointer" c:type="void*"/>
      </field>
      <field name="cache_size">
        <type name="gsize" c:type="size_t"/>
      </field>
      <field name="is_cache_valid">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="v_string">
        <array zero-terminated="0" fixed-size="39">
          <type name="gchar" c:type="char"/>
        </array>
      </field>
    </class>
    <record name="GcRegisterNodeClass"
            c:type="ArvGcRegisterNodeClass"
            glib:is-gtype-struct-for="GcRegisterNode">
      <source-position filename="arvgcregisternode.h" line="102"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <enumeration name="GcRegisterNodeType"
                 glib:type-name="ArvGcRegisterNodeType"
                 glib:get-type="arv_gc_register_node_type_get_type"
                 c:type="ArvGcRegisterNodeType">
      <member name="register"
              value="0"
              c:identifier="ARV_GC_REGISTER_NODE_TYPE_REGISTER"
              glib:nick="register">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="46">Register node</doc>
      </member>
      <member name="integer"
              value="1"
              c:identifier="ARV_GC_REGISTER_NODE_TYPE_INTEGER"
              glib:nick="integer">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="47">IntReg node</doc>
      </member>
      <member name="masked_integer"
              value="2"
              c:identifier="ARV_GC_REGISTER_NODE_TYPE_MASKED_INTEGER"
              glib:nick="masked-integer">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="48">MaskedIntReg node</doc>
      </member>
      <member name="float"
              value="3"
              c:identifier="ARV_GC_REGISTER_NODE_TYPE_FLOAT"
              glib:nick="float">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="49">FloatReg node</doc>
      </member>
      <member name="string"
              value="4"
              c:identifier="ARV_GC_REGISTER_NODE_TYPE_STRING"
              glib:nick="string">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="50">StringReg node</doc>
      </member>
      <member name="struct_register"
              value="5"
              c:identifier="ARV_GC_REGISTER_NODE_TYPE_STRUCT_REGISTER"
              glib:nick="struct-register">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="51">StructReg node</doc>
      </member>
    </enumeration>
    <enumeration name="GcSign"
                 glib:type-name="ArvGcSign"
                 glib:get-type="arv_gc_sign_get_type"
                 c:type="ArvGcSign">
      <member name="signed"
              value="0"
              c:identifier="ARV_GC_SIGN_SIGNED"
              glib:nick="signed">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="34">signed integer</doc>
      </member>
      <member name="unsigned"
              value="1"
              c:identifier="ARV_GC_SIGN_UNSIGNED"
              glib:nick="unsigned">
        <doc xml:space="preserve"
             filename="arvgcregisternode.h"
             line="35">unsigned integer</doc>
      </member>
    </enumeration>
    <interface name="GcString"
               c:symbol-prefix="gc_string"
               c:type="ArvGcString"
               glib:type-name="ArvGcString"
               glib:get-type="arv_gc_string_get_type"
               glib:type-struct="GcStringInterface">
      <source-position filename="arvgcstring.h" line="43"/>
      <virtual-method name="get_max_length"
                      invoker="get_max_length"
                      throws="1">
        <source-position filename="arvgcstring.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value" throws="1">
        <source-position filename="arvgcstring.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value" throws="1">
        <source-position filename="arvgcstring.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_max_length"
              c:identifier="arv_gc_string_get_max_length"
              throws="1">
        <source-position filename="arvgcstring.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="arv_gc_string_get_value"
              throws="1">
        <source-position filename="arvgcstring.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_string_set_value"
              throws="1">
        <source-position filename="arvgcstring.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcStringInterface"
            c:type="ArvGcStringInterface"
            glib:is-gtype-struct-for="GcString">
      <source-position filename="arvgcstring.h" line="43"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value" throws="1">
          <source-position filename="arvgcstring.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value" throws="1">
          <source-position filename="arvgcstring.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max_length">
        <callback name="get_max_length" throws="1">
          <source-position filename="arvgcstring.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcStructEntryNode"
           c:symbol-prefix="gc_struct_entry_node"
           c:type="ArvGcStructEntryNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcStructEntryNode"
           glib:get-type="arv_gc_struct_entry_node_get_type"
           glib:type-struct="GcStructEntryNodeClass">
      <source-position filename="arvgcstructentrynode.h" line="53"/>
      <implements name="GcInteger"/>
      <implements name="GcRegister"/>
      <constructor name="new" c:identifier="arv_gc_struct_entry_node_new">
        <source-position filename="arvgcstructentrynode.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvgcstructentrynode.c"
               line="144">a newly created #ArvGcStructEntryNode.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="sign">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="lsb">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="msb">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="v_string">
        <array zero-terminated="0" fixed-size="39">
          <type name="gchar" c:type="char"/>
        </array>
      </field>
    </class>
    <record name="GcStructEntryNodeClass"
            c:type="ArvGcStructEntryNodeClass"
            glib:is-gtype-struct-for="GcStructEntryNode">
      <source-position filename="arvgcstructentrynode.h" line="53"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcSwissKnife"
           c:symbol-prefix="gc_swiss_knife"
           c:type="ArvGcSwissKnife"
           parent="GcFeatureNode"
           glib:type-name="ArvGcSwissKnife"
           glib:get-type="arv_gc_swiss_knife_get_type"
           glib:type-struct="GcSwissKnifeClass">
      <source-position filename="arvgcswissknife.h" line="54"/>
      <implements name="GcFloat"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_swiss_knife_new">
        <source-position filename="arvgcswissknife.h" line="57"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_integer"
                   c:identifier="arv_gc_swiss_knife_new_integer">
        <source-position filename="arvgcswissknife.h" line="58"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
      <field name="value_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="variables">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="formula_node">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
      </field>
      <field name="formula">
        <type name="Evaluator" c:type="ArvEvaluator*"/>
      </field>
    </class>
    <record name="GcSwissKnifeClass"
            c:type="ArvGcSwissKnifeClass"
            glib:is-gtype-struct-for="GcSwissKnife">
      <source-position filename="arvgcswissknife.h" line="54"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcVariableNode"
           c:symbol-prefix="gc_variable_node"
           c:type="ArvGcVariableNode"
           parent="GcPropertyNode"
           glib:type-name="ArvGcVariableNode"
           glib:get-type="arv_gc_variable_node_get_type"
           glib:type-struct="GcVariableNodeClass">
      <source-position filename="arvgcvariablenode.h" line="48"/>
      <constructor name="new" c:identifier="arv_gc_variable_node_new">
        <source-position filename="arvgcvariablenode.h" line="51"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_name" c:identifier="arv_gc_variable_node_get_name">
        <source-position filename="arvgcvariablenode.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="variable_node" transfer-ownership="none">
            <type name="GcVariableNode" c:type="ArvGcVariableNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="base">
        <type name="GcPropertyNode" c:type="ArvGcPropertyNode"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="char*"/>
      </field>
    </class>
    <record name="GcVariableNodeClass"
            c:type="ArvGcVariableNodeClass"
            glib:is-gtype-struct-for="GcVariableNode">
      <source-position filename="arvgcvariablenode.h" line="48"/>
      <field name="parent_class">
        <type name="GcPropertyNodeClass" c:type="ArvGcPropertyNodeClass"/>
      </field>
    </record>
    <class name="GvDevice"
           c:symbol-prefix="gv_device"
           c:type="ArvGvDevice"
           parent="Device"
           glib:type-name="ArvGvDevice"
           glib:get-type="arv_gv_device_get_type"
           glib:type-struct="GvDeviceClass">
      <source-position filename="arvgvdevice.h" line="60"/>
      <constructor name="new" c:identifier="arv_gv_device_new">
        <source-position filename="arvgvdevice.h" line="64"/>
        <return-value transfer-ownership="full">
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="interface_address" transfer-ownership="none">
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="device_address" transfer-ownership="none">
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_url_regex"
                c:identifier="arv_gv_device_get_url_regex">
        <source-position filename="arvgvdevice.h" line="67"/>
        <return-value transfer-ownership="full">
          <type name="GLib.Regex" c:type="GRegex*"/>
        </return-value>
      </function>
      <method name="get_device_address"
              c:identifier="arv_gv_device_get_device_address"
              version="0.2.0">
        <source-position filename="arvgvdevice.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgvdevice.c"
               line="1031">the device IP address.</doc>
          <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgvdevice.c"
                 line="1029">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interface_address"
              c:identifier="arv_gv_device_get_interface_address"
              version="0.2.0">
        <source-position filename="arvgvdevice.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgvdevice.c"
               line="1015">the device host interface IP address.</doc>
          <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgvdevice.c"
                 line="1013">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_packet_size"
              c:identifier="arv_gv_device_get_packet_size">
        <source-position filename="arvgvdevice.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp_tick_frequency"
              c:identifier="arv_gv_device_get_timestamp_tick_frequency">
        <source-position filename="arvgvdevice.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_packet_size"
              c:identifier="arv_gv_device_set_packet_size">
        <source-position filename="arvgvdevice.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="device">
        <type name="Device" c:type="ArvDevice"/>
      </field>
      <field name="priv">
        <type name="GvDevicePrivate" c:type="ArvGvDevicePrivate*"/>
      </field>
    </class>
    <record name="GvDeviceClass"
            c:type="ArvGvDeviceClass"
            glib:is-gtype-struct-for="GvDevice">
      <source-position filename="arvgvdevice.h" line="60"/>
      <field name="parent_class">
        <type name="DeviceClass" c:type="ArvDeviceClass"/>
      </field>
    </record>
    <record name="GvDevicePrivate" c:type="ArvGvDevicePrivate" disguised="1">
      <source-position filename="arvgvdevice.h" line="50"/>
    </record>
    <class name="GvInterface"
           c:symbol-prefix="gv_interface"
           c:type="ArvGvInterface"
           parent="Interface"
           glib:type-name="ArvGvInterface"
           glib:get-type="arv_gv_interface_get_type"
           glib:type-struct="GvInterfaceClass">
      <source-position filename="arvgvinterface.h" line="53"/>
      <function name="destroy_instance"
                c:identifier="arv_gv_interface_destroy_instance">
        <source-position filename="arvgvinterface.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="get_instance"
                c:identifier="arv_gv_interface_get_instance">
        <doc xml:space="preserve"
             filename="arvgvinterface.c"
             line="447">Gets the unique instance of the GV interface.</doc>
        <source-position filename="arvgvinterface.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvgvinterface.c"
               line="452">a #ArvInterface singleton.</doc>
          <type name="Interface" c:type="ArvInterface*"/>
        </return-value>
      </function>
      <field name="interface">
        <type name="Interface" c:type="ArvInterface"/>
      </field>
      <field name="priv">
        <type name="GvInterfacePrivate" c:type="ArvGvInterfacePrivate*"/>
      </field>
    </class>
    <record name="GvInterfaceClass"
            c:type="ArvGvInterfaceClass"
            glib:is-gtype-struct-for="GvInterface">
      <source-position filename="arvgvinterface.h" line="53"/>
      <field name="parent_class">
        <type name="InterfaceClass" c:type="ArvInterfaceClass"/>
      </field>
    </record>
    <record name="GvInterfacePrivate"
            c:type="ArvGvInterfacePrivate"
            disguised="1">
      <source-position filename="arvgvinterface.h" line="42"/>
    </record>
    <class name="GvStream"
           c:symbol-prefix="gv_stream"
           c:type="ArvGvStream"
           parent="Stream"
           glib:type-name="ArvGvStream"
           glib:get-type="arv_gv_stream_get_type"
           glib:type-struct="GvStreamClass">
      <source-position filename="arvgvstream.h" line="72"/>
      <constructor name="new"
                   c:identifier="arv_gv_stream_new"
                   introspectable="0">
        <source-position filename="arvgvstream.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvgvstream.c"
               line="728">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <parameter name="device_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgvstream.c"
                 line="721">inet device address for gvsp</doc>
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgvstream.c"
                 line="722">inet port</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="arvgvstream.c"
                 line="723">processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvgvstream.c"
                 line="724">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="timestamp_tick_frequency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgvstream.c"
                 line="725">camera tick frequency for timestamping</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvgvstream.c"
                 line="726">gvsp packet size, in bytes</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_port" c:identifier="arv_gv_stream_get_port">
        <source-position filename="arvgvstream.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_stream" transfer-ownership="none">
            <type name="GvStream" c:type="ArvGvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_statistics"
              c:identifier="arv_gv_stream_get_statistics">
        <source-position filename="arvgvstream.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_stream" transfer-ownership="none">
            <type name="GvStream" c:type="ArvGvStream*"/>
          </instance-parameter>
          <parameter name="n_resent_packets" transfer-ownership="none">
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_missing_packets" transfer-ownership="none">
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <property name="frame-retention" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="packet-resend" writable="1" transfer-ownership="none">
        <type name="GvStreamPacketResend"/>
      </property>
      <property name="packet-timeout" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="socket-buffer" writable="1" transfer-ownership="none">
        <type name="GvStreamSocketBuffer"/>
      </property>
      <property name="socket-buffer-size"
                writable="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="stream">
        <type name="Stream" c:type="ArvStream"/>
      </field>
      <field name="priv">
        <type name="GvStreamPrivate" c:type="ArvGvStreamPrivate*"/>
      </field>
    </class>
    <record name="GvStreamClass"
            c:type="ArvGvStreamClass"
            glib:is-gtype-struct-for="GvStream">
      <source-position filename="arvgvstream.h" line="72"/>
      <field name="parent_class">
        <type name="StreamClass" c:type="ArvStreamClass"/>
      </field>
    </record>
    <enumeration name="GvStreamPacketResend"
                 glib:type-name="ArvGvStreamPacketResend"
                 glib:get-type="arv_gv_stream_packet_resend_get_type"
                 c:type="ArvGvStreamPacketResend">
      <member name="never"
              value="0"
              c:identifier="ARV_GV_STREAM_PACKET_RESEND_NEVER"
              glib:nick="never">
        <doc xml:space="preserve"
             filename="arvgvstream.h"
             line="45">never request a packet resend</doc>
      </member>
      <member name="always"
              value="1"
              c:identifier="ARV_GV_STREAM_PACKET_RESEND_ALWAYS"
              glib:nick="always">
        <doc xml:space="preserve"
             filename="arvgvstream.h"
             line="46">request a packet resend if a packet was missing</doc>
      </member>
    </enumeration>
    <record name="GvStreamPrivate" c:type="ArvGvStreamPrivate" disguised="1">
      <source-position filename="arvgvstream.h" line="61"/>
    </record>
    <enumeration name="GvStreamSocketBuffer"
                 glib:type-name="ArvGvStreamSocketBuffer"
                 glib:get-type="arv_gv_stream_socket_buffer_get_type"
                 c:type="ArvGvStreamSocketBuffer">
      <member name="fixed"
              value="0"
              c:identifier="ARV_GV_STREAM_SOCKET_BUFFER_FIXED"
              glib:nick="fixed">
        <doc xml:space="preserve"
             filename="arvgvstream.h"
             line="34">socket buffer is set to a given fixed value</doc>
      </member>
      <member name="auto"
              value="1"
              c:identifier="ARV_GV_STREAM_SOCKET_BUFFER_AUTO"
              glib:nick="auto">
        <doc xml:space="preserve"
             filename="arvgvstream.h"
             line="35">sockect buffer is set with respect to the payload size</doc>
      </member>
    </enumeration>
    <enumeration name="GvcpCommand"
                 glib:type-name="ArvGvcpCommand"
                 glib:get-type="arv_gvcp_command_get_type"
                 c:type="ArvGvcpCommand">
      <member name="discovery_cmd"
              value="2"
              c:identifier="ARV_GVCP_COMMAND_DISCOVERY_CMD"
              glib:nick="discovery-cmd">
      </member>
      <member name="discovery_ack"
              value="3"
              c:identifier="ARV_GVCP_COMMAND_DISCOVERY_ACK"
              glib:nick="discovery-ack">
      </member>
      <member name="bye_cmd"
              value="4"
              c:identifier="ARV_GVCP_COMMAND_BYE_CMD"
              glib:nick="bye-cmd">
      </member>
      <member name="bye_ack"
              value="5"
              c:identifier="ARV_GVCP_COMMAND_BYE_ACK"
              glib:nick="bye-ack">
      </member>
      <member name="packet_resend_cmd"
              value="64"
              c:identifier="ARV_GVCP_COMMAND_PACKET_RESEND_CMD"
              glib:nick="packet-resend-cmd">
      </member>
      <member name="packet_resend_ack"
              value="65"
              c:identifier="ARV_GVCP_COMMAND_PACKET_RESEND_ACK"
              glib:nick="packet-resend-ack">
      </member>
      <member name="read_register_cmd"
              value="128"
              c:identifier="ARV_GVCP_COMMAND_READ_REGISTER_CMD"
              glib:nick="read-register-cmd">
      </member>
      <member name="read_register_ack"
              value="129"
              c:identifier="ARV_GVCP_COMMAND_READ_REGISTER_ACK"
              glib:nick="read-register-ack">
      </member>
      <member name="write_register_cmd"
              value="130"
              c:identifier="ARV_GVCP_COMMAND_WRITE_REGISTER_CMD"
              glib:nick="write-register-cmd">
      </member>
      <member name="write_register_ack"
              value="131"
              c:identifier="ARV_GVCP_COMMAND_WRITE_REGISTER_ACK"
              glib:nick="write-register-ack">
      </member>
      <member name="read_memory_cmd"
              value="132"
              c:identifier="ARV_GVCP_COMMAND_READ_MEMORY_CMD"
              glib:nick="read-memory-cmd">
      </member>
      <member name="read_memory_ack"
              value="133"
              c:identifier="ARV_GVCP_COMMAND_READ_MEMORY_ACK"
              glib:nick="read-memory-ack">
      </member>
      <member name="write_memory_cmd"
              value="134"
              c:identifier="ARV_GVCP_COMMAND_WRITE_MEMORY_CMD"
              glib:nick="write-memory-cmd">
      </member>
      <member name="write_memory_ack"
              value="135"
              c:identifier="ARV_GVCP_COMMAND_WRITE_MEMORY_ACK"
              glib:nick="write-memory-ack">
      </member>
      <member name="pending_ack"
              value="137"
              c:identifier="ARV_GVCP_COMMAND_PENDING_ACK"
              glib:nick="pending-ack">
      </member>
    </enumeration>
    <enumeration name="GvcpPacketType"
                 glib:type-name="ArvGvcpPacketType"
                 glib:get-type="arv_gvcp_packet_type_get_type"
                 c:type="ArvGvcpPacketType">
      <member name="ack"
              value="0"
              c:identifier="ARV_GVCP_PACKET_TYPE_ACK"
              glib:nick="ack">
      </member>
      <member name="resend"
              value="16896"
              c:identifier="ARV_GVCP_PACKET_TYPE_RESEND"
              glib:nick="resend">
      </member>
      <member name="cmd"
              value="16897"
              c:identifier="ARV_GVCP_PACKET_TYPE_CMD"
              glib:nick="cmd">
      </member>
      <member name="error"
              value="32774"
              c:identifier="ARV_GVCP_PACKET_TYPE_ERROR"
              glib:nick="error">
      </member>
    </enumeration>
    <enumeration name="GvspContentType"
                 glib:type-name="ArvGvspContentType"
                 glib:get-type="arv_gvsp_content_type_get_type"
                 c:type="ArvGvspContentType">
      <member name="leader"
              value="1"
              c:identifier="ARV_GVSP_CONTENT_TYPE_DATA_LEADER"
              glib:nick="leader">
      </member>
      <member name="trailer"
              value="2"
              c:identifier="ARV_GVSP_CONTENT_TYPE_DATA_TRAILER"
              glib:nick="trailer">
      </member>
      <member name="block"
              value="3"
              c:identifier="ARV_GVSP_CONTENT_TYPE_DATA_BLOCK"
              glib:nick="block">
      </member>
    </enumeration>
    <enumeration name="GvspPacketType"
                 glib:type-name="ArvGvspPacketType"
                 glib:get-type="arv_gvsp_packet_type_get_type"
                 c:type="ArvGvspPacketType">
      <member name="ok"
              value="0"
              c:identifier="ARV_GVSP_PACKET_TYPE_OK"
              glib:nick="ok">
      </member>
      <member name="resend"
              value="256"
              c:identifier="ARV_GVSP_PACKET_TYPE_RESEND"
              glib:nick="resend">
      </member>
      <member name="error"
              value="32780"
              c:identifier="ARV_GVSP_PACKET_TYPE_ERROR"
              glib:nick="error">
      </member>
    </enumeration>
    <enumeration name="GvspPayloadType"
                 glib:type-name="ArvGvspPayloadType"
                 glib:get-type="arv_gvsp_payload_type_get_type"
                 c:type="ArvGvspPayloadType">
      <member name="image"
              value="1"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_IMAGE"
              glib:nick="image">
      </member>
      <member name="rawdata"
              value="2"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_RAWDATA"
              glib:nick="rawdata">
      </member>
      <member name="file"
              value="3"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_FILE"
              glib:nick="file">
      </member>
      <member name="chunk_data"
              value="4"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_CHUNK_DATA"
              glib:nick="chunk-data">
      </member>
      <member name="extended_chunk_data"
              value="5"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_EXTENDED_CHUNK_DATA"
              glib:nick="extended-chunk-data">
      </member>
      <member name="jpeg"
              value="6"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_JPEG"
              glib:nick="jpeg">
      </member>
      <member name="jpeg2000"
              value="7"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_JPEG2000"
              glib:nick="jpeg2000">
      </member>
      <member name="h264"
              value="8"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_H264"
              glib:nick="h264">
      </member>
      <member name="multizone_image"
              value="9"
              c:identifier="ARV_GVSP_PAYLOAD_TYPE_MULTIZONE_IMAGE"
              glib:nick="multizone-image">
      </member>
    </enumeration>
    <function-macro name="INTERFACE"
                    c:identifier="ARV_INTERFACE"
                    introspectable="0">
      <source-position filename="arvinterface.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INTERFACE_CLASS"
                    c:identifier="ARV_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="arvinterface.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INTERFACE_GET_CLASS"
                    c:identifier="ARV_INTERFACE_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvinterface.h" line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUFFER"
                    c:identifier="ARV_IS_BUFFER"
                    introspectable="0">
      <source-position filename="arvbuffer.h" line="87"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUFFER_CLASS"
                    c:identifier="ARV_IS_BUFFER_CLASS"
                    introspectable="0">
      <source-position filename="arvbuffer.h" line="88"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAMERA"
                    c:identifier="ARV_IS_CAMERA"
                    introspectable="0">
      <source-position filename="arvcamera.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAMERA_CLASS"
                    c:identifier="ARV_IS_CAMERA_CLASS"
                    introspectable="0">
      <source-position filename="arvcamera.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CHUNK_PARSER"
                    c:identifier="ARV_IS_CHUNK_PARSER"
                    introspectable="0">
      <source-position filename="arvchunkparser.h" line="51"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CHUNK_PARSER_CLASS"
                    c:identifier="ARV_IS_CHUNK_PARSER_CLASS"
                    introspectable="0">
      <source-position filename="arvchunkparser.h" line="52"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEVICE"
                    c:identifier="ARV_IS_DEVICE"
                    introspectable="0">
      <source-position filename="arvdevice.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEVICE_CLASS"
                    c:identifier="ARV_IS_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="arvdevice.h" line="51"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_CHARACTER_DATA"
                    c:identifier="ARV_IS_DOM_CHARACTER_DATA"
                    introspectable="0">
      <source-position filename="arvdomcharacterdata.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_CHARACTER_DATA_CLASS"
                    c:identifier="ARV_IS_DOM_CHARACTER_DATA_CLASS"
                    introspectable="0">
      <source-position filename="arvdomcharacterdata.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_DOCUMENT"
                    c:identifier="ARV_IS_DOM_DOCUMENT"
                    introspectable="0">
      <source-position filename="arvdomdocument.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_DOCUMENT_CLASS"
                    c:identifier="ARV_IS_DOM_DOCUMENT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomdocument.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_DOCUMENT_FRAGMENT"
                    c:identifier="ARV_IS_DOM_DOCUMENT_FRAGMENT"
                    introspectable="0">
      <source-position filename="arvdomdocumentfragment.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_DOCUMENT_FRAGMENT_CLASS"
                    c:identifier="ARV_IS_DOM_DOCUMENT_FRAGMENT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomdocumentfragment.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_ELEMENT"
                    c:identifier="ARV_IS_DOM_ELEMENT"
                    introspectable="0">
      <source-position filename="arvdomelement.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_ELEMENT_CLASS"
                    c:identifier="ARV_IS_DOM_ELEMENT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomelement.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_NAMED_NODE_MAP"
                    c:identifier="ARV_IS_DOM_NAMED_NODE_MAP"
                    introspectable="0">
      <source-position filename="arvdomnamednodemap.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_NAMED_NODE_MAP_CLASS"
                    c:identifier="ARV_IS_DOM_NAMED_NODE_MAP_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnamednodemap.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_NODE"
                    c:identifier="ARV_IS_DOM_NODE"
                    introspectable="0">
      <source-position filename="arvdomnode.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_NODE_CLASS"
                    c:identifier="ARV_IS_DOM_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnode.h" line="51"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_NODE_LIST"
                    c:identifier="ARV_IS_DOM_NODE_LIST"
                    introspectable="0">
      <source-position filename="arvdomnodelist.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_NODE_LIST_CLASS"
                    c:identifier="ARV_IS_DOM_NODE_LIST_CLASS"
                    introspectable="0">
      <source-position filename="arvdomnodelist.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_TEXT"
                    c:identifier="ARV_IS_DOM_TEXT"
                    introspectable="0">
      <source-position filename="arvdomtext.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOM_TEXT_CLASS"
                    c:identifier="ARV_IS_DOM_TEXT_CLASS"
                    introspectable="0">
      <source-position filename="arvdomtext.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_EVALUATOR"
                    c:identifier="ARV_IS_EVALUATOR"
                    introspectable="0">
      <source-position filename="arvevaluator.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_EVALUATOR_CLASS"
                    c:identifier="ARV_IS_EVALUATOR_CLASS"
                    introspectable="0">
      <source-position filename="arvevaluator.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_CAMERA"
                    c:identifier="ARV_IS_FAKE_CAMERA"
                    introspectable="0">
      <source-position filename="arvfakecamera.h" line="88"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_CAMERA_CLASS"
                    c:identifier="ARV_IS_FAKE_CAMERA_CLASS"
                    introspectable="0">
      <source-position filename="arvfakecamera.h" line="89"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_DEVICE"
                    c:identifier="ARV_IS_FAKE_DEVICE"
                    introspectable="0">
      <source-position filename="arvfakedevice.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_DEVICE_CLASS"
                    c:identifier="ARV_IS_FAKE_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="arvfakedevice.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_INTERFACE"
                    c:identifier="ARV_IS_FAKE_INTERFACE"
                    introspectable="0">
      <source-position filename="arvfakeinterface.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_INTERFACE_CLASS"
                    c:identifier="ARV_IS_FAKE_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="arvfakeinterface.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_STREAM"
                    c:identifier="ARV_IS_FAKE_STREAM"
                    introspectable="0">
      <source-position filename="arvfakestream.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FAKE_STREAM_CLASS"
                    c:identifier="ARV_IS_FAKE_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arvfakestream.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC" c:identifier="ARV_IS_GC" introspectable="0">
      <source-position filename="arvgc.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_BOOLEAN"
                    c:identifier="ARV_IS_GC_BOOLEAN"
                    introspectable="0">
      <source-position filename="arvgcboolean.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_BOOLEAN_CLASS"
                    c:identifier="ARV_IS_GC_BOOLEAN_CLASS"
                    introspectable="0">
      <source-position filename="arvgcboolean.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_CATEGORY"
                    c:identifier="ARV_IS_GC_CATEGORY"
                    introspectable="0">
      <source-position filename="arvgccategory.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_CATEGORY_CLASS"
                    c:identifier="ARV_IS_GC_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="arvgccategory.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_CLASS"
                    c:identifier="ARV_IS_GC_CLASS"
                    introspectable="0">
      <source-position filename="arvgc.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_COMMAND"
                    c:identifier="ARV_IS_GC_COMMAND"
                    introspectable="0">
      <source-position filename="arvgccommand.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_COMMAND_CLASS"
                    c:identifier="ARV_IS_GC_COMMAND_CLASS"
                    introspectable="0">
      <source-position filename="arvgccommand.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_CONVERTER"
                    c:identifier="ARV_IS_GC_CONVERTER"
                    introspectable="0">
      <source-position filename="arvgcconverter.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_CONVERTER_CLASS"
                    c:identifier="ARV_IS_GC_CONVERTER_CLASS"
                    introspectable="0">
      <source-position filename="arvgcconverter.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_ENUMERATION"
                    c:identifier="ARV_IS_GC_ENUMERATION"
                    introspectable="0">
      <source-position filename="arvgcenumeration.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_ENUMERATION_CLASS"
                    c:identifier="ARV_IS_GC_ENUMERATION_CLASS"
                    introspectable="0">
      <source-position filename="arvgcenumeration.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_ENUM_ENTRY"
                    c:identifier="ARV_IS_GC_ENUM_ENTRY"
                    introspectable="0">
      <source-position filename="arvgcenumentry.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_ENUM_ENTRY_CLASS"
                    c:identifier="ARV_IS_GC_ENUM_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="arvgcenumentry.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_FEATURE_NODE"
                    c:identifier="ARV_IS_GC_FEATURE_NODE"
                    introspectable="0">
      <source-position filename="arvgcfeaturenode.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_FEATURE_NODE_CLASS"
                    c:identifier="ARV_IS_GC_FEATURE_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcfeaturenode.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_FLOAT"
                    c:identifier="ARV_IS_GC_FLOAT"
                    introspectable="0">
      <source-position filename="arvgcfloat.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_FLOAT_NODE"
                    c:identifier="ARV_IS_GC_FLOAT_NODE"
                    introspectable="0">
      <source-position filename="arvgcfloatnode.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_FLOAT_NODE_CLASS"
                    c:identifier="ARV_IS_GC_FLOAT_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcfloatnode.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_GROUP_NODE"
                    c:identifier="ARV_IS_GC_GROUP_NODE"
                    introspectable="0">
      <source-position filename="arvgcgroupnode.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_GROUP_NODE_CLASS"
                    c:identifier="ARV_IS_GC_GROUP_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcgroupnode.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_INDEX_NODE"
                    c:identifier="ARV_IS_GC_INDEX_NODE"
                    introspectable="0">
      <source-position filename="arvgcindexnode.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_INDEX_NODE_CLASS"
                    c:identifier="ARV_IS_GC_INDEX_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcindexnode.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_INTEGER"
                    c:identifier="ARV_IS_GC_INTEGER"
                    introspectable="0">
      <source-position filename="arvgcinteger.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_INTEGER_NODE"
                    c:identifier="ARV_IS_GC_INTEGER_NODE"
                    introspectable="0">
      <source-position filename="arvgcintegernode.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_INTEGER_NODE_CLASS"
                    c:identifier="ARV_IS_GC_INTEGER_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcintegernode.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_INVALIDATOR_NODE"
                    c:identifier="ARV_IS_GC_INVALIDATOR_NODE"
                    introspectable="0">
      <source-position filename="arvgcinvalidatornode.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_INVALIDATOR_NODE_CLASS"
                    c:identifier="ARV_IS_GC_INVALIDATOR_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcinvalidatornode.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_NODE"
                    c:identifier="ARV_IS_GC_NODE"
                    introspectable="0">
      <source-position filename="arvgcnode.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_NODE_CLASS"
                    c:identifier="ARV_IS_GC_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcnode.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_PORT"
                    c:identifier="ARV_IS_GC_PORT"
                    introspectable="0">
      <source-position filename="arvgcport.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_PORT_CLASS"
                    c:identifier="ARV_IS_GC_PORT_CLASS"
                    introspectable="0">
      <source-position filename="arvgcport.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_PROPERTY_NODE"
                    c:identifier="ARV_IS_GC_PROPERTY_NODE"
                    introspectable="0">
      <source-position filename="arvgcpropertynode.h" line="82"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_PROPERTY_NODE_CLASS"
                    c:identifier="ARV_IS_GC_PROPERTY_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcpropertynode.h" line="83"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_REGISTER"
                    c:identifier="ARV_IS_GC_REGISTER"
                    introspectable="0">
      <source-position filename="arvgcregister.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_REGISTER_DESCRIPTION_NODE"
                    c:identifier="ARV_IS_GC_REGISTER_DESCRIPTION_NODE"
                    introspectable="0">
      <source-position filename="arvgcregisterdescriptionnode.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_REGISTER_DESCRIPTION_NODE_CLASS"
                    c:identifier="ARV_IS_GC_REGISTER_DESCRIPTION_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcregisterdescriptionnode.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_REGISTER_NODE"
                    c:identifier="ARV_IS_GC_REGISTER_NODE"
                    introspectable="0">
      <source-position filename="arvgcregisternode.h" line="66"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_REGISTER_NODE_CLASS"
                    c:identifier="ARV_IS_GC_REGISTER_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcregisternode.h" line="67"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_STRING"
                    c:identifier="ARV_IS_GC_STRING"
                    introspectable="0">
      <source-position filename="arvgcstring.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_STRUCT_ENTRY_NODE"
                    c:identifier="ARV_IS_GC_STRUCT_ENTRY_NODE"
                    introspectable="0">
      <source-position filename="arvgcstructentrynode.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_STRUCT_ENTRY_NODE_CLASS"
                    c:identifier="ARV_IS_GC_STRUCT_ENTRY_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcstructentrynode.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_SWISS_KNIFE"
                    c:identifier="ARV_IS_GC_SWISS_KNIFE"
                    introspectable="0">
      <source-position filename="arvgcswissknife.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_SWISS_KNIFE_CLASS"
                    c:identifier="ARV_IS_GC_SWISS_KNIFE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcswissknife.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_VARIABLE_NODE"
                    c:identifier="ARV_IS_GC_VARIABLE_NODE"
                    introspectable="0">
      <source-position filename="arvgcvariablenode.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GC_VARIABLE_NODE_CLASS"
                    c:identifier="ARV_IS_GC_VARIABLE_NODE_CLASS"
                    introspectable="0">
      <source-position filename="arvgcvariablenode.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GV_DEVICE"
                    c:identifier="ARV_IS_GV_DEVICE"
                    introspectable="0">
      <source-position filename="arvgvdevice.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GV_DEVICE_CLASS"
                    c:identifier="ARV_IS_GV_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="arvgvdevice.h" line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GV_INTERFACE"
                    c:identifier="ARV_IS_GV_INTERFACE"
                    introspectable="0">
      <source-position filename="arvgvinterface.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GV_INTERFACE_CLASS"
                    c:identifier="ARV_IS_GV_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="arvgvinterface.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GV_STREAM"
                    c:identifier="ARV_IS_GV_STREAM"
                    introspectable="0">
      <source-position filename="arvgvstream.h" line="57"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GV_STREAM_CLASS"
                    c:identifier="ARV_IS_GV_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arvgvstream.h" line="58"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INTERFACE"
                    c:identifier="ARV_IS_INTERFACE"
                    introspectable="0">
      <source-position filename="arvinterface.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INTERFACE_CLASS"
                    c:identifier="ARV_IS_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="arvinterface.h" line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STREAM"
                    c:identifier="ARV_IS_STREAM"
                    introspectable="0">
      <source-position filename="arvstream.h" line="52"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STREAM_CLASS"
                    c:identifier="ARV_IS_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arvstream.h" line="53"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Interface"
           c:symbol-prefix="interface"
           c:type="ArvInterface"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvInterface"
           glib:get-type="arv_interface_get_type"
           glib:type-struct="InterfaceClass">
      <doc xml:space="preserve"
           filename="arvinterface.c"
           line="23">#ArvCamera is an abstract base class for camera discovery. It maintains a
list of the available devices and help to instantiate the corresponding
#ArvDevice object. If user already knows the device id of the device, he should
not worry about this class and just use arv_camera_new() or
arv_open_device().</doc>
      <source-position filename="arvinterface.h" line="62"/>
      <virtual-method name="open_device" invoker="open_device" version="0.2.0">
        <doc xml:space="preserve"
             filename="arvinterface.c"
             line="192">Creates a new #ArvDevice object corresponding to the given device id string. The first available device is returned if @device_id is null.</doc>
        <source-position filename="arvinterface.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvinterface.c"
               line="199">a new #ArvDevice</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="194">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="device_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="195">device unique id</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_device_list" introspectable="0">
        <source-position filename="arvinterface.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="device_ids" transfer-ownership="none">
            <array name="GLib.Array" c:type="GArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_device_address"
              c:identifier="arv_interface_get_device_address"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvinterface.c"
             line="164">queries the device address (IP address in the case of an ethernet camera). Useful
for constructing manual connections to devices using @arv_gv_device_new

Prior to this call the @arv_interface_update_device_list
function must be called.</doc>
        <source-position filename="arvinterface.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvinterface.c"
               line="175">the device address</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="166">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="167">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_id"
              c:identifier="arv_interface_get_device_id"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvinterface.c"
             line="110">Queries the unique device id corresponding to index.  Prior to this
call the @arv_interface_update_device_list function must be called.</doc>
        <source-position filename="arvinterface.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvinterface.c"
               line="118">a unique device id</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="112">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="113">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_physical_id"
              c:identifier="arv_interface_get_device_physical_id"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvinterface.c"
             line="135">Queries the physical device id corresponding to index such
as the MAC address for Ethernet based devices, bus id for PCI,
USB or Firewire based devices.

Prior to this call the @arv_interface_update_device_list
function must be called.</doc>
        <source-position filename="arvinterface.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvinterface.c"
               line="147">a physical device id</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="137">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="138">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_devices"
              c:identifier="arv_interface_get_n_devices"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvinterface.c"
             line="88">Queries the number of available devices on this interface. Prior to this
call the @arv_interface_update_device_list function must be called. The list content will not
change until the next call of the update function.</doc>
        <source-position filename="arvinterface.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvinterface.c"
               line="96">the number of available devices</doc>
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="90">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_device"
              c:identifier="arv_interface_open_device"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvinterface.c"
             line="192">Creates a new #ArvDevice object corresponding to the given device id string. The first available device is returned if @device_id is null.</doc>
        <source-position filename="arvinterface.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvinterface.c"
               line="199">a new #ArvDevice</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="194">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="device_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="195">device unique id</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_device_list"
              c:identifier="arv_interface_update_device_list"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvinterface.c"
             line="66">Updates the internal list of available devices. This may change the
connection between a list index and a device ID.</doc>
        <source-position filename="arvinterface.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="68">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="InterfacePrivate" c:type="ArvInterfacePrivate*"/>
      </field>
    </class>
    <record name="InterfaceClass"
            c:type="ArvInterfaceClass"
            glib:is-gtype-struct-for="Interface">
      <source-position filename="arvinterface.h" line="62"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="update_device_list" introspectable="0">
        <callback name="update_device_list" introspectable="0">
          <source-position filename="arvinterface.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="interface" transfer-ownership="none">
              <type name="Interface" c:type="ArvInterface*"/>
            </parameter>
            <parameter name="device_ids" transfer-ownership="none">
              <array name="GLib.Array" c:type="GArray*">
                <type name="gpointer" c:type="gpointer"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_device">
        <callback name="open_device">
          <source-position filename="arvinterface.h" line="61"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvinterface.c"
                 line="199">a new #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </return-value>
          <parameters>
            <parameter name="interface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvinterface.c"
                   line="194">a #ArvInterface</doc>
              <type name="Interface" c:type="ArvInterface*"/>
            </parameter>
            <parameter name="device_id"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="arvinterface.c"
                   line="195">device unique id</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="InterfaceDeviceIds" c:type="ArvInterfaceDeviceIds">
      <source-position filename="arvinterface.h" line="39"/>
      <field name="device" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="physical" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="address" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
    </record>
    <record name="InterfacePrivate" c:type="ArvInterfacePrivate" disguised="1">
      <source-position filename="arvinterface.h" line="48"/>
    </record>
    <constant name="PIXEL_FORMAT_BAYER_BG_10"
              value="17825807"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_10">
      <source-position filename="arvenums.h" line="104"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_12"
              value="17825811"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_12">
      <source-position filename="arvenums.h" line="109"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_12_PACKED"
              value="17563693"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_12_PACKED">
      <source-position filename="arvenums.h" line="114"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_16"
              value="17825841"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_16">
      <source-position filename="arvenums.h" line="119"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_8"
              value="17301515"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_8">
      <source-position filename="arvenums.h" line="99"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_10"
              value="17825806"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_10">
      <source-position filename="arvenums.h" line="103"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_12"
              value="17825810"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_12">
      <source-position filename="arvenums.h" line="108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_12_PACKED"
              value="17563692"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_12_PACKED">
      <source-position filename="arvenums.h" line="113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_16"
              value="17825840"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_16">
      <source-position filename="arvenums.h" line="118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_8"
              value="17301514"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_8">
      <source-position filename="arvenums.h" line="98"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_10"
              value="17825804"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_10">
      <source-position filename="arvenums.h" line="101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_12"
              value="17825808"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_12">
      <source-position filename="arvenums.h" line="106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_12_PACKED"
              value="17563690"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_12_PACKED">
      <source-position filename="arvenums.h" line="111"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_16"
              value="17825838"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_16">
      <source-position filename="arvenums.h" line="116"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_8"
              value="17301512"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_8">
      <source-position filename="arvenums.h" line="96"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_10"
              value="17825805"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_10">
      <source-position filename="arvenums.h" line="102"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_12"
              value="17825809"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_12">
      <source-position filename="arvenums.h" line="107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_12_PACKED"
              value="17563691"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_12_PACKED">
      <source-position filename="arvenums.h" line="112"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_16"
              value="17825839"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_16">
      <source-position filename="arvenums.h" line="117"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_8"
              value="17301513"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_8">
      <source-position filename="arvenums.h" line="97"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGRA_8_PACKED"
              value="35651607"
              c:type="ARV_PIXEL_FORMAT_BGRA_8_PACKED">
      <source-position filename="arvenums.h" line="127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGR_10_PACKED"
              value="36700185"
              c:type="ARV_PIXEL_FORMAT_BGR_10_PACKED">
      <source-position filename="arvenums.h" line="130"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGR_12_PACKED"
              value="36700187"
              c:type="ARV_PIXEL_FORMAT_BGR_12_PACKED">
      <source-position filename="arvenums.h" line="133"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGR_8_PACKED"
              value="35127317"
              c:type="ARV_PIXEL_FORMAT_BGR_8_PACKED">
      <source-position filename="arvenums.h" line="124"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="PIXEL_FORMAT_BIT_PER_PIXEL"
                    c:identifier="ARV_PIXEL_FORMAT_BIT_PER_PIXEL"
                    introspectable="0">
      <source-position filename="arvenums.h" line="79"/>
      <parameters>
        <parameter name="pixel_format">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_BG_12_PACKED"
              value="2165047300"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_12_PACKED">
      <source-position filename="arvenums.h" line="151"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_BG_16"
              value="2165309449"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_16">
      <source-position filename="arvenums.h" line="156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GB_12_PACKED"
              value="2165047299"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_12_PACKED">
      <source-position filename="arvenums.h" line="150"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GB_16"
              value="2165309448"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_16">
      <source-position filename="arvenums.h" line="155"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GR_12_PACKED"
              value="2165047297"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_12_PACKED">
      <source-position filename="arvenums.h" line="148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GR_16"
              value="2165309446"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_16">
      <source-position filename="arvenums.h" line="153"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_RG_12_PACKED"
              value="2165047298"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_12_PACKED">
      <source-position filename="arvenums.h" line="149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_RG_16"
              value="2165309447"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_16">
      <source-position filename="arvenums.h" line="154"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_YUV_422_YUYV_PACKED"
              value="2182086661"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_YUV_422_YUYV_PACKED">
      <source-position filename="arvenums.h" line="152"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_10"
              value="17825795"
              c:type="ARV_PIXEL_FORMAT_MONO_10">
      <source-position filename="arvenums.h" line="86"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_10_PACKED"
              value="17563652"
              c:type="ARV_PIXEL_FORMAT_MONO_10_PACKED">
      <source-position filename="arvenums.h" line="87"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_12"
              value="17825797"
              c:type="ARV_PIXEL_FORMAT_MONO_12">
      <source-position filename="arvenums.h" line="89"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_12_PACKED"
              value="17563654"
              c:type="ARV_PIXEL_FORMAT_MONO_12_PACKED">
      <source-position filename="arvenums.h" line="90"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_14"
              value="17825829"
              c:type="ARV_PIXEL_FORMAT_MONO_14">
      <source-position filename="arvenums.h" line="92"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_16"
              value="17825799"
              c:type="ARV_PIXEL_FORMAT_MONO_16">
      <source-position filename="arvenums.h" line="94"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_8"
              value="17301505"
              c:type="ARV_PIXEL_FORMAT_MONO_8">
      <source-position filename="arvenums.h" line="83"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_8_SIGNED"
              value="17301506"
              c:type="ARV_PIXEL_FORMAT_MONO_8_SIGNED">
      <source-position filename="arvenums.h" line="84"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGBA_8_PACKED"
              value="35651606"
              c:type="ARV_PIXEL_FORMAT_RGBA_8_PACKED">
      <source-position filename="arvenums.h" line="126"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_10_PACKED"
              value="36700184"
              c:type="ARV_PIXEL_FORMAT_RGB_10_PACKED">
      <source-position filename="arvenums.h" line="129"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_10_PLANAR"
              value="36700194"
              c:type="ARV_PIXEL_FORMAT_RGB_10_PLANAR">
      <source-position filename="arvenums.h" line="140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_12_PACKED"
              value="36700186"
              c:type="ARV_PIXEL_FORMAT_RGB_12_PACKED">
      <source-position filename="arvenums.h" line="132"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_12_PLANAR"
              value="36700195"
              c:type="ARV_PIXEL_FORMAT_RGB_12_PLANAR">
      <source-position filename="arvenums.h" line="141"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_16_PLANAR"
              value="36700196"
              c:type="ARV_PIXEL_FORMAT_RGB_16_PLANAR">
      <source-position filename="arvenums.h" line="142"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_8_PACKED"
              value="35127316"
              c:type="ARV_PIXEL_FORMAT_RGB_8_PACKED">
      <source-position filename="arvenums.h" line="123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_8_PLANAR"
              value="35127329"
              c:type="ARV_PIXEL_FORMAT_RGB_8_PLANAR">
      <source-position filename="arvenums.h" line="139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_411_PACKED"
              value="34340894"
              c:type="ARV_PIXEL_FORMAT_YUV_411_PACKED">
      <source-position filename="arvenums.h" line="135"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_422_PACKED"
              value="34603039"
              c:type="ARV_PIXEL_FORMAT_YUV_422_PACKED">
      <source-position filename="arvenums.h" line="136"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_422_YUYV_PACKED"
              value="34603058"
              c:type="ARV_PIXEL_FORMAT_YUV_422_YUYV_PACKED">
      <source-position filename="arvenums.h" line="144"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_444_PACKED"
              value="35127328"
              c:type="ARV_PIXEL_FORMAT_YUV_444_PACKED">
      <source-position filename="arvenums.h" line="137"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="STREAM" c:identifier="ARV_STREAM" introspectable="0">
      <source-position filename="arvstream.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STREAM_CLASS"
                    c:identifier="ARV_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arvstream.h" line="51"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STREAM_GET_CLASS"
                    c:identifier="ARV_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="arvstream.h" line="54"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Stream"
           c:symbol-prefix="stream"
           c:type="ArvStream"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvStream"
           glib:get-type="arv_stream_get_type"
           glib:type-struct="StreamClass">
      <doc xml:space="preserve"
           filename="arvstream.c"
           line="23">#ArvStream provides an abstract base class for the implementation of video
stream reception threads. The interface between the reception thread and the
main thread is done using asynchronous queues, containing #ArvBuffer
objects.</doc>
      <source-position filename="arvstream.h" line="73"/>
      <virtual-method name="get_statistics"
                      invoker="get_statistics"
                      version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="218">An accessor to the stream statistics.</doc>
        <source-position filename="arvstream.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="220">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="n_completed_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="221">number of complete received buffers</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_failures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="222">number of reception failures</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_underruns"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="223">number of input buffer underruns</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_buffer">
        <source-position filename="arvstream.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_emit_signals"
              c:identifier="arv_stream_get_emit_signals"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="277">Check if stream will emit its signals.</doc>
        <source-position filename="arvstream.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvstream.c"
               line="283">%TRUE if @stream is emiting its signals.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="279">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_buffers"
              c:identifier="arv_stream_get_n_buffers"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="190">An accessor to the stream buffer queue lengths.</doc>
        <source-position filename="arvstream.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="192">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="n_input_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="193">input queue length</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="n_output_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="194">output queue length</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_statistics"
              c:identifier="arv_stream_get_statistics"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="218">An accessor to the stream statistics.</doc>
        <source-position filename="arvstream.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="220">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="n_completed_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="221">number of complete received buffers</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_failures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="222">number of reception failures</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_underruns"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="223">number of input buffer underruns</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop_buffer"
              c:identifier="arv_stream_pop_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="81">Pops a buffer from the output queue of @stream. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.
This function blocks until a buffer is available.

This method is thread safe.</doc>
        <source-position filename="arvstream.h" line="78"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvstream.c"
               line="91">a #ArvBuffer</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="83">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="push_buffer"
              c:identifier="arv_stream_push_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="59">Pushes a #ArvBuffer to the @stream thread. The @stream takes ownership of @buffer,
and will free all the buffers still in its queues when destroyed.

This method is thread safe.</doc>
        <source-position filename="arvstream.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="61">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="62">buffer to push</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_emit_signals"
              c:identifier="arv_stream_set_emit_signals"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="257">Make @stream emit signals. This option is
by default disabled because signal emission is expensive and unneeded when
the application prefers to operate in pull mode.</doc>
        <source-position filename="arvstream.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="259">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="emit_signals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="260">the new state</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="timeout_pop_buffer"
              c:identifier="arv_stream_timeout_pop_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="127">Pops a buffer from the output queue of @stream, waiting no more than @timeout. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.

This method is thread safe.</doc>
        <source-position filename="arvstream.h" line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvstream.c"
               line="137">a #ArvBuffer, NULL if no buffer is available until the timeout occurs.</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="129">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="130">timeout, in µs</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="try_pop_buffer"
              c:identifier="arv_stream_try_pop_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="104">Pops a buffer from the output queue of @stream. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.
This is the non blocking version of pop_buffer.

This method is thread safe.</doc>
        <source-position filename="arvstream.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arvstream.c"
               line="114">a #ArvBuffer, NULL if no buffer is available.</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arvstream.c"
                 line="106">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="emit-signals" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="StreamPrivate" c:type="ArvStreamPrivate*"/>
      </field>
      <glib:signal name="new-buffer" when="last" version="0.2.0">
        <doc xml:space="preserve"
             filename="arvstream.c"
             line="381">Signal that a new buffer is available.

This signal is emited from the stream receive thread and only when the
"emit-signals" property is %TRUE.

The new buffer can be retrieved with arv_stream_pop_buffer().

Note that this signal is only emited when the "emit-signals" property is
set to %TRUE, which it is not by default for performance reasons.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <callback name="StreamCallback" c:type="ArvStreamCallback">
      <source-position filename="arvstream.h" line="47"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="0">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="StreamCallbackType" c:type="ArvStreamCallbackType"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="StreamCallbackType"
                 glib:type-name="ArvStreamCallbackType"
                 glib:get-type="arv_stream_callback_type_get_type"
                 c:type="ArvStreamCallbackType">
      <doc xml:space="preserve"
           filename="arvstream.h"
           line="30">Describes when the stream callback is called.</doc>
      <member name="init"
              value="0"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_INIT"
              glib:nick="init">
        <doc xml:space="preserve"
             filename="arvstream.h"
             line="32">thread initialization, happens once</doc>
      </member>
      <member name="exit"
              value="1"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_EXIT"
              glib:nick="exit">
        <doc xml:space="preserve"
             filename="arvstream.h"
             line="33">thread end, happens once</doc>
      </member>
      <member name="start_buffer"
              value="2"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_START_BUFFER"
              glib:nick="start-buffer">
        <doc xml:space="preserve"
             filename="arvstream.h"
             line="34">buffer filling start, happens at each frame</doc>
      </member>
      <member name="buffer_done"
              value="3"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_BUFFER_DONE"
              glib:nick="buffer-done">
        <doc xml:space="preserve"
             filename="arvstream.h"
             line="35">buffer filled, happens at each frame</doc>
      </member>
    </enumeration>
    <record name="StreamClass"
            c:type="ArvStreamClass"
            glib:is-gtype-struct-for="Stream">
      <source-position filename="arvstream.h" line="73"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_statistics">
        <callback name="get_statistics">
          <source-position filename="arvstream.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arvstream.c"
                   line="220">a #ArvStream</doc>
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
            <parameter name="n_completed_buffers"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="arvstream.c"
                   line="221">number of complete received buffers</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
            <parameter name="n_failures"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="arvstream.c"
                   line="222">number of reception failures</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
            <parameter name="n_underruns"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="arvstream.c"
                   line="223">number of input buffer underruns</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_buffer">
        <callback name="new_buffer">
          <source-position filename="arvstream.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="StreamPrivate" c:type="ArvStreamPrivate" disguised="1">
      <source-position filename="arvstream.h" line="56"/>
    </record>
    <record name="Zip" c:type="ArvZip" disguised="1">
      <source-position filename="arvtypes.h" line="86"/>
    </record>
    <record name="ZipFile" c:type="ArvZipFile" disguised="1">
      <source-position filename="arvtypes.h" line="87"/>
    </record>
    <function name="acquisition_mode_from_string"
              c:identifier="arv_acquisition_mode_from_string"
              moved-to="AcquisitionMode.from_string">
      <source-position filename="arvenums.h" line="75"/>
      <return-value transfer-ownership="none">
        <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="acquisition_mode_to_string"
              c:identifier="arv_acquisition_mode_to_string"
              moved-to="AcquisitionMode.to_string">
      <source-position filename="arvenums.h" line="74"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </parameter>
      </parameters>
    </function>
    <function name="auto_from_string"
              c:identifier="arv_auto_from_string"
              moved-to="Auto.from_string">
      <source-position filename="arvenums.h" line="61"/>
      <return-value transfer-ownership="none">
        <type name="Auto" c:type="ArvAuto"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="auto_to_string"
              c:identifier="arv_auto_to_string"
              moved-to="Auto.to_string">
      <source-position filename="arvenums.h" line="60"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="Auto" c:type="ArvAuto"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug" c:identifier="arv_debug" introspectable="0">
      <source-position filename="arvdebug.h" line="100"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_check" c:identifier="arv_debug_check">
      <source-position filename="arvdebug.h" line="103"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="DebugLevel" c:type="ArvDebugLevel"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_enable" c:identifier="arv_debug_enable">
      <doc xml:space="preserve"
           filename="arvdebug.c"
           line="209">Configures the debug output using a configuration string consisting of a comma separated list of debug categories or category/debug level pair. This function overwrites the configuration done by ARV_DEBUG environment variable.
For example, enabling debug level 3 of the gvcp category and default debug level of category genicam is done using:

&lt;informalexample&gt;&lt;programlisting&gt;
arv_debug_enable ("gvcp:3,genicam");
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
      <source-position filename="arvdebug.h" line="104"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category_selection" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdebug.c"
               line="211">debug category configuration string</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_shutdown" c:identifier="arv_debug_shutdown">
      <source-position filename="arvdebug.h" line="105"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="disable_interface" c:identifier="arv_disable_interface">
      <doc xml:space="preserve"
           filename="arvsystem.c"
           line="89">Disable an interface by name. By default, all interfaces are enabled, except "Fake".</doc>
      <source-position filename="arvsystem.h" line="33"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="interface_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvsystem.c"
               line="91">name of the interface</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dom_implementation_add_document_type"
              c:identifier="arv_dom_implementation_add_document_type">
      <source-position filename="arvdomimplementation.h" line="36"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="qualified_name" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="document_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="dom_implementation_cleanup"
              c:identifier="arv_dom_implementation_cleanup">
      <source-position filename="arvdomimplementation.h" line="39"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="dom_implementation_create_document"
              c:identifier="arv_dom_implementation_create_document">
      <doc xml:space="preserve"
           filename="arvdomimplementation.c"
           line="46">Create a new DOM document. Currently, only @qualified_name is used.</doc>
      <source-position filename="arvdomimplementation.h" line="34"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="arvdomimplementation.c"
             line="53">a new #ArvDomDocument, NULL on error:</doc>
        <type name="DomDocument" c:type="ArvDomDocument*"/>
      </return-value>
      <parameters>
        <parameter name="namespace_uri" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomimplementation.c"
               line="48">namespace URI</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="qualified_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvdomimplementation.c"
               line="49">qualified name</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="enable_interface" c:identifier="arv_enable_interface">
      <doc xml:space="preserve"
           filename="arvsystem.c"
           line="66">Enable an interface by name. By default, all interfaces are enabled, except "Fake".</doc>
      <source-position filename="arvsystem.h" line="32"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="interface_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvsystem.c"
               line="68">name of the interface</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_id" c:identifier="arv_get_device_id">
      <source-position filename="arvsystem.h" line="37"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_fake_camera_genicam_xml"
              c:identifier="arv_get_fake_camera_genicam_xml">
      <source-position filename="arvfakecamera.h" line="133"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gsize" c:type="size_t*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_interface_id" c:identifier="arv_get_interface_id">
      <source-position filename="arvsystem.h" line="31"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_n_devices" c:identifier="arv_get_n_devices">
      <source-position filename="arvsystem.h" line="36"/>
      <return-value transfer-ownership="none">
        <type name="guint" c:type="unsigned int"/>
      </return-value>
    </function>
    <function name="get_n_interfaces" c:identifier="arv_get_n_interfaces">
      <source-position filename="arvsystem.h" line="30"/>
      <return-value transfer-ownership="none">
        <type name="guint" c:type="unsigned int"/>
      </return-value>
    </function>
    <function name="log" c:identifier="arv_log" introspectable="0">
      <source-position filename="arvdebug.h" line="101"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="make_thread_high_priority"
              c:identifier="arv_make_thread_high_priority"
              version="0.4.0">
      <source-position filename="arvrealtime.h" line="9"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arvrealtime.c"
             line="286">%TRUE on success.

Try to set current thread nice level to high priority, using rtkit.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="nice_level" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvrealtime.c"
               line="284">new nice level</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="make_thread_realtime"
              c:identifier="arv_make_thread_realtime"
              version="0.4.0">
      <source-position filename="arvrealtime.h" line="8"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arvrealtime.c"
             line="229">%TRUE on success.

Try to make current thread realtime. It first try to use sched_setscheduler,
and if it fails, use rtkit.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="priority" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arvrealtime.c"
               line="227">realtime priority</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_device" c:identifier="arv_open_device">
      <doc xml:space="preserve"
           filename="arvsystem.c"
           line="169">Open a device corresponding to the given identifier. A null string makes this function return the first available device.</doc>
      <source-position filename="arvsystem.h" line="39"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="arvsystem.c"
             line="175">a new #ArvDevice instance</doc>
        <type name="Device" c:type="ArvDevice*"/>
      </return-value>
      <parameters>
        <parameter name="device_id"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="arvsystem.c"
               line="171">a device identifier string</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_fake_camera_genicam_filename"
              c:identifier="arv_set_fake_camera_genicam_filename">
      <source-position filename="arvfakecamera.h" line="132"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="shutdown" c:identifier="arv_shutdown">
      <source-position filename="arvsystem.h" line="41"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="update_device_list" c:identifier="arv_update_device_list">
      <source-position filename="arvsystem.h" line="35"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="warning" c:identifier="arv_warning" introspectable="0">
      <source-position filename="arvdebug.h" line="99"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <varargs/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
