// Generated by gencpp from file bcap_service/bcap.msg
// DO NOT EDIT!


#ifndef BCAP_SERVICE_MESSAGE_BCAP_H
#define BCAP_SERVICE_MESSAGE_BCAP_H

#include <ros/service_traits.h>


#include <bcap_service/bcapRequest.h>
#include <bcap_service/bcapResponse.h>


namespace bcap_service
{

struct bcap
{

typedef bcapRequest Request;
typedef bcapResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct bcap
} // namespace bcap_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::bcap_service::bcap > {
  static const char* value()
  {
    return "d7da50225be5d246d6e3baaab811da16";
  }

  static const char* value(const ::bcap_service::bcap&) { return value(); }
};

template<>
struct DataType< ::bcap_service::bcap > {
  static const char* value()
  {
    return "bcap_service/bcap";
  }

  static const char* value(const ::bcap_service::bcap&) { return value(); }
};


// service_traits::MD5Sum< ::bcap_service::bcapRequest> should match
// service_traits::MD5Sum< ::bcap_service::bcap >
template<>
struct MD5Sum< ::bcap_service::bcapRequest>
{
  static const char* value()
  {
    return MD5Sum< ::bcap_service::bcap >::value();
  }
  static const char* value(const ::bcap_service::bcapRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::bcap_service::bcapRequest> should match
// service_traits::DataType< ::bcap_service::bcap >
template<>
struct DataType< ::bcap_service::bcapRequest>
{
  static const char* value()
  {
    return DataType< ::bcap_service::bcap >::value();
  }
  static const char* value(const ::bcap_service::bcapRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::bcap_service::bcapResponse> should match
// service_traits::MD5Sum< ::bcap_service::bcap >
template<>
struct MD5Sum< ::bcap_service::bcapResponse>
{
  static const char* value()
  {
    return MD5Sum< ::bcap_service::bcap >::value();
  }
  static const char* value(const ::bcap_service::bcapResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::bcap_service::bcapResponse> should match
// service_traits::DataType< ::bcap_service::bcap >
template<>
struct DataType< ::bcap_service::bcapResponse>
{
  static const char* value()
  {
    return DataType< ::bcap_service::bcap >::value();
  }
  static const char* value(const ::bcap_service::bcapResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BCAP_SERVICE_MESSAGE_BCAP_H
